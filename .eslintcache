[{"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\index.js":"1","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Store\\index.js":"2","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\index.js":"3","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Router\\index.js":"4","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\LoadingAlert.js":"5","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\FormReport.js":"6","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectCity.js":"7","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectDistrict.js":"8","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\DataTable.js":"9","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectService.js":"10","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectWard.js":"11","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\ChartTemp.js":"12","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Router\\Routers.js":"13","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\index.js":"14","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\index.js":"15","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Services\\Api.js":"16","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\MainAction.js":"17","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\MainAction.js":"18","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\Category\\Location.js":"19","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\TestSaga.js":"20","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\GetLadingTemporary.js":"21","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\TimelineTransport.js":"22","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\CustomerSenderAddress.js":"23","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Location.js":"24","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Service.js":"25","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Lading.js":"26","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerOrder.js":"27","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerComplain.js":"28","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerSaga.js":"29","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Reports\\ReportSagas.js":"30","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\index.js":"31","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\index.js":"32","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\index.js":"33","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\index.js":"34","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\index.js":"35","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\index.js":"36","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\index.js":"37","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\index.js":"38","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\Notification.js":"39","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ScrollTop.js":"40","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\MainTypes.js":"41","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\Storage.js":"42","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\EncodeString.js":"43","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\MainAction.js":"44","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\DecodeString.js":"45","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ExportExcel.js":"46","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\PaginationTable.js":"47","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidEmail.js":"48","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidPassword.js":"49","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidPhone.js":"50","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidNumber.js":"51","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatMoney.js":"52","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\PaginationTable2.js":"53","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatDate.js":"54","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatDateJson.js":"55","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\GetCookieValue.js":"56","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatNumber.js":"57","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Service.js":"58","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\ServiceType.js":"59","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Location.js":"60","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\LocationType.js":"61","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Lading.js":"62","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\LadingType.js":"63","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Services\\index.js":"64","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\Test.js":"65","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\TextBoss.js":"66","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\index.js":"67","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\index.js":"68","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\LadingPrintFromExcelAveryComponent.js":"69","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\index.js":"70","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\HomeComponent.js":"71","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\CustomerComplain.js":"72","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\CustomerComplainList.js":"73","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingCreateComponent.js":"74","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\PaymentReportComponent.js":"75","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\CustomerPaymentDealineComponent.js":"76","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseInventoryReportComponent.js":"77","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseTranportReportComponent.js":"78","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseOutputReportComponent.js":"79","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\OutstandingDebtReportComponent.js":"80","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseImportReportComponent.js":"81","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\KpiDeliveryCODReportComponent.js":"82","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\OverViewReportComponent.js":"83","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\FooterMenu.js":"84","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\HeaderMenu.js":"85","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\LeftMenu.js":"86","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\LadingTemporaryAction.js":"87","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TestTypeAction.js":"88","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\LadingTemporaryTypeAction.js":"89","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TimelineTransportAction.js":"90","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\CustomerSenderAddressTypeAction.js":"91","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\CustomerSenderAddressAction.js":"92","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\CustomerAction.js":"93","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TimelineTransportTypeAction.js":"94","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TestAction.js":"95","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\CustomerTypeAction.js":"96","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\ReportAction.js":"97","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\ReportTypeAction.js":"98","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Hooks\\index.js":"99","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Hooks\\useInput.js":"100","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\GetLadingTemporary.js":"101","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\PostOfficeComponent.js":"102","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\TimelineTransport.js":"103","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ChangePasswordComponent.js":"104","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\CustomerSenderComponent.js":"105","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\CustomerRecipientComponent.js":"106","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\LoginComponent.js":"107","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ForgotPasswordComponent.js":"108","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ProfiveComponent.js":"109","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\RegisterComponent.js":"110","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ResetPasswordComponent.js":"111","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\VerificationComponent.js":"112","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingExcelComponent.js":"113","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingGetPriceComponent.js":"114","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LookupLading.js":"115","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\SearchLading.js":"116","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectSender.js":"117","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectRecipient.js":"118","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\LadingDetail.js":"119","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\TestChart.js":"120","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\CanvasChart.js":"121","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\GetLatLngGoogle.js":"122","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\index.js":"123","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Store\\index.js":"124","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Router\\index.js":"125","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\index.js":"126","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Router\\Routers.js":"127","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\LoadingAlert.js":"128","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\DataTable.js":"129","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Reducers\\index.js":"130","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Sagas\\index.js":"131","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Services\\Api.js":"132","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Reducers\\MainAction.js":"133","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Sagas\\MainAction.js":"134","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\index.js":"135","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\index.js":"136","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\index.js":"137","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\MainTypes.js":"138","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\MainAction.js":"139","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\Storage.js":"140","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\Notification.js":"141","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\PaginationTable.js":"142","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ScrollTop.js":"143","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ExportExcel.js":"144","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\DecodeString.js":"145","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\EncodeString.js":"146","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidEmail.js":"147","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\PaginationTable2.js":"148","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidPhone.js":"149","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidPassword.js":"150","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\GetCookieValue.js":"151","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidNumber.js":"152","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatNumber.js":"153","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatMoney.js":"154","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\GetLatLngGoogle.js":"155","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatDate.js":"156","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatDateJson.js":"157","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Services\\index.js":"158","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\LeftMenu.js":"159","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\HeaderMenu.js":"160","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\FooterMenu.js":"161","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Hooks\\index.js":"162","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Hooks\\useInput.js":"163","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\index.js":"164","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Home.js":"165","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\index.js":"166","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\TopMenu.js":"167","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\AboutUs.js":"168","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Partners.js":"169","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Services.js":"170","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\News.js":"171","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Contacts.js":"172","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Login.js":"173","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Register.js":"174","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Branch.js":"175","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Language\\index.js":"176","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Constants\\index.js":"177","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Constants\\currentLang.js":"178","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Enum\\index.js":"179","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Carreers.js":"180","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\ServiceDetail.js":"181"},{"size":724,"mtime":1621319449065,"results":"182","hashOfConfig":"183"},{"size":574,"mtime":1621319448673,"results":"184","hashOfConfig":"183"},{"size":387,"mtime":1622515310539,"results":"185","hashOfConfig":"183"},{"size":25,"mtime":1621319448179,"results":"186","hashOfConfig":"183"},{"size":984,"mtime":1621319448142,"results":"187","hashOfConfig":"183"},{"size":3290,"mtime":1621319448163,"results":"188","hashOfConfig":"183"},{"size":4058,"mtime":1621319448134,"results":"189","hashOfConfig":"183"},{"size":1601,"mtime":1624457559061,"results":"190","hashOfConfig":"183"},{"size":1254,"mtime":1621319448162,"results":"191","hashOfConfig":"183"},{"size":1789,"mtime":1624446353394,"results":"192","hashOfConfig":"183"},{"size":1610,"mtime":1624457570342,"results":"193","hashOfConfig":"183"},{"size":1667,"mtime":1621319448141,"results":"194","hashOfConfig":"183"},{"size":6529,"mtime":1625065507650,"results":"195","hashOfConfig":"183"},{"size":294,"mtime":1621319448637,"results":"196","hashOfConfig":"183"},{"size":1236,"mtime":1621319448470,"results":"197","hashOfConfig":"183"},{"size":1108,"mtime":1625055539951,"results":"198","hashOfConfig":"183"},{"size":396,"mtime":1621319448662,"results":"199","hashOfConfig":"183"},{"size":2511,"mtime":1621319448448,"results":"200","hashOfConfig":"183"},{"size":1338,"mtime":1621319448623,"results":"201","hashOfConfig":"183"},{"size":2992,"mtime":1621319448424,"results":"202","hashOfConfig":"183"},{"size":2688,"mtime":1621319448422,"results":"203","hashOfConfig":"183"},{"size":1511,"mtime":1621319448425,"results":"204","hashOfConfig":"183"},{"size":3881,"mtime":1621319448423,"results":"205","hashOfConfig":"183"},{"size":5157,"mtime":1621319448394,"results":"206","hashOfConfig":"183"},{"size":1373,"mtime":1621319448396,"results":"207","hashOfConfig":"183"},{"size":13898,"mtime":1621319448393,"results":"208","hashOfConfig":"183"},{"size":3076,"mtime":1621319448350,"results":"209","hashOfConfig":"183"},{"size":3178,"mtime":1621319448349,"results":"210","hashOfConfig":"183"},{"size":24058,"mtime":1625055595312,"results":"211","hashOfConfig":"183"},{"size":22260,"mtime":1621319448466,"results":"212","hashOfConfig":"183"},{"size":125,"mtime":1621319448610,"results":"213","hashOfConfig":"183"},{"size":622,"mtime":1624941056450,"results":"214","hashOfConfig":"183"},{"size":331,"mtime":1621319448519,"results":"215","hashOfConfig":"183"},{"size":119,"mtime":1621319448063,"results":"216","hashOfConfig":"183"},{"size":449,"mtime":1621319447673,"results":"217","hashOfConfig":"183"},{"size":381,"mtime":1624471454136,"results":"218","hashOfConfig":"183"},{"size":170,"mtime":1621839749343,"results":"219","hashOfConfig":"183"},{"size":462,"mtime":1622515333545,"results":"220","hashOfConfig":"183"},{"size":447,"mtime":1621319448300,"results":"221","hashOfConfig":"183"},{"size":63,"mtime":1621319448297,"results":"222","hashOfConfig":"183"},{"size":400,"mtime":1621319448511,"results":"223","hashOfConfig":"183"},{"size":529,"mtime":1621319448299,"results":"224","hashOfConfig":"183"},{"size":143,"mtime":1621319448295,"results":"225","hashOfConfig":"183"},{"size":1009,"mtime":1621319448510,"results":"226","hashOfConfig":"183"},{"size":141,"mtime":1621319448294,"results":"227","hashOfConfig":"183"},{"size":601,"mtime":1621319448292,"results":"228","hashOfConfig":"183"},{"size":748,"mtime":1621319448296,"results":"229","hashOfConfig":"183"},{"size":466,"mtime":1621319448288,"results":"230","hashOfConfig":"183"},{"size":447,"mtime":1621319448290,"results":"231","hashOfConfig":"183"},{"size":196,"mtime":1621319448291,"results":"232","hashOfConfig":"183"},{"size":311,"mtime":1621319448287,"results":"233","hashOfConfig":"183"},{"size":460,"mtime":1621319448282,"results":"234","hashOfConfig":"183"},{"size":750,"mtime":1621319448293,"results":"235","hashOfConfig":"183"},{"size":1620,"mtime":1621319448285,"results":"236","hashOfConfig":"183"},{"size":756,"mtime":1623344005933,"results":"237","hashOfConfig":"183"},{"size":317,"mtime":1621319448284,"results":"238","hashOfConfig":"183"},{"size":383,"mtime":1621319448280,"results":"239","hashOfConfig":"183"},{"size":300,"mtime":1621319448514,"results":"240","hashOfConfig":"183"},{"size":140,"mtime":1621319448516,"results":"241","hashOfConfig":"183"},{"size":1831,"mtime":1621319448517,"results":"242","hashOfConfig":"183"},{"size":844,"mtime":1621319448518,"results":"243","hashOfConfig":"183"},{"size":3510,"mtime":1621319448512,"results":"244","hashOfConfig":"183"},{"size":830,"mtime":1621319448513,"results":"245","hashOfConfig":"183"},{"size":21,"mtime":1621319448688,"results":"246","hashOfConfig":"183"},{"size":14784,"mtime":1621319447984,"results":"247","hashOfConfig":"248"},{"size":18117,"mtime":1621319448002,"results":"249","hashOfConfig":"248"},{"size":763,"mtime":1621319448587,"results":"250","hashOfConfig":"183"},{"size":163,"mtime":1621319448537,"results":"251","hashOfConfig":"183"},{"size":26208,"mtime":1621483572027,"results":"252","hashOfConfig":"183"},{"size":150,"mtime":1621319448549,"results":"253","hashOfConfig":"183"},{"size":9663,"mtime":1625210117292,"results":"254","hashOfConfig":"183"},{"size":9410,"mtime":1621483927487,"results":"255","hashOfConfig":"183"},{"size":7580,"mtime":1622445737154,"results":"256","hashOfConfig":"183"},{"size":133671,"mtime":1625058809099,"results":"257","hashOfConfig":"183"},{"size":8682,"mtime":1623344124119,"results":"258","hashOfConfig":"183"},{"size":8176,"mtime":1623344253361,"results":"259","hashOfConfig":"183"},{"size":13062,"mtime":1621484000331,"results":"260","hashOfConfig":"183"},{"size":15491,"mtime":1621484010278,"results":"261","hashOfConfig":"183"},{"size":12853,"mtime":1621484005279,"results":"262","hashOfConfig":"183"},{"size":8011,"mtime":1623344238069,"results":"263","hashOfConfig":"183"},{"size":13144,"mtime":1621483996871,"results":"264","hashOfConfig":"183"},{"size":16364,"mtime":1622013695376,"results":"265","hashOfConfig":"183"},{"size":12818,"mtime":1622575552889,"results":"266","hashOfConfig":"183"},{"size":2035,"mtime":1621319448061,"results":"267","hashOfConfig":"183"},{"size":7977,"mtime":1625065001489,"results":"268","hashOfConfig":"183"},{"size":18210,"mtime":1625064992358,"results":"269","hashOfConfig":"183"},{"size":632,"mtime":1621319448593,"results":"270","hashOfConfig":"183"},{"size":274,"mtime":1621319448597,"results":"271","hashOfConfig":"183"},{"size":150,"mtime":1621319448595,"results":"272","hashOfConfig":"183"},{"size":336,"mtime":1621319448591,"results":"273","hashOfConfig":"183"},{"size":268,"mtime":1621319448590,"results":"274","hashOfConfig":"183"},{"size":994,"mtime":1621319448588,"results":"275","hashOfConfig":"183"},{"size":5439,"mtime":1624897745062,"results":"276","hashOfConfig":"183"},{"size":68,"mtime":1621319448592,"results":"277","hashOfConfig":"183"},{"size":561,"mtime":1621319448596,"results":"278","hashOfConfig":"183"},{"size":1494,"mtime":1624897769167,"results":"279","hashOfConfig":"183"},{"size":6202,"mtime":1621319448547,"results":"280","hashOfConfig":"183"},{"size":1716,"mtime":1621319448548,"results":"281","hashOfConfig":"183"},{"size":28,"mtime":1621319448699,"results":"282","hashOfConfig":"183"},{"size":393,"mtime":1621319448698,"results":"283","hashOfConfig":"183"},{"size":7742,"mtime":1622576928762,"results":"284","hashOfConfig":"183"},{"size":5779,"mtime":1621831675510,"results":"285","hashOfConfig":"183"},{"size":6038,"mtime":1622447035974,"results":"286","hashOfConfig":"183"},{"size":7879,"mtime":1625712999641,"results":"287","hashOfConfig":"183"},{"size":15132,"mtime":1623314610830,"results":"288","hashOfConfig":"183"},{"size":18005,"mtime":1625054668813,"results":"289","hashOfConfig":"183"},{"size":14066,"mtime":1624940083069,"results":"290","hashOfConfig":"183"},{"size":3809,"mtime":1625060496304,"results":"291","hashOfConfig":"183"},{"size":17780,"mtime":1625192262754,"results":"292","hashOfConfig":"183"},{"size":16771,"mtime":1625713002759,"results":"293","hashOfConfig":"183"},{"size":6305,"mtime":1625712995614,"results":"294","hashOfConfig":"183"},{"size":5239,"mtime":1621914845675,"results":"295","hashOfConfig":"183"},{"size":20921,"mtime":1624471454075,"results":"296","hashOfConfig":"183"},{"size":13544,"mtime":1624471454088,"results":"297","hashOfConfig":"183"},{"size":35081,"mtime":1624471454162,"results":"298","hashOfConfig":"183"},{"size":54809,"mtime":1624471454100,"results":"299","hashOfConfig":"183"},{"size":3597,"mtime":1624450996889,"results":"300","hashOfConfig":"183"},{"size":2882,"mtime":1624965840948,"results":"301","hashOfConfig":"183"},{"size":22780,"mtime":1624502473128,"results":"302","hashOfConfig":"183"},{"size":1385,"mtime":1622574381639,"results":"303","hashOfConfig":"183"},{"size":603,"mtime":1622574431487,"results":"304","hashOfConfig":"183"},{"size":691,"mtime":1623985976133,"results":"305","hashOfConfig":"183"},{"size":724,"mtime":1621319449065,"results":"306","hashOfConfig":"307"},{"size":574,"mtime":1621319448673,"results":"308","hashOfConfig":"307"},{"size":25,"mtime":1621319448179,"results":"309","hashOfConfig":"307"},{"size":61,"mtime":1626345132561,"results":"310","hashOfConfig":"307"},{"size":1649,"mtime":1626857820108,"results":"311","hashOfConfig":"307"},{"size":937,"mtime":1626445696148,"results":"312","hashOfConfig":"307"},{"size":1254,"mtime":1621319448162,"results":"313","hashOfConfig":"307"},{"size":211,"mtime":1626344594795,"results":"314","hashOfConfig":"307"},{"size":179,"mtime":1626344618109,"results":"315","hashOfConfig":"307"},{"size":1015,"mtime":1626946309013,"results":"316","hashOfConfig":"307"},{"size":396,"mtime":1621319448662,"results":"317","hashOfConfig":"307"},{"size":3573,"mtime":1626860291006,"results":"318","hashOfConfig":"307"},{"size":125,"mtime":1621319448610,"results":"319","hashOfConfig":"307"},{"size":622,"mtime":1624941056450,"results":"320","hashOfConfig":"307"},{"size":117,"mtime":1626151417774,"results":"321","hashOfConfig":"307"},{"size":464,"mtime":1626677652883,"results":"322","hashOfConfig":"307"},{"size":1279,"mtime":1626677637323,"results":"323","hashOfConfig":"307"},{"size":529,"mtime":1621319448299,"results":"324","hashOfConfig":"307"},{"size":447,"mtime":1621319448300,"results":"325","hashOfConfig":"307"},{"size":748,"mtime":1621319448296,"results":"326","hashOfConfig":"307"},{"size":63,"mtime":1621319448297,"results":"327","hashOfConfig":"307"},{"size":601,"mtime":1621319448292,"results":"328","hashOfConfig":"307"},{"size":181,"mtime":1626864751832,"results":"329","hashOfConfig":"307"},{"size":163,"mtime":1626863820728,"results":"330","hashOfConfig":"307"},{"size":466,"mtime":1621319448288,"results":"331","hashOfConfig":"307"},{"size":750,"mtime":1621319448293,"results":"332","hashOfConfig":"307"},{"size":196,"mtime":1621319448291,"results":"333","hashOfConfig":"307"},{"size":447,"mtime":1621319448290,"results":"334","hashOfConfig":"307"},{"size":683,"mtime":1626865712161,"results":"335","hashOfConfig":"307"},{"size":311,"mtime":1621319448287,"results":"336","hashOfConfig":"307"},{"size":383,"mtime":1621319448280,"results":"337","hashOfConfig":"307"},{"size":460,"mtime":1621319448282,"results":"338","hashOfConfig":"307"},{"size":691,"mtime":1623985976133,"results":"339","hashOfConfig":"307"},{"size":1620,"mtime":1621319448285,"results":"340","hashOfConfig":"307"},{"size":756,"mtime":1623344005933,"results":"341","hashOfConfig":"307"},{"size":21,"mtime":1626681307634,"results":"342","hashOfConfig":"307"},{"size":100,"mtime":1626251091833,"results":"343","hashOfConfig":"307"},{"size":2655,"mtime":1626921960894,"results":"344","hashOfConfig":"307"},{"size":5019,"mtime":1626868798628,"results":"345","hashOfConfig":"307"},{"size":28,"mtime":1621319448699,"results":"346","hashOfConfig":"307"},{"size":393,"mtime":1621319448698,"results":"347","hashOfConfig":"307"},{"size":0,"mtime":1626145595778,"results":"348","hashOfConfig":"307"},{"size":26927,"mtime":1626885628614,"results":"349","hashOfConfig":"307"},{"size":308,"mtime":1626857774521,"results":"350","hashOfConfig":"307"},{"size":2342,"mtime":1626921551610,"results":"351","hashOfConfig":"307"},{"size":2351,"mtime":1626869844362,"results":"352","hashOfConfig":"307"},{"size":1812,"mtime":1626919607056,"results":"353","hashOfConfig":"307"},{"size":4921,"mtime":1626858007391,"results":"354","hashOfConfig":"307"},{"size":1865,"mtime":1626836888107,"results":"355","hashOfConfig":"307"},{"size":4294,"mtime":1626883341927,"results":"356","hashOfConfig":"307"},{"size":4960,"mtime":1626884583328,"results":"357","hashOfConfig":"307"},{"size":3782,"mtime":1626885255088,"results":"358","hashOfConfig":"307"},{"size":7062,"mtime":1626773465442,"results":"359","hashOfConfig":"307"},{"size":260,"mtime":1621309874916,"results":"360","hashOfConfig":"307"},{"size":148,"mtime":1626750568654,"results":"361","hashOfConfig":"307"},{"size":181,"mtime":1621309875331,"results":"362","hashOfConfig":"307"},{"size":84,"mtime":1621309875364,"results":"363","hashOfConfig":"307"},{"size":209,"mtime":1626763606445,"results":"364","hashOfConfig":"307"},{"size":2353,"mtime":1626886261998,"results":"365","hashOfConfig":"307"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},"tlb8kk",{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"368"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"368"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"368"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"368"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"368"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"368"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"368"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"368"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"368"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"368"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"368"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"368"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"368"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"368"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"368"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"368"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"368"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"368"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"368"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"368"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"368"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"368"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"368"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"368"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"368"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"368"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"524"},"128fsly",{"filePath":"525","messages":"526","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"524"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"368"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"368"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"368"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"368"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":92,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"368"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"368"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"368"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"368"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"368"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"368"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"368"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"368"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"368"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"368"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"578","usedDeprecatedRules":"368"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"368"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"368"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"368"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"368"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"368"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"624","messages":"625","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"368"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"368"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"368"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"368"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"368"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"368"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"368"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"368"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"368"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"368"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"368"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"368"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"368"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"368"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"368"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},"izdecg",{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"677"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"677"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"677"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"677"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"677"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"677"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"736","messages":"737","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"677"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"677"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"677"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"757","usedDeprecatedRules":"677"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"766","usedDeprecatedRules":"677"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771","usedDeprecatedRules":"677"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"677"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"677"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"780","messages":"781","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"782","messages":"783","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"784","messages":"785","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"786","usedDeprecatedRules":"677"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"677"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"677"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"677"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"677"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"677"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\index.js",[],["807","808"],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Store\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Router\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\LoadingAlert.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\FormReport.js",["809"],"import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nconst FormReportComp = ({\r\n    isVisible = false,\r\n    setIsVisible = () => { },\r\n    onFromDate = () => { },\r\n    onToDate = () => { },\r\n    onClickDate = () => { },\r\n    title = '',\r\n}) => {\r\n\r\n\r\n    const [fdate, onFdate] = useState(new Date());\r\n    const FromDate = (item) => {\r\n        onFromDate({fromDate:item});\r\n        onFdate(item);\r\n    }\r\n    \r\n    const [tdate, onTdate] = useState(new Date());\r\n    const ToDate = (item) => {\r\n        onToDate({toDate:item});\r\n        onTdate(item);\r\n    }\r\n\r\n    const ClickDate = () => {\r\n        onClickDate();\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n    }, []);\r\n    \r\n    return (\r\n\r\n        \r\n        <div className=\"col-md-12\">\r\n            <div className=\"card-header card-header-primary\">\r\n                 <h4 className=\"card-title\">{title}</h4>\r\n            </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                \r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                           <div className=\"col-md-6\">\r\n                                <label className=\"control-label\">Từ ngày(dd/MM/yy)</label>\r\n                           </div>\r\n                           <div className=\"col-md-8\">\r\n                            <div className=\"form-group bmd-form-group\">\r\n                                <DateTimePicker\r\n                                    onChange={date => FromDate(date)}\r\n                                    value={fdate}\r\n                                />\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                           <div className=\"col-md-6\">\r\n                                <label className=\"control-label\">Đến ngày(dd/MM/yy)</label>\r\n                           </div>\r\n                           <div className=\"col-md-8\">\r\n                            <div className=\"form-group bmd-form-group\">\r\n                                <DateTimePicker\r\n                                    onChange={date => ToDate(date)}\r\n                                    value={tdate}\r\n                                />\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"card-body\">\r\n                            <button onClick={ClickDate} type=\"button\" className=\"btn btn-danger pull-right\">\r\n                            <i className=\"material-icons\">edit</i>\r\n                            Xác nhận?\r\n                            </button>\r\n                            <button  type=\"submit\" className=\"btn btn-default pull-right\">\r\n                            <i className=\"material-icons\">undo</i>\r\n                            Hủy\r\n                            </button>\r\n                        </div>\r\n                    <div className=\"clearfix\"></div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const FormReport = React.memo(FormReportComp)","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectCity.js",["810","811","812"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst SelectCityComp = React.forwardRef(({\r\n  Disabled = false,\r\n  onSelected = () => { },\r\n  onActive = 0\r\n}, ref) => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn tỉnh thành\" });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n  const getListCityFromLocal = async () => {\r\n    const listState = [\r\n      { value: 0, label: \"Chọn tỉnh thành\" },\r\n      { value: 1, label: \"Hà Nội\" },\r\n      { value: 32, label: \"Đà Nẵng\" },\r\n      { value: 50, label: \"Hồ Chí Minh\" },\r\n      { value: 47, label: \"Bình Dương\" },\r\n      { value: 59, label: \"Cần Thơ\" },\r\n      { value: 2, label: \"Hà Giang\" },\r\n      { value: 3, label: \"Cao Bằng\" },\r\n      { value: 4, label: \"Bắc Kạn\" },\r\n      { value: 5, label: \"Tuyên Quang\" },\r\n      { value: 6, label: \"Lào Cai\" },\r\n      { value: 7, label: \"Điện Biên\" },\r\n      { value: 8, label: \"Lai Châu\" },\r\n      { value: 9, label: \"Sơn La\" },\r\n      { value: 10, label: \"Yên Bái\" },\r\n      { value: 11, label: \"Hòa Bình\" },\r\n      { value: 12, label: \"Thái Nguyên\" },\r\n      { value: 13, label: \"Lạng Sơn\" },\r\n      { value: 14, label: \"Quảng Ninh\" },\r\n      { value: 15, label: \"Bắc Giang\" },\r\n      { value: 16, label: \"Phú Thọ\" },\r\n      { value: 17, label: \"Vĩnh Phúc\" },\r\n      { value: 18, label: \"Bắc Ninh\" },\r\n      { value: 19, label: \"Hải Dương\" },\r\n      { value: 20, label: \"Hải Phòng\" },\r\n      { value: 21, label: \"Hưng Yên\" },\r\n      { value: 22, label: \"Thái Bình\" },\r\n      { value: 23, label: \"Hà Nam\" },\r\n      { value: 24, label: \"Nam Định\" },\r\n      { value: 25, label: \"Ninh Bình\" },\r\n      { value: 26, label: \"Thanh Hóa\" },\r\n      { value: 27, label: \"Nghệ An\" },\r\n      { value: 28, label: \"Hà Tĩnh\" },\r\n      { value: 29, label: \"Quảng Bình\" },\r\n      { value: 30, label: \"Quảng Trị\" },\r\n      { value: 31, label: \"Huế\" },\r\n      { value: 33, label: \"Quảng Nam\" },\r\n      { value: 34, label: \"Quảng Ngãi\" },\r\n      { value: 35, label: \"Bình Định\" },\r\n      { value: 36, label: \"Phú Yên\" },\r\n      { value: 37, label: \"Khánh Hòa\" },\r\n      { value: 38, label: \"Ninh Thuận\" },\r\n      { value: 39, label: \"Bình Thuận\" },\r\n      { value: 40, label: \"Kon Tum\" },\r\n      { value: 41, label: \"Gia Lai\" },\r\n      { value: 42, label: \"Đắk Lắk\" },\r\n      { value: 43, label: \"Đắk Nông\" },\r\n      { value: 44, label: \"Lâm Đồng\" },\r\n      { value: 45, label: \"Bình Phước\" },\r\n      { value: 46, label: \"Tây Ninh\" },\r\n      { value: 48, label: \"Đồng Nai\" },\r\n      { value: 49, label: \"Vũng Tàu\" },\r\n      { value: 51, label: \"Long An\" },\r\n      { value: 52, label: \"Tiền Giang\" },\r\n      { value: 53, label: \"Bến Tre\" },\r\n      { value: 54, label: \"Trà Vinh\" },\r\n      { value: 55, label: \"Vĩnh Long\" },\r\n      { value: 56, label: \"Đồng Tháp\" },\r\n      { value: 57, label: \"An Giang\" },\r\n      { value: 58, label: \"Kiên Giang\" },\r\n      { value: 60, label: \"Hậu Giang\" },\r\n      { value: 61, label: \"Sóc Trăng\" },\r\n      { value: 62, label: \"Bạc Liêu\" },\r\n      { value: 63, label: \"Cà Mau\" },\r\n    ];\r\n    setData(listState);\r\n    if (onActive !== 0) {\r\n      let dataActive = listState.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListCityFromLocal();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  return (\r\n    <Select\r\n      isDisabled={Disabled}\r\n      value={valueS}\r\n      onChange={onSelecteItem}\r\n      options={data}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nexport const SelectCity = React.memo(SelectCityComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectDistrict.js",["813","814","815","816"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Location } from \"../Redux/Actions/Category\";\r\nimport { APIKey } from \"../Services/Api\";\r\nconst SelectDistrictComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  ParentID = 0,\r\n  onActive = 0,\r\n  Disabled = false\r\n}, ref) => {\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn quận huyện\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onGetLocation = async () => {\r\n    if (ParentID === 0) return;\r\n    const params = {\r\n      AppAPIKey: APIKey,\r\n      ParentID: ParentID,\r\n      Type: 2,\r\n    };\r\n    const list = await Location.GET_LOCATION(params, dispatch);\r\n\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.LocationId, label: element.Name };\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    if (onActive !== 0) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    } else  setValueS(_default);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetLocation();\r\n  }, [onActive,ParentID]);\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} isDisabled={Disabled} />;\r\n});\r\n\r\nexport const SelectDistrict = React.memo(SelectDistrictComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\DataTable.js",["817","818","819"],"import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport ReactTable from \"react-table-6\";\r\nimport 'react-table-6/react-table.css';\r\nconst DataTableComp = ({\r\n    data = () => { },\r\n    columns = () => { },\r\n    IsLoad = false\r\n}) => {\r\n\r\n    useEffect(() => {\r\n       \r\n    }, []);\r\n    \r\n    return (\r\n        <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            defaultPageSize={10}\r\n            className=\"-striped -highlight\"\r\n            /* SubComponent={row => {\r\n                return(\r\n                    <input type=\"button\" value=\"Edit\"/>\r\n                )\r\n                }}  */\r\n            filterable={true}   \r\n            // Text\r\n            previousText='<'\r\n            nextText= '>'\r\n            loadingText= 'Loading...'\r\n            noDataText= 'Không tìm thấy dữ liệu'\r\n            pageText= 'Trang'\r\n            ofText= 'của'\r\n            rowsText= 'dòng'\r\n            \r\n            // Accessibility Labels\r\n            pageJumpText= 'chuyển đến trang'\r\n            rowsSelectorText= 'số dòng trên trang '\r\n\r\n        />\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const DataTable = React.memo(DataTableComp)","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectService.js",["820","821","822","823"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Service } from \"../Redux/Actions/Category\";\r\nimport { APIKey } from \"../Services/Api\";\r\nconst SelectServiceComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n}, ref) => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(onActive);\r\n  const [_default, setDefault] = useState({ value: 33, label: \"Chuyển phát nhanh\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    APIC_spServiceGetMany();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      APIC_spServiceGetMany();\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  const APIC_spServiceGetMany = async () => {\r\n    const params = {\r\n      AppAPIKey: APIKey,\r\n      Type: 0,\r\n    };\r\n    const list = await Service.APIC_spServiceGetMany(params, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push({value:0,label:\"Chọn dịch vụ\"});\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.ServiceID, label: element.ServiceName, code: element.ServiceCode };\r\n      dataOptions.push(option);\r\n      if (element.ServiceID === onActive)\r\n        IsActive = 1\r\n    });\r\n    setData(dataOptions);\r\n    if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectService = React.memo(SelectServiceComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectWard.js",["824","825","826","827"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Location } from \"../Redux/Actions/Category\";\r\nimport { APIKey } from \"../Services/Api\";\r\nconst SelectWardComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  ParentID = 0,\r\n  Disabled = false\r\n}, ref) => {\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn phường xã\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onGetLocation = async () => {\r\n    if (ParentID === 0 || ParentID === undefined) return;\r\n    const params = {\r\n      AppAPIKey: APIKey,\r\n      ParentID: ParentID,\r\n      Type: 3,\r\n    };\r\n    const list = await Location.GET_LOCATION(params, dispatch);\r\n\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.LocationId, label: element.Name };\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    if (onActive !== 0) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }else setValueS(_default);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetLocation();\r\n  }, [onActive,ParentID]);\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} isDisabled={Disabled} ref={ref} />;\r\n});\r\n\r\nexport const SelectWard = React.memo(SelectWardComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\ChartTemp.js",["828","829","830"],"import React from \"react\";\r\nimport { Chart } from \"react-charts\";  /* npm i react-charts */\r\nimport { PieChart } from \"react-minimal-pie-chart\"; /* npm i react-minimal-pie-chart */\r\n\r\nconst ChartComp = ({ type, title, data }) => { /* type=\"bar|line|area|bubble|pie\" */\r\n\r\n  const series = React.useMemo(/*only use for: bar, line, area, bubble chart*/\r\n    () => ({\r\n      type: type\r\n    }),\r\n    []\r\n  );\r\n\r\n  const axes = React.useMemo(/*only use for: bar, line, area, bubble chart*/\r\n    () => [\r\n      { primary: true, type: \"ordinal\", position: \"bottom\" },\r\n      { position: \"left\", type: \"linear\", stacked: false },//, \r\n    ],\r\n    []\r\n  );\r\n\r\n  const dataChart = React.useMemo(\r\n    () => data\r\n  );\r\n\r\n  const dataChartPie = React.useMemo(\r\n    () => data\r\n  );\r\n\r\n  const defaultLabelStyle = {\r\n    fontSize: '5px',\r\n    fontFamily: 'sans-serif',\r\n    fill: '#333'\r\n  };\r\n\r\n  if (type === \"pie\") {\r\n    return (\r\n      <div className=\"chartStyle\" >\r\n        <PieChart data={dataChartPie}\r\n          label={({ dataEntry }) => `${dataEntry.value !== 0 ? Math.round(dataEntry.percentage) + \"%\" : \"\"} `}\r\n          labelStyle={{ ...defaultLabelStyle }}\r\n          style={{ height: '250px', marginBottom: '30px' }}\r\n          lineWidth={70}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"chartStyle\" style={{ minHeight: \"400px\", width: \"100%\", overflowX: \"scroll\", overflowY: \"hidden\" }}>\r\n        <Chart\r\n          data={dataChart}\r\n          series={series}\r\n          axes={axes}\r\n          tooltip\r\n          title={title}\r\n        />\r\n      </div >\r\n    );\r\n  }\r\n};\r\n\r\nexport const ChartTemp = React.memo(ChartComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Router\\Routers.js",["831","832","833","834","835","836","837","838"],"import { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { FooterMenu, HeaderMenu, LeftMenu } from \"../Component/Template\";\r\nimport {\r\n  GetLadingTemporary,\r\n  LadingPrintFromExcelAveryComponent,\r\n  PostOfficeComponent,\r\n  TimelineTransport\r\n} from \"../Component/Categorys\";\r\n\r\nimport {\r\n  CustomerComplain,\r\n  CustomerComplainList,\r\n  // CustomerOrder,\r\n  // CustomerOrderlist,\r\n  HomeComponent,\r\n  LadingCreateComponent,\r\n  LadingExcelComponent,\r\n  LadingGetPriceComponent,\r\n  LookupLading,\r\n  SearchLading,\r\n} from \"../Component/Main\";\r\n\r\nimport {\r\n  ChangePasswordComponent,\r\n  CustomerRecipientComponent,\r\n  CustomerSenderComponent,\r\n  ForgotPasswordComponent,\r\n  LoginComponent,\r\n  ProfiveComponent,\r\n  RegisterComponent,\r\n  ResetPasswordComponent,\r\n  TestChart,\r\n  VerificationComponent,\r\n} from \"../Component/System\";\r\n\r\nimport {\r\n  WareHouseImportReportComponent,\r\n  WareHouseOutputReportComponent,\r\n  WareHouseInventoryReportComponent,\r\n  WareHouseTranportReportComponent,\r\n  OverViewReportComponent,\r\n  CustomerPaymentDealineComponent,\r\n  //MyChart\r\n  KpiDeliveryCODReportComponent,\r\n  OutstandingDebtReportComponent,\r\n  PaymentReportComponent,\r\n} from \"../Component/Reports\";\r\n\r\nexport const Routers = () => {\r\n  const Customer= localStorage.getItem(\"Customer_LoginData\");\r\n  let currentUrl = window.location.href;\r\n  let urlSplit = currentUrl.split(\"/\")[0] + \"//\" + currentUrl.split(\"/\")[2];\r\n  debugger\r\n  if((Customer === undefined || Customer === \"\" || Customer === null) && currentUrl !== (urlSplit + \"/\") && currentUrl.indexOf(\"/login\") === -1 && currentUrl.indexOf(\"/register\") === -1 && currentUrl.indexOf(\"/forgot\") === -1 && currentUrl.indexOf(\"/reset\") === -1)\r\n    window.location.href=\"/\";\r\n  return (\r\n    <BrowserRouter>\r\n        { \r\n          Customer === undefined ||\r\n          Customer === \"\" ||\r\n          currentUrl === urlSplit + \"/\" ||\r\n          //currentUrl.indexOf(\"/\") !== -1 ||\r\n          currentUrl.indexOf(\"/login\") !== -1 ||\r\n          currentUrl.indexOf(\"/register\") !== -1 ||\r\n          currentUrl.indexOf(\"/forgot\") !== -1 ||\r\n          currentUrl.indexOf(\"/reset\") !== -1 ? null : (\r\n            <Route path=\"/\" component={LeftMenu} />\r\n        )}\r\n      <div className=\"main-panel ps\">\r\n        { \r\n          Customer === undefined ||\r\n          Customer === \"\" ||\r\n          currentUrl === urlSplit + \"/\" ||\r\n          //currentUrl.indexOf(\"/\") !== -1 ||\r\n          currentUrl.indexOf(\"/login\") !== -1 ||\r\n          currentUrl.indexOf(\"/register\") !== -1 ||\r\n          currentUrl.indexOf(\"/forgot\") !== -1 ||\r\n          currentUrl.indexOf(\"/reset\") !== -1 ? null : (\r\n            <Route path=\"/\" component={HeaderMenu} />\r\n          )}\r\n\r\n        <Switch>\r\n          //#region TÀI KHOẢN\r\n          <Route exact path=\"/\" component={LoginComponent} />\r\n          <Route exact path=\"/login\" component={LoginComponent} />\r\n          <Route exact path=\"/home\" component={HomeComponent} />\r\n          <Route exact path=\"/register\" component={RegisterComponent} />\r\n          <Route exact path=\"/forgot\" component={ForgotPasswordComponent} />\r\n          <Route exact path=\"/reset\" component={ResetPasswordComponent} />\r\n          <Route exact path=\"/thong-tin-ca-nhan\" component={ProfiveComponent} />\r\n          <Route exact path=\"/doi-mat-khau\" component={ChangePasswordComponent} />\r\n          <Route exact path=\"/dia-chi-nhan-thuong-xuyen\" component={CustomerRecipientComponent}  />\r\n          <Route exact path=\"/dia-chi-gui-thuong-xuyen\" component={CustomerSenderComponent} />\r\n          <Route exact path=\"/xac-thuc-tai-khoan\" component={VerificationComponent} />\r\n          <Route exact path=\"/mang-luoi-buu-cuc\" component={PostOfficeComponent} />\r\n          //#endregion TÀI KHOẢN\r\n          //#region BÁO CÁO\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/cong-no-tam-tinh\" component={GetLadingTemporary} />\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/thoi-gian-toan-trinh-phat-hang-dich-vu\" component={TimelineTransport} />\r\n          {/* Router for the report warehouse */}\r\n          <Route exact path=\"/ho-tro-don-hang\" component={CustomerComplain} />\r\n          <Route exact path=\"/bao-cao-nhap-kho\" component={WareHouseImportReportComponent} />\r\n          <Route exact path=\"/bao-cao-xuat-kho\" component={WareHouseOutputReportComponent} />\r\n          <Route exact path=\"/bao-cao-chuyen-kho\" component={WareHouseTranportReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-kho\" component={WareHouseInventoryReportComponent} />\r\n          <Route exact path=\"/bao-cao-tong-quan\" component={OverViewReportComponent} />\r\n          <Route exact path=\"/bao-cao-dealine-thanh-toan\" component={CustomerPaymentDealineComponent} />\r\n          <Route exact path=\"/bao-cao-kpi-giao-hang-cod\" component={KpiDeliveryCODReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-no\" component={OutstandingDebtReportComponent} />\r\n          <Route exact path=\"/bang-ke-thanh-toan\" component={PaymentReportComponent} />\r\n          //#endregion BÁO CÁO \r\n          \r\n          //#region KHIẾU NẠI\r\n          {/* Router for the Main */}\r\n          <Route exact path=\"/ho-tro-don-hang\" component={CustomerComplain} />\r\n          <Route exact path=\"/danh-sach-ho-tro-don-hang\" component={CustomerComplainList} />\r\n          //#endregion KHIẾU NẠI \r\n          \r\n          //#region VẬN ĐƠN\r\n          <Route exact path=\"/tao-nhanh-van-don\" component={LadingCreateComponent} />\r\n          <Route exact path=\"/tim-kiem-van-don\" component={SearchLading} />\r\n          <Route exact path=\"/tra-cuu-van-don\" component={LookupLading} />\r\n          <Route exact path=\"/upload-excel-van-don\" component={LadingExcelComponent} />\r\n          <Route exact path=\"/in-bill-tu-excel\" component={LadingPrintFromExcelAveryComponent} />\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/\" component={LadingGetPriceComponent} />\r\n          <Route exact path=\"/uoc-tinh-cuoc-phi\" component={LadingGetPriceComponent} />\r\n          //#endregion VẬN ĐƠN \r\n          \r\n          //#region TEST\r\n          {/* Router for the test */}\r\n          {/* <Route exact path=\"/demo\" component={TextBoss} />\r\n          <Route exact path=\"/test\" component={Test} /> */}\r\n          <Route exact path=\"/chart\" component={TestChart} /> \r\n          //#endregion TEST\r\n\r\n        </Switch>\r\n        {/* <Route path=\"/\" component={FooterMenu} /> */}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Services\\Api.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\MainAction.js",["839"],"import { mainTypes } from '../Actions'\r\nconst initialState = {\r\n    IsLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        \r\n        case mainTypes.LOADING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                IsLoading: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\MainAction.js",["840","841","842","843"],"import { put, takeEvery, take, cancel, delay } from 'redux-saga/effects';\r\nimport {mainTypes } from \"../Actions\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { api, API_END_POINT_APP } from '../../Services';\r\n\r\nexport function* LOADING(action) {\r\n    try {\r\n        delay(300);\r\n        const IsLoading = action && action.params.IsLoading;\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: IsLoading });\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\nexport function* API_spCallServer(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        params.API_key = APIKey;\r\n        let FuncApi = \"API_spCallServer\";\r\n        /// catch api die\r\n        yield delay(300);\r\n        //Check select data redis\r\n        switch (params.func) {\r\n            case \"CPN_spLocationCheckCustomer\": \r\n                FuncApi = \"CPN_spLocationCheckCustomer\"\r\n                break;\r\n\r\n            case \"CPN_spLading_PriceMain\": \r\n                FuncApi = \"CPN_spLading_PriceMain\"\r\n                break;\r\n\r\n            case \"CPN_spLadingGetAnotherServiceMoney\": \r\n                FuncApi = \"CPN_spLadingGetAnotherServiceMoney\"\r\n                break;\r\n\r\n            case \"CPN_spLading_Save\": \r\n                FuncApi = \"CPN_spLading_Save\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n         //End check select data redis\r\n\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/API_spCallServer/\" + FuncApi, params)\r\n        \r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            respone.data === \"\" ? action.resolve([]) : action.resolve(JSON.parse(respone.data))\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           \r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchMainActionSagas() {\r\n    ///Watcher watch Sagas\r\n    \r\n    yield takeEvery(mainTypes.LOADING, LOADING);\r\n    yield takeEvery(mainTypes.API_spCallServer, API_spCallServer);\r\n    \r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Reducers\\Category\\Location.js",["844"],"import { LocationType } from '../../Actions/Category'\r\nconst initialState = {\r\n    profile: null,\r\n    listCity: [],\r\n    cityID: 0,\r\n    districtID: 0,\r\n    wardID:0,\r\n    listDistrict: [],\r\n    listData: [],\r\n    listCityEror:''\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        \r\n        case LocationType.GET_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listCity: action.payload\r\n            }\r\n        case LocationType.GET_DISTRICT_FROM_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listDistrict: action.payload\r\n        }\r\n        case LocationType.UPDATE_CITY_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cityID: action.payload\r\n            }\r\n        case LocationType.UPDATE_DISTRICT_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                districtID: action.payload\r\n            }\r\n        case LocationType.UPDATE_WARD_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wardID: action.payload\r\n            }\r\n        case LocationType.GET_LOCATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listData: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\TestSaga.js",["845","846","847","848","849","850"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT } from '../../../Services';\r\nimport { TestTypeAction } from \"../../Actions/System\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* MB_spOfficer_Save(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT + \"/MB_spOfficer_Save\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //Save data from api to store of redux\r\n            //yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* MB_spOfficer_Get(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT + \"/MB_spOfficer_Get\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //yield put({ type: TestTypeAction.MB_spOfficer_Get_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function* watchTestSagas() {\r\n    ///Watcher watch Sagas\r\n    \r\n    yield takeEvery(TestTypeAction.MB_spOfficer_Save, MB_spOfficer_Save)\r\n    yield takeEvery(TestTypeAction.MB_spOfficer_Get, MB_spOfficer_Get)\r\n    \r\n    \r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\GetLadingTemporary.js",["851","852","853","854","855","856"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT_APP } from '../../../Services';\r\nimport { LadingTemporaryTypeAction } from \"../../Actions/System\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* CTM_spGetLadingTemporary(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/CTM_spGetLadingTemporary\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //yield put({ type: LadingTemporaryTypeAction.CTM_spGetLadingTemporary, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* CTM_spGetLadingDetailTemporary(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/CTM_spGetLadingDetailTemporary\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //yield put({ type: LadingTemporaryTypeAction.CTM_spGetLadingDetailTemporary, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchGetLadingTemporary() {\r\n    ///Watcher watch Sagas\r\n    yield takeEvery(LadingTemporaryTypeAction.CTM_spGetLadingTemporary, CTM_spGetLadingTemporary)\r\n    yield takeEvery(LadingTemporaryTypeAction.CTM_spGetLadingDetailTemporary, CTM_spGetLadingDetailTemporary)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\TimelineTransport.js",["857","858","859","860","861"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, API_END_POINT_APP, API_END_POINT } from '../../../Services';\r\nimport { TimelineTransportTypeAction } from \"../../Actions/System\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* CTM_spTimelineTransport(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/CTM_spTimelineTransport\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //yield put({ type: TimelineTransportTypeAction.CTM_spTimelineTransport, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchTimelineTransport() {\r\n    ///Watcher watch Sagas\r\n    yield takeEvery(TimelineTransportTypeAction.CTM_spTimelineTransport, CTM_spTimelineTransport)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\System\\CustomerSenderAddress.js",["862","863","864","865","866","867","868"],"import { put, takeLatest, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT_APP } from '../../../Services';\r\nimport { CustomerSenderAddressTypeAction } from \"../../Actions/System\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* APIC_spCustomerSenderAddress_Save(action) {\r\n    try {\r\n        debugger\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerSenderAddress_Save\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data.data.localMessage)\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerSenderAddressList(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerSenderAddressList\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* API_spCustomerSenderAddressList_Detail(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/API_spCustomerSenderAddressList_Detail\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchCustomerSenderAddress() {\r\n    ///Watcher watch Sagas\r\n    yield takeLatest(CustomerSenderAddressTypeAction.APIC_spCustomerSenderAddress_Save, APIC_spCustomerSenderAddress_Save)\r\n    yield takeLatest(CustomerSenderAddressTypeAction.APIC_spCustomerSenderAddressList, APIC_spCustomerSenderAddressList)\r\n    yield takeLatest(CustomerSenderAddressTypeAction.API_spCustomerSenderAddressList_Detail, API_spCustomerSenderAddressList_Detail)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Location.js",["869","870","871","872","873","874","875"],"import { put, takeEvery, take, cancel, delay } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT, API_END_POINT_APP } from '../../../Services';\r\nimport { LocationType } from \"../../Actions/Category\";\r\nimport { authTypes, mainTypes } from \"../../Actions\";\r\n\r\nexport function* GET_CITY(action) {\r\n    try {\r\n\r\n        //show loading\r\n        //yield put({ type: mainTypes.LOADING, payload: true });\r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLocationGetMany\", params)\r\n        // check call api success\r\n        if (respone && respone.data && respone.data.resultCode == 0) {\r\n            ///callback to screen\r\n            yield action.resolve(respone.data.data)\r\n            console.log(\"aaaaaaaaa APIC_spLocationGetMany\")\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            yield action.reject(respone)\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n       // yield put({ type: mainTypes.LOADING, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\n\r\nexport function* updateCityID(action) {\r\n    try {\r\n        delay(300);\r\n        const parentID = action && action.params;\r\n        console.log('updatecity',parentID)\r\n        yield put({ type: LocationType.UPDATE_CITY_ID_SUCCESS, payload: parentID })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* updateDistrictID(action) {\r\n    try {\r\n        delay(300);\r\n        const parentID = action && action.params;\r\n        console.log('updatedistrict',parentID)\r\n        yield put({ type: LocationType.UPDATE_DISTRICT_ID_SUCCESS, payload: parentID })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* updateWardID(action) {\r\n    try {\r\n        delay(300);\r\n        const parentID = action && action.params;\r\n        console.log('updateward',parentID)\r\n        yield put({ type: LocationType.UPDATE_WARD_ID_SUCCESS, payload: parentID })\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* GetDistrictFromCity(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING, payload: true });\r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLocationGetMany\", params)\r\n        // check call api success\r\n        if (respone && respone.data && respone.data.resultCode == 0) {\r\n            ///callback to screen\r\n            yield action.resolve(JSON.parse(respone.data.data))\r\n            /// close loading\r\n            yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            yield action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING, payload: false });\r\n            yield delay(300)\r\n            yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING, payload: false });\r\n        action.reject(e)\r\n        yield delay(300)\r\n        yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\n\r\nexport function* GET_LOCATION(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT + \"/MB_spLocation_Get\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n\r\n            ///callback to screen\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport default function* watchLocationSagas() {\r\n    ///Watcher watch Sagas\r\n    \r\n    yield takeEvery(LocationType.GET_CITY, GET_CITY)\r\n\r\n    yield takeEvery(LocationType.UPDATE_CITY_ID, updateCityID)\r\n\r\n    yield takeEvery(LocationType.UPDATE_DISTRICT_ID,updateDistrictID)\r\n\r\n    yield takeEvery(LocationType.GET_DISTRICT_FROM_CITY, GetDistrictFromCity)\r\n\r\n    yield takeEvery(LocationType.GET_LOCATION,GET_LOCATION)\r\n\r\n    \r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Service.js",["876","877","878","879","880","881"],"import { put, takeEvery, take, cancel, delay } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT,API_END_POINT_APP } from '../../../Services';\r\nimport { ServiceType } from \"../../Actions/Category\";\r\nimport { authTypes, mainTypes } from \"../../Actions\";\r\n\r\nexport function* APIC_spServiceGetMany(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spServiceGetMany\", params)\r\n        console.log('call sagas api APIC_spServiceGetMany',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport default function* watchServiceSagas() {\r\n    ///Watcher watch Sagas\r\n    yield takeEvery(ServiceType.APIC_spServiceGetMany, APIC_spServiceGetMany)\r\n\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Category\\Lading.js",["882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899"],"import { put, takeEvery, take, cancel, delay } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT,API_END_POINT_APP } from '../../../Services';\r\nimport { LadingType } from \"../../Actions/Category\";\r\nimport { authTypes, mainTypes } from \"../../Actions\";\r\n\r\nexport function* APIC_spLadingCreate(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingCreate\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(JSON.parse(respone.data.data))\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingGetPrice(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGetPrice\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(JSON.parse(respone.data.data),\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingGetMany(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGetMany\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            action.resolve(respone.data)\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingRemove(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingRemove\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingGetDataPrint(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGetDataPrint\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* APIC_spLadingGetById(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGetById\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingGetPriceMany(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGetPriceMany\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(JSON.parse(respone.data.data),\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingPrintFromExcelAvery(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingPrintFromExcelAvery\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(JSON.parse(respone.data.data),\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_LadingUploadExcel(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_LadingUploadExcel\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingSaveExcel(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingSaveExcel\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* APIC_LadingPrintBillExcel(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_LadingPrintBillExcel\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* APIC_spLadingUpdate(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingUpdate\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spLadingGet(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingGet\", params)\r\n        console.log('APIC_spLadingGet',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchLadingSagas() {\r\n    ///Watcher watch Sagas\r\n    yield takeEvery(LadingType.APIC_spLadingCreate, APIC_spLadingCreate)\r\n    yield takeEvery(LadingType.APIC_spLadingGetPrice, APIC_spLadingGetPrice)\r\n    yield takeEvery(LadingType.APIC_spLadingGetMany, APIC_spLadingGetMany)\r\n    yield takeEvery(LadingType.APIC_spLadingRemove, APIC_spLadingRemove)\r\n    yield takeEvery(LadingType.APIC_spLadingGetDataPrint, APIC_spLadingGetDataPrint)\r\n    yield takeEvery(LadingType.APIC_spLadingGetById, APIC_spLadingGetById)\r\n    yield takeEvery(LadingType.APIC_spLadingGetPriceMany, APIC_spLadingGetPriceMany)\r\n    yield takeEvery(LadingType.APIC_spLadingPrintFromExcelAvery, APIC_spLadingPrintFromExcelAvery)\r\n    yield takeEvery(LadingType.APIC_LadingUploadExcel, APIC_LadingUploadExcel)\r\n    yield takeEvery(LadingType.APIC_spLadingSaveExcel, APIC_spLadingSaveExcel)\r\n    yield takeEvery(LadingType.APIC_LadingPrintBillExcel, APIC_LadingPrintBillExcel)\r\n    yield takeEvery(LadingType.APIC_spLadingUpdate, APIC_spLadingUpdate)\r\n    yield takeEvery(LadingType.APIC_spLadingGet, APIC_spLadingGet)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerOrder.js",["900","901","902","903","904","905"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT_APP } from '../../../Services';\r\nimport { CustomerTypeAction } from \"../../Actions/Main\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* APIC_spCustomerOrderCreate(action) {\r\n    try {\r\n        debugger\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerOrderCreate\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.APIC_spCustomerOrderCreate_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data.data.localMessage)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerOrderList(action) {\r\n    try {\r\n        debugger\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        console.log(params)\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerOrderList\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            console.log(respone)\r\n            action.resolve(JSON.parse(respone.data.data))\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchCustomerOrder() {\r\n    ///Watcher watch Sagas\r\n\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerOrderList, APIC_spCustomerOrderList)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerOrderCreate, APIC_spCustomerOrderCreate)\r\n    \r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerComplain.js",["906","907","908","909","910","911"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT_APP } from '../../../Services';\r\nimport { CustomerTypeAction } from \"../../Actions/Main\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\n\r\nexport function* APIC_spCustomerComplain(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerComplain\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            console.log(respone)\r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.APIC_spCustomerComplain_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            \r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerComplainList(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        console.log(params)\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerComplainList\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            console.log(respone)\r\n            // yield put({ type: TestTypeAction.APIC_spCustomerComplainList_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default function* watchCustomerComplain() {\r\n    ///Watcher watch Sagas\r\n    \r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerComplain, APIC_spCustomerComplain)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerComplainList, APIC_spCustomerComplainList)\r\n    \r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Main\\CustomerSaga.js",["912","913","914","915","916","917","918","919","920","921","922","923"],"import { put, takeEvery, take, cancel, delay, call } from 'redux-saga/effects';\r\nimport { api, APIKey, API_END_POINT, API_END_POINT_APP,API_END_POINT_APP_1 } from '../../../Services';\r\nimport { CustomerTypeAction } from \"../../Actions/Main\";\r\nimport { mainTypes } from \"../../Actions\";\r\n\r\nexport function* APIC_spCustomerCheckLogin(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerCheckLogin\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            //yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerCheckPhone(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerCheckPhone\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerCheckEmail(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerCheckEmail\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerUpdateInfo(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerUpdateInfo\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerGetById(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerGetById\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            console.log(\"nhi\",respone.data);\r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerGetByGroup(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerGetByGroup\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            console.log(\"nhi\",respone.data);\r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerRegister(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP+ \"/APIC_spCustomerRegister\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_CustomerSendEmailForgot(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_CustomerSendEmailForgot\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_CustomerCheckResetPass(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_CustomerCheckResetPass\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerResetPass(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerResetPass\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerChangeAvatar(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerChangeAvatar\", params)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            //Save data from api to store of redux\r\n           // yield put({ type: TestTypeAction.MB_spOfficer_Save_SUCCESS, payload: JSON.parse(respone.data.data) });\r\n            action.resolve(respone.data)\r\n            /// close loading\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n        }\r\n        else {\r\n        // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n           // yield put({ type: mainTypes.LOADING, payload: false });\r\n            //yield delay(300)\r\n            //yield put({ type: mainTypes.ERROR, payload: true });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        //yield delay(300)\r\n        //yield put({ type: mainTypes.ERROR, payload: true });\r\n    }\r\n}\r\nexport function* APIC_spCustomerRecipientLoad(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerRecipientLoad\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n          \r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spCustomerRecipientRemove(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerRecipientRemove\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n          \r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spCustomerRecipientSave(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerRecipientSave\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_SendSMSOTP(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_SendSMSOTP\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_spCustomerVerification(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerVerification\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            \r\n            action.resolve(respone.data)\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport function* APIC_GetEncoding(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_GetEncoding\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data)\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\nexport default function* watchCustomerSagas() {\r\n    ///Watcher watch Sagas\r\n    \r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerCheckLogin, APIC_spCustomerCheckLogin)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerCheckPhone, APIC_spCustomerCheckPhone)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerCheckEmail, APIC_spCustomerCheckEmail)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerUpdateInfo, APIC_spCustomerUpdateInfo)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerGetById, APIC_spCustomerGetById)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerGetByGroup, APIC_spCustomerGetByGroup)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerRegister, APIC_spCustomerRegister)\r\n    yield takeEvery(CustomerTypeAction.APIC_CustomerSendEmailForgot, APIC_CustomerSendEmailForgot)\r\n    yield takeEvery(CustomerTypeAction.APIC_CustomerCheckResetPass, APIC_CustomerCheckResetPass)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerResetPass, APIC_spCustomerResetPass)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerChangeAvatar, APIC_spCustomerChangeAvatar)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerRecipientLoad, APIC_spCustomerRecipientLoad)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerRecipientRemove, APIC_spCustomerRecipientRemove)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerRecipientSave, APIC_spCustomerRecipientSave)\r\n    yield takeEvery(CustomerTypeAction.APIC_SendSMSOTP, APIC_SendSMSOTP)\r\n    yield takeEvery(CustomerTypeAction.APIC_spCustomerVerification, APIC_spCustomerVerification)\r\n    yield takeEvery(CustomerTypeAction.APIC_GetEncoding, APIC_GetEncoding)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Sagas\\Reports\\ReportSagas.js",["924","925","926","927","928"],"import { put, take, cancel, delay,takeEvery } from 'redux-saga/effects';\r\nimport { api, API_END_POINT_APP } from '../../../Services';\r\nimport { ReportTypeAction } from \"../../Actions/Reports\";\r\nimport { authTypes, mainTypes } from \"../../Actions\"; \r\n\r\n//main report\r\nexport function* APIC_spLadingReportDelivery(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spLadingReportDelivery\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spKpiDeliveryCODReport(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spKpiDeliveryCODReport\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spOutstandingDebtReport(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spOutstandingDebtReport\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\n\r\n//warehouse report\r\nexport function* APIC_spCustomer_GetidFromWeb(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomer_GetidFromWeb\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_List(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_List\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Area_list(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Area_list\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Import_Report(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Import_Report\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Import_Report_Detail(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Import_Report_Detail\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Import_Report_Print(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Import_Report_Print\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWarehouse_Import_DeleteById(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWarehouse_Import_DeleteById\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Output_Report(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Output_Report\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Output_Report_Detail(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Output_Report_Detail\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Output_Report_Print(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Output_Report_Print\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWarehouse_Output_DeletebyId(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWarehouse_Output_DeletebyId\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Tranport_Report(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Tranport_Report\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Tranport_Report_Detail(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Tranport_Report_Detail\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Transport_Report_Print(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Transport_Report_Print\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* APIC_spWareHouse_Inventory_Report(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spWareHouse_Inventory_Report\", params)\r\n        console.log('call sagas api',respone)\r\n        // check call api success\r\n        if (respone && respone.status === 200) {\r\n            \r\n            action.resolve(respone.data,\"false 200\")\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\n\r\nexport function* APIC_spCustomerPaymentDealine_Report(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        \r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spCustomerPaymentDealine_Report\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport function* APIC_spPaymentReport(action) {\r\n    try {\r\n\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        \r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        \r\n        let respone = yield api.post(API_END_POINT_APP + \"/APIC_spPaymentReport\", params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n            \r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchReportSagas() {\r\n    yield takeEvery(ReportTypeAction.APIC_spLadingReportDelivery, APIC_spLadingReportDelivery)\r\n    yield takeEvery(ReportTypeAction.APIC_spKpiDeliveryCODReport, APIC_spKpiDeliveryCODReport)\r\n    yield takeEvery(ReportTypeAction.APIC_spOutstandingDebtReport, APIC_spOutstandingDebtReport)\r\n\r\n    //warehouse report\r\n    yield takeEvery(ReportTypeAction.APIC_spCustomer_GetidFromWeb, APIC_spCustomer_GetidFromWeb)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_List, APIC_spWareHouse_List)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Area_list, APIC_spWareHouse_Area_list)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Import_Report, APIC_spWareHouse_Import_Report)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Import_Report_Detail, APIC_spWareHouse_Import_Report_Detail)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Import_Report_Print, APIC_spWareHouse_Import_Report_Print)\r\n    yield takeEvery(ReportTypeAction.APIC_spWarehouse_Import_DeleteById, APIC_spWarehouse_Import_DeleteById)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Output_Report, APIC_spWareHouse_Output_Report)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Output_Report_Detail, APIC_spWareHouse_Output_Report_Detail)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Output_Report_Print, APIC_spWareHouse_Output_Report_Print)\r\n    yield takeEvery(ReportTypeAction.APIC_spWarehouse_Output_DeletebyId, APIC_spWarehouse_Output_DeletebyId)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Tranport_Report, APIC_spWareHouse_Tranport_Report)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Tranport_Report_Detail, APIC_spWareHouse_Tranport_Report_Detail)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Transport_Report_Print, APIC_spWareHouse_Transport_Report_Print)\r\n    yield takeEvery(ReportTypeAction.APIC_spWareHouse_Inventory_Report, APIC_spWareHouse_Inventory_Report)\r\n\r\n    //customer report\r\n    yield takeEvery(ReportTypeAction.APIC_spCustomerPaymentDealine_Report, APIC_spCustomerPaymentDealine_Report)\r\n    yield takeEvery(ReportTypeAction.APIC_spPaymentReport, APIC_spPaymentReport)\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\Notification.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ScrollTop.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\MainTypes.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\Storage.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\EncodeString.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\MainAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\DecodeString.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ExportExcel.js",["929"],"import React from 'react'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const ExportExcel = (Data,fileName) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(Data);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\PaginationTable.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidEmail.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidPassword.js",["930","931","932"],"export const  ValidPassword = (password) => {\r\n    const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n    if(strongRegex.test(password))\r\n        return \"\";\r\n    else if(mediumRegex.test(password))\r\n        return \"form-warning\";\r\n    else\r\n        return \"form-error\";\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidPhone.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\ValidNumber.js",["933","934","935"],"export const  ValidNumber = (number) => {\r\n    debugger\r\n    if(number!==\"\"){\r\n        let RegNumber = new RegExp(\"^(?=.*[a-z])|(?=.*[A-Z])|(?=.*[!@#\\$%\\^&\\*])\");\r\n        if (RegNumber.test(number))\r\n            return \"form-error\";\r\n        else\r\n            return \"\";\r\n    }\r\n    else\r\n        return '';\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatMoney.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\PaginationTable2.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatDate.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatDateJson.js",["936"],"export const  FormatDateJson = (date, reg=0) => {\r\n    if(date === null || date === \"\" || typeof date === 'undefined')\r\n        return '';\r\n    let d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear(),\r\n        h = d.getHours(),\r\n        m = d.getMinutes(),\r\n        s = d.getSeconds()\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    //console.log([month, day,year].join('/') + ' ' + [h,m].join(':'));\r\n    if(reg===0)\r\n     return [day,month,year].join('/') + ' ' + [h,m].join(':');\r\n    else if(reg===1)\r\n     return [day,month,year].join('/');\r\n    else if(reg===2)\r\n        return [year,month].join('-');\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\GetCookieValue.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\FormatNumber.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Service.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\ServiceType.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Location.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\LocationType.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\Lading.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Category\\LadingType.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Services\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\Test.js",["937","938","939","940","941","942","943","944","945","946","947","948","949","950"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  SelectCity,\r\n  FormReport,\r\n  SelectDistrict,\r\n  SelectWard,\r\n} from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  PaginationTable,\r\n  ScrollTop,\r\n  setData,\r\n  getData,\r\n} from \"../../Utils\";\r\nimport { Img } from \"react-image\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { TestAction } from \"../../Redux/Actions/System\";\r\nimport { api, APIKey, API_END_POINT } from \"../../Services\";\r\nimport { Location } from \"../../Redux/Actions/Category\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\n/* Load CSS */\r\n\r\nexport const Test = () => {\r\n  const dispatch = useDispatch();\r\n  const [IsAcctive, setIsAcctive] = useState(0);\r\n  const [IsLoad, setIsLoad] = useState(false); // active input form when click button edit\r\n  const [IsLoadDistrict, setIsLoadDistrict] = useState(false);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    console.log(\"call useEffect\");\r\n    MB_spOfficer_Get();\r\n\r\n    let a = getData(\"demo\");\r\n    console.log(a);\r\n  }, []);\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [city, setCity] = useState(0);\r\n  const [chooseProvince, setChooseProvince] = useState(0);\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  /* Chose item from select common */\r\n  const onChooseProvince = (item) => {\r\n    onUpdateCityID(item);\r\n    console.log(item);\r\n  };\r\n  const onChooseDistrict = (item) => {\r\n    Location.updateDistrictID(item.value, dispatch);\r\n    IsLoadDistrict === false\r\n      ? setIsLoadDistrict(true)\r\n      : setIsLoadDistrict(false);\r\n  };\r\n\r\n  const onUpdateCityID = (item) => {\r\n    Location.updateCityID(item.value, dispatch);\r\n    IsLoad === false ? setIsLoad(true) : setIsLoad(false);\r\n    console.log(item);\r\n  };\r\n\r\n  const onSelectWard = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  /* Save Officer  */\r\n  const [OfficerID, setOfficerID] = useState(0);\r\n  //const [OfficerName, setOfficerName] = useState('');\r\n  //const [OfficerCode, setOfficerCode] = useState('');\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Birthday, onBirthday] = useState(new Date());\r\n  const [Number, setNumber] = useState(0);\r\n\r\n  const [OfficerCode, bindOfficerCode, setOfficerCode] = useInput(\"\");\r\n\r\n  const [OfficerName, bindOfficerName, setOfficerName] = useInput(\"\");\r\n\r\n  const OfficerCodeRef = useRef();\r\n  const OfficerNameRef = useRef();\r\n  const MB_spOfficer_Save = async () => {\r\n    debugger;\r\n    let params = {\r\n      OfficerID: OfficerID,\r\n      OfficerName: OfficerName,\r\n      OfficerCode: OfficerCode,\r\n      Email: Email,\r\n      Birthday: Birthday,\r\n      Number: Number,\r\n    };\r\n\r\n    console.log(params);\r\n\r\n    /* validation input form */\r\n\r\n    if (OfficerCode === \"\") {\r\n      Alerterror(\"Nhập mã nhân viên\");\r\n      OfficerCodeRef.current.focus();\r\n      return;\r\n    }\r\n    if (OfficerName === \"\") {\r\n      Alerterror(\"Nhập tên nhân viên\");\r\n      OfficerNameRef.current.focus();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setDisable(true); // disable button\r\n      // call redux saga\r\n      const data = await TestAction.MB_spOfficer_Save(params, dispatch);\r\n      Alertsuccess(data);\r\n      MB_spOfficer_Clear();\r\n    } catch (err) {\r\n      Alerterror(\"Lỗi liên hệ IT NETCO\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n\r\n  const MB_spOfficer_Clear = () => {\r\n    setOfficerID(0);\r\n    setOfficerName(\"\");\r\n    setOfficerCode(\"\");\r\n    setEmail(\"\");\r\n    ScrollTop();\r\n  };\r\n\r\n  /* get list Officer */\r\n  const [ListOfficer, setListOfficer] = useState([]);\r\n\r\n  const MB_spOfficer_Get = async () => {\r\n    let params = {\r\n      OfficerID: 0,\r\n    };\r\n\r\n    const data = await TestAction.MB_spOfficer_Get(params, dispatch);\r\n    ListOfficer(data);\r\n    console.log(data);\r\n    PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const MB_spOfficer_show = (item) => {\r\n    console.log(item);\r\n    setOfficerID(item.OfficerID);\r\n    setOfficerName(item.OfficerName);\r\n    setOfficerCode(item.OfficerCode);\r\n    setEmail(item.Email);\r\n    ScrollTop();\r\n    setIsAcctive(1);\r\n  };\r\n\r\n  /* get parameter from chile component */\r\n  const onFromDate = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  const onToDate = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  const onClickDate = () => {\r\n    alert(11111111);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">Điền thông tin lấy hàng</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                          <label className=\"bmd-label-floating margin-top-20-percent\">\r\n                            Ngày :\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                          <div className=\"form-group bmd-form-group\">\r\n                            <DateTimePicker\r\n                              onChange={onBirthday}\r\n                              value={Birthday}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                          <label className=\"bmd-label-floating margin-top-20-percent\">\r\n                            Tỉnh thành :\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                          <div className=\"form-group bmd-form-group\">\r\n                            <SelectCity\r\n                              onSelected={(item) => {\r\n                                onChooseProvince(item);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                          <label\r\n                            className=\"bmd-label-floating\"\r\n                            style={{ marginTop: \"20%\" }}\r\n                          >\r\n                            Quận:\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                          <div className=\"form-group bmd-form-group\">\r\n                            <SelectDistrict\r\n                              IsLoad={IsLoad}\r\n                              onSelected={(item) => {\r\n                                onChooseDistrict(item);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                          <label\r\n                            className=\"bmd-label-floating\"\r\n                            style={{ marginTop: \"20%\" }}\r\n                          >\r\n                            Phường:\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                          <div className=\"form-group bmd-form-group\">\r\n                            <SelectWard\r\n                              IsLoad={IsLoadDistrict}\r\n                              onSelected={(item) => {\r\n                                onSelectWard(item);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                      <div\r\n                        className={\r\n                          IsAcctive === 1\r\n                            ? \"form-group bmd-form-group is-focused\"\r\n                            : \"form-group bmd-form-group\"\r\n                        }\r\n                      >\r\n                        <label className=\"bmd-label-floating\">\r\n                          Mã nhân viên\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          ref={OfficerCodeRef}\r\n                          value={OfficerCode}\r\n                          {...bindOfficerCode}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div\r\n                        className={\r\n                          IsAcctive === 1\r\n                            ? \"form-group bmd-form-group is-focused\"\r\n                            : \"form-group bmd-form-group\"\r\n                        }\r\n                      >\r\n                        <label className=\"bmd-label-floating\">\r\n                          Tên nhân viên\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          ref={OfficerNameRef}\r\n                          value={OfficerName}\r\n                          {...bindOfficerName}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <label className=\"bmd-label-floating\">Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          value={Email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>Ghi chú</label>\r\n                        <div className=\"form-group bmd-form-group\">\r\n                          <label className=\"bmd-label-floating\">\r\n                            {\" \"}\r\n                            Muốn gì thì ghi vào đây :T\r\n                          </label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            rows=\"5\"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger pull-right\"\r\n                    disabled={disable}\r\n                    onClick={MB_spOfficer_Save}\r\n                  >\r\n                    <i className=\"material-icons\">edit</i>\r\n                    Xác nhận?\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default pull-right\"\r\n                    disabled={disable}\r\n                    onClick={MB_spOfficer_Clear}\r\n                  >\r\n                    <i className=\"material-icons\">undo</i>\r\n                    Hủy\r\n                  </button>\r\n\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <FormReport\r\n            onFromDate={(item) => {\r\n              onFromDate(item);\r\n            }}\r\n            onToDate={(item) => {\r\n              onToDate(item);\r\n            }}\r\n            onClickDate={() => {\r\n              onClickDate();\r\n            }}\r\n            title=\"Chọn điều kiện nhân viên\"\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title \">Danh sách nhân viên</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th>STT</th>\r\n                        <th>Mã nhân viên</th>\r\n                        <th>Tên nhân viên</th>\r\n                        <th>Email</th>\r\n                        <th>Ghi chú</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ListOfficer.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{item.OfficerID} </td>\r\n                            <td>{item.OfficerName}</td>\r\n                            <td>{item.PostOfficeId}</td>\r\n                            <td>{item.NameMail}</td>\r\n                            <td>\r\n                              <button\r\n                                disabled={disable}\r\n                                onClick={() => MB_spOfficer_show(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger btn-small pull-right\"\r\n                              >\r\n                                <i className=\"material-icons\">edit</i>\r\n                                Edit\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["951","952"],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\TextBoss.js",["953","954","955","956","957","958","959","960","961","962"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Select from \"react-select\";\r\nimport { SelectCity } from \"../../Common\";\r\nimport { Alertsuccess, Alerterror, PaginationTable } from \"../../Utils\";\r\nimport { Img } from \"react-image\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nexport const TextBoss = () => {\r\n  /* run after render */\r\n  useEffect(() => {\r\n    getCity();\r\n    Alertsuccess(\"Thành công ok con dê?\");\r\n    Alerterror(\"loi cc\");\r\n    PaginationTable(); //pagination\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [city, setCity] = useState(0);\r\n  const [value, onChange] = useState(new Date());\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [chooseProvince, setChooseProvince] = useState(0);\r\n  const [chooseWard, setChooseWard] = useState(0);\r\n  const [disable, setDisable] = useState(true);\r\n  /* get the city */\r\n  const getCity = () => {\r\n    console.log(\"call get the city\");\r\n  };\r\n\r\n  const onChooseProvince = (item) => {\r\n    setIsVisible(true);\r\n    setChooseProvince(item);\r\n    console.log(item);\r\n  };\r\n\r\n  /* datatable */\r\n  const columns = [\"Title\", \"Name\"];\r\n  const data = [\r\n    { Title: \"OK man\", Name: \"Name0001\" },\r\n    { Title: \"OK man1\", Name: \"Name0002\" },\r\n  ];\r\n  const [options, changeOptions] = useState([\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n  ]);\r\n\r\n  const clickMainF = () => {\r\n    console.log();\r\n    Alertsuccess(\"Thành công ok con dê?\");\r\n  };\r\n\r\n  const showLoading = () => {\r\n    mainAction.LOADING({ IsLoading: true }, dispatch);\r\n  };\r\n\r\n  const hideLoading = () => {\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">Điền thông tin lấy hàng</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <DateTimePicker onChange={onChange} value={value} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <SelectCity\r\n                          isVisible={isVisible}\r\n                          setIsVisible={setIsVisible}\r\n                          onSelected={(item) => {\r\n                            onChooseProvince(item);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <Select\r\n                          value={options}\r\n                          onChange={changeOptions}\r\n                          options={options}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <label className=\"bmd-label-floating\">Fist Name</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <label className=\"bmd-label-floating\">Last Name</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <label className=\"bmd-label-floating\">Adress</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <select className=\"form-control\">\r\n                          <option value=\"0\">HCM</option>\r\n                          <option value=\"1\">HNI</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group bmd-form-group\">\r\n                        <label className=\"bmd-label-floating\">Country</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group bmd-form-group\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <label>About Me</label>\r\n                        <div className=\"form-group bmd-form-group\">\r\n                          <label className=\"bmd-label-floating\">\r\n                            {\" \"}\r\n                            Lamborghini Mercy, Your chick she so thirsty, I'm in\r\n                            that two seat Lambo.\r\n                          </label>\r\n                          <textarea\r\n                            className=\"form-control\"\r\n                            rows=\"5\"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    disabled={!disable}\r\n                    onClick={clickMainF}\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger pull-right\"\r\n                  >\r\n                    <i className=\"material-icons\">edit</i>\r\n                    Xác nhận lấy\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-default pull-right\">\r\n                    <i className=\"material-icons\">undo</i>\r\n                    Hủy\r\n                  </button>\r\n                  <button\r\n                    onClick={showLoading}\r\n                    type=\"button\"\r\n                    className=\"btn btn-success pull-right\"\r\n                  >\r\n                    <i className=\"material-icons\">map</i>\r\n                    Loading\r\n                  </button>\r\n                  <button\r\n                    onClick={hideLoading}\r\n                    type=\"button\"\r\n                    className=\"btn btn-success pull-right\"\r\n                  >\r\n                    <i className=\"material-icons\">map</i>\r\n                    Hide Loading\r\n                  </button>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title \">Danh sách lấy hàng</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th>ID</th>\r\n                        <th> Name</th>\r\n                        <th>Country</th>\r\n                        <th>City</th>\r\n                        <th>Salary</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>1 </td>\r\n                        <td>Dakota Rice</td>\r\n                        <td>Niger</td>\r\n                        <td>Oud-Turnhout</td>\r\n                        <td className=\"text-primary\"> $36,738</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> 2</td>\r\n                        <td>Minerva Hooper </td>\r\n                        <td>Curaçao</td>\r\n                        <td>Sinaai-Waas</td>\r\n                        <td className=\"text-primary\">$23,789</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\LadingPrintFromExcelAveryComponent.js",["963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatDateJson,\r\n} from \"../../Utils\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const LadingPrintFromExcelAveryComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const history = useHistory();\r\n\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowForm, setShowForm] = useState(\"\");\r\n  const [FileUpload, setFileUpload] = useState({file:{}});\r\n  const [UploadError, setUploadError] = useState(\"\");\r\n  const [LadingList, setLadingList] = useState([]);\r\n  const [TotalSheet, bindTotalSheet, setTotalSheet] = useInput(1);\r\n  const TotalSheetRef = useRef();\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const [ShowUploadFile, setShowUploadFile] = useState(\"\");\r\n  const [ShowListFile, setShowListFile] = useState(\"display-none\");\r\n\r\n  const onFileChange = (event) => {\r\n    if (event.target.files !== null) {\r\n      setFileUpload({file: event.target.files[0]});\r\n      setShowUploadFile(\"display-none\");\r\n      setShowListFile(\"\");\r\n    }\r\n  };\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = async () => {\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n    formData.append(\"CustomerID\", CustomerID);\r\n    formData.append(\"AppAPIKey\", APIKey);\r\n    formData.append(\"TokenDevice\", TOKEN_DEVICE);\r\n    // Update the formData object\r\n    formData.append(\"myFile\", FileUpload.file, FileUpload.file.name);\r\n\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    const data = await Lading.APIC_LadingPrintBillExcel(formData, dispatch);\r\n    setUploadError(data.localMessage);\r\n    if (data.resultCode === 0) {\r\n      //Alertsuccess(\"Thành công\");\r\n      debugger\r\n      setLadingList(JSON.parse(data.data));\r\n      console.log(\"data print\", data.data)\r\n      setShowList(\"\");\r\n      setShowForm(\"display-none\");\r\n      setShowUploadFile(\"\");\r\n      setShowListFile(\"display-none\");\r\n      //PaginationTable();\r\n    }\r\n  };\r\n\r\n  const [Checked, setChecked] = useState(false);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [State, setState] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    let list = [...LadingList];\r\n    let allChecked = IsChecked;\r\n    if (e.target.value === \"checkAll\") {\r\n      setIsChecked(!IsChecked);\r\n      list.forEach((item) => {\r\n        item.IsPrint = e.target.checked;\r\n        allChecked = e.target.checked;\r\n      });\r\n    } else {\r\n      list.find((item) => item.No === parseInt(e.target.value)).IsPrint =\r\n        e.target.checked;\r\n    }\r\n    setState({ list: LadingList, allChecked: Checked });\r\n  };\r\n\r\n  const PrintBill = async () => {\r\n    let _htmlprint = \"\";\r\n    LadingList.map((item, index) => {\r\n      if (item.IsPrint === true) {\r\n        for (var i = 0; i < parseInt(TotalSheet); i++) {\r\n          _htmlprint += `<div style=\"width:720px;height: 1050px;page-break-before: always;border:2px solid #000\">\r\n                        <table style=\"width:100%;margin-top: 5px;max-height:90px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style=\"vertical-align:top;width:200px;\">\r\n                                        <table style=\"font-size:16px;margin-left:5px;width:200px;\">\r\n                                            <tbody>\r\n                                                <tr><td><img src=\"/assets/img/LogoNetco.png\" style=\"width:180px;\"></td></tr>\r\n                                                <tr><td style=\"padding-left:12px;font-style:italic;font-size:14px;\">Ngày in: ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"d/M/y H:m\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"padding-left:60px;font-style:italic;font-size:14px;\">Liên ${\r\n                                                  i + 1\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td>\r\n                                      <table style=\"width:100%;font-weight:600;text-align:center;\">\r\n                                          <tr>\r\n                                              <td><div style=\"width: 100%;display:inline-block;height:80px;text-align:center;\"><div style=\"font-family: 'Libre Barcode 128 Text';font-size: 80px;font-weight:200\">${\r\n                                                item.Bill\r\n                                              }</div></div></td>\r\n                                          </tr>\r\n                                      </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;border-right-style: dashed;border-right-width: 1px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN NGƯỜI GỬI<b></b></b></td></tr>\r\n                                                <tr><td><b>Công ty: </b>AVERY DENNISON RIS VIET NAM CO., LIMITED -LONG HẬU</td></tr>\r\n                                                <tr><td><b>Địa chỉ: </b>Lot E01 Trung Tam Road, LHIP, Can Giuoc,Long An, Vietnam</td></tr>\r\n                                                <tr><td><b>Điện thoại: </b>028 37763336 Ext.3409 (Mr.Khanh)</td></tr>\r\n                                                <tr><td><b>Ngày gửi: </b>${FormatDate(\r\n                                                  item.Date,\r\n                                                  \"d-k-y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"height:50px;\"><b>Ký gửi:</b></td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align: top;padding-left: 5px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN NGƯỜI NHẬN</b></td></tr>\r\n                                                <tr><td><b>Công ty: </b>${\r\n                                                  item.Customer\r\n                                                }</td></tr>\r\n                                                <tr><td style=\"word-wrap: break-word;max-width: 300px;overflow: hidden;min-height: 100px;\"><b>Địa chỉ: </b>${\r\n                                                  item.Address\r\n                                                }</td></tr>\r\n                                                <tr><td><b>ATTN: </b>${\r\n                                                  item.Attn\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table><table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;border-right-style: dashed;border-right-width: 1px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN ĐƠN HÀNG<b></b></b></td></tr>\r\n                                                <tr><td><b>Kí hiệu: </b>${\r\n                                                  item.FileScan\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số kiện: </b>${\r\n                                                  item.CartonSide\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số kg: </b>${\r\n                                                  item.Kg\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số lượng DN: </b>${\r\n                                                  item.TotalDN\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Yêu cầu đặc biệt: </b>${\r\n                                                  item.Keeper\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align: top;padding-left: 5px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>DỊCH VỤ</b></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Phát 60 phút</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PTN</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 9:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">CPN</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 10:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Phát 60h</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 12:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Tiết kiệm</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 16:00 PM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Khác</label></td></tr>\r\n                                                <tr>\r\n                                                    <td><label class=\"checkbox-inline nowrap\" colspan=\"2\"><input type=\"checkbox\">Người nhận TT</label></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr><td style=\"padding-bottom: 5px;padding-top:5px;\"><b>GHI CHÚ<b></b></b></td></tr>\r\n                                <tr><td style=\"word-wrap: break-word;overflow: hidden;height: 50px;vertical-align:top;\">${\r\n                                  item.Notes\r\n                                }</td></tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px; padding-top:10px\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;\">\r\n                                        <table style=\"font-size:18px;width:100%;\">\r\n                                            <tbody>\r\n                                                <tr><td style=\"text-align:center;\">Ngày ........ / ........ / ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"text-align:center;\"><b>Nhân viên phát</b><br>(Ký và ghi rõ họ tên)</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;height:210px;\">\r\n                                        <table style=\"font-size:18px;width:100%;\">\r\n                                            <tbody>\r\n                                                <tr><td style=\"text-align:center;\">Ngày ......./......./ ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"text-align:center;\"><b>Ký nhận: </b><br>(Ký và ghi rõ họ tên)</td><td><br><br><br></td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style=\"text-align:center\"><b><i>Lưu ý : Nếu hàng hóa có dấu hiệu bất thường vui lòng ghi rõ vào bên trên</i></b></div>\r\n                        <div style=\"text-align:center\"><i>Hotline hỗ trợ: +84.938.53.22.26 (Ms.Hiền)</i></div>\r\n                    </div>`;\r\n        }\r\n      }\r\n    });\r\n    if (_htmlprint === \"\") {\r\n      Alerterror(\"Chưa chọn dữ liệu in\");\r\n    } else {\r\n      let myWindow = window.open(\"\", \"_blank\");\r\n      myWindow.document.write(\r\n        '<html><link href=\"https://fonts.googleapis.com/css?family=Libre Barcode 128 Text\" rel=\"stylesheet\"><body style=\"margin:0\">' +\r\n          _htmlprint +\r\n          '<script type=\"text/javascript\">window.focus(); setTimeout(function() { window.print();window.close(); }, 1000);</script></body></html>'\r\n      );\r\n    }\r\n  };\r\n\r\n  const Cancel = () => {\r\n    setLadingList([]);\r\n    //PaginationTable();\r\n    setShowList(\"display-none\");\r\n    setShowForm(\"\");\r\n    setShowUploadFile(\"\");\r\n    setShowListFile(\"display-none\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-panel\">\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <div className=\"pull-left\">\r\n                    <h4 className=\"card-title\">\r\n                      <i className=\"material-icons\">bubble_chart</i> Avery - In\r\n                      bill\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"pull-right\">\r\n                    <Link\r\n                      className=\"titleButton\"\r\n                      download\r\n                      target=\"_blank\"\r\n                      to=\"/assets/exceltemp/MauVanDonInAvery.xlsx\"\r\n                    >\r\n                      <i className=\"material-icons\">download</i> Tải file mẫu\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-horizontal\">\r\n                    <div className={ShowForm + \" row\"}>\r\n                      <div className=\"col-md-3\"></div>\r\n                      <div className={ShowUploadFile + \" col-md-6\"}>\r\n                        <div className=\"uploadFileContainer text-center\">\r\n                          <span>\r\n                            <i className=\"material-icons size40\">\r\n                              cloud_upload\r\n                            </i>\r\n                          </span>\r\n                          <span>Upload a File</span>\r\n                          <span className=\"font-normal\">Choose a file</span>\r\n                          {/* <span className=\"font-normal\">{FileUpload.name}</span> */}\r\n                          <input\r\n                            type=\"file\"\r\n                            className=\"fileUploadHidden\"\r\n                            onChange={onFileChange}\r\n                            onClick={(e) => {\r\n                              e.target.value = null;\r\n                            }}\r\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                          />\r\n                          {/* <input multiple=\"multiple\" class=\"fileupload-input\" id=\"input_5\" type=\"file\" name=\"file\" aria-labelledby=\"label_5\" aria-hidden=\"true\" tabindex=\"-1\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className={ShowListFile + \" col-md-6\"}>\r\n                        <div\r\n                          className={\r\n                            FileUpload.file !== {}\r\n                              ? \"fileNameUpload\"\r\n                              : \"fileNameUpload display-none\"\r\n                          }\r\n                        >\r\n                          <span className=\"fileNameUpload\">\r\n                            {FileUpload.file !== {} && FileUpload.file !== []\r\n                              ? FileUpload.file.name\r\n                              : \"\"}\r\n                          </span>\r\n                          <i\r\n                            className=\"material-icons pull-right pointer\"\r\n                            title=\"Xóa file\"\r\n                            onClick={(e) => {\r\n                              setFileUpload({ file: {} });\r\n                              setShowUploadFile(\"\");\r\n                              setShowListFile(\"display-none\");\r\n                            }}\r\n                          >\r\n                            delete\r\n                          </i>\r\n                          <span className=\"pull-right\">\r\n                            {\"(\" +\r\n                              (FileUpload.file.size / 1024).toFixed(2) +\r\n                              \"KB)\"}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            disabled={!disable}\r\n                            onClick={onFileUpload}\r\n                          >\r\n                            <i className=\"material-icons\">cloud_upload</i> TẢI\r\n                            LÊN\r\n                          </button>\r\n                        </div>\r\n                        {/* <div className=\"errorUpload\">{UploadError}</div> */}\r\n                      </div>\r\n                      <div className=\"col-md-3\"></div>{\" \"}\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                  <div className={ShowList + \" row\"}>\r\n                    <div className=\"col-md-12 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control height60\"\r\n                        ref={TotalSheetRef}\r\n                        value={TotalSheet}\r\n                        {...bindTotalSheet}\r\n                        min=\"1\"\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-default pull-right\"\r\n                        onClick={Cancel}\r\n                      >\r\n                        <i className=\"material-icons\">undo</i>\r\n                        Hủy\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger pull-right\"\r\n                        disabled={!disable}\r\n                        onClick={PrintBill}\r\n                      >\r\n                        <i className=\"material-icons\">check</i> Xác nhận in\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-12 mt30\">\r\n                      <div className=\"table-responsive\">\r\n                        <table id=\"dataTable\" className=\"table text-center\">\r\n                          <thead className=\" text-primary\">\r\n                            <tr>\r\n                              <th class=\"table-checkbox\">\r\n                                <div className=\"form-check\">\r\n                                  <label className=\"form-check-label\">\r\n                                    <input\r\n                                      className=\"form-check-input\"\r\n                                      type=\"checkbox\"\r\n                                      value=\"checkAll\"\r\n                                      checked={IsChecked}\r\n                                      onChange={handleChange}\r\n                                    />\r\n                                    <span className=\"form-check-sign\">\r\n                                      <span className=\"check\"> </span>\r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </th>\r\n                              <th>NO</th>\r\n                              <th>DATE</th>\r\n                              <th>CUSTOMER</th>\r\n                              <th>ADDRESS</th>\r\n                              <th>CARTON SIDE</th>\r\n                              <th>SERVICE</th>\r\n                              <th>KEEPER</th>\r\n                              <th>DELIVERY NUMBER</th>\r\n                              <th>NOTES</th>\r\n                              <th>BILL</th>\r\n                              <th>ATTN</th>\r\n                              <th>KG</th>\r\n                              <th>FILE SCAN</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            { LadingList.map((item, index) => {\r\n                              debugger\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td class=\"table-checkbox\">\r\n                                    <div className=\"form-check\">\r\n                                      <label className=\"form-check-label\">\r\n                                        <input\r\n                                          className=\"form-check-input\"\r\n                                          type=\"checkbox\"\r\n                                          value={item.No}\r\n                                          checked={item.IsPrint}\r\n                                          onChange={handleChange}\r\n                                        />\r\n                                        <span className=\"form-check-sign\">\r\n                                          <span className=\"check\"></span>\r\n                                        </span>\r\n                                      </label>\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>{index + 1}</td>\r\n                                  <td>{FormatDate(item.Date, \"d-k-y\")}</td>\r\n                                  <td>{item.Customer}</td>\r\n                                  <td>{item.Address}</td>\r\n                                  <td>{item.CartonSide}</td>\r\n                                  <td>{item.DichVu}</td>\r\n                                  <td>{item.Keeper}</td>\r\n                                  <td>{item.TotalDN}</td>\r\n                                  <td>{item.Notes}</td>\r\n                                  <td>{item.Bill}</td>\r\n                                  <td>{item.Attn}</td>\r\n                                  <td>{item.Kg}</td>\r\n                                  <td>{item.FileScan}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\HomeComponent.js",["981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {\r\n\tAlertsuccess,\r\n\tAlerterror,\r\n\tDecodeString,\r\n\tFormatMoney,\r\n\tFormatNumber,\r\n} from \"../../Utils\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp, CanvasChart } from \"../../Common\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const HomeComponent = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n\tconst [FromDate, setFromDate] = useState(new Date());\r\n\tconst [ToDate, setToDate] = useState(new Date());\r\n\tconst FromDateRef = useRef();\r\n\tconst ToDateRef = useRef();\r\n\tconst [Disable, setDisable] = useState(false);\r\n\tconst [DataChart, setDataChart] = useState([]);\r\n\tconst [DataCanvasChart, setDataCanvasChart] = useState([]);\r\n\r\n\t//#region Trạng thái vận đơn\r\n\tconst [Status1, setStatus1] = useState(0);\r\n\tconst [Status2, setStatus2] = useState(0);\r\n\tconst [Status3, setStatus3] = useState(0);\r\n\tconst [Status4, setStatus4] = useState(0);\r\n\tconst [Status5, setStatus5] = useState(0);\r\n\tconst [Status6, setStatus6] = useState(0);\r\n\tconst [Status7, setStatus7] = useState(0);\r\n\tconst [Status8, setStatus8] = useState(0);\r\n\tconst [Status9, setStatus9] = useState(0);\r\n\tconst [Status50, setStatus50] = useState(0);\r\n\tconst [TotalCOD, setTotalCOD] = useState(0);\r\n\tconst [TotalLading, setTotalLading] = useState(0);\r\n\tconst [TotalWeight, setTotalWeight] = useState(0);\r\n\tconst [TotalAmount, setTotalAmount] = useState(0);\r\n\t//#endregion Trạng thái vận đơn\r\n\r\n\t/* run after render */\r\n\tuseEffect(() => {\r\n\t\t//GET CUSTOMER INFO FROM COOKIE\r\n\t\tif (Customer === null || Customer === {}) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t}\r\n\t}, []);\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t};\r\n\r\n\tconst ChangeTypeSearch = (days) => {\r\n\t\tdebugger\r\n\t\tvar date = new Date();\r\n\t\tvar last = new Date(date.getTime() - (parseInt(days) * 24 * 60 * 60 * 1000));\r\n\t\tvar day = last.getDate();\r\n\t\tvar month = last.getMonth() + 1;\r\n\t\tvar year = last.getFullYear();\r\n\t\tsetFromDate(new Date(year + \"/\" + month + \"/\" + day));\r\n\t\tsetToDate(date);\r\n\t}\r\n\r\n\tconst APIC_spLading_SumByStatusOverView = async () => {\r\n\t\tlet params = {\r\n\t\t\tAppAPIKey: APIKey,\r\n\t\t\tTokenDevices: TOKEN_DEVICE,\r\n\t\t\tLadingCode: \"\",\r\n\t\t\tFromDate: FromDate.toISOString(),\r\n\t\t\tToDate: ToDate.toISOString(),\r\n\t\t\tCustomerID: Customer.CustomerID,\r\n\t\t\tCustomerCode: Customer.CustomerCode,\r\n\t\t};\r\n\t\tlet pr = {\r\n\t\t\tJson: JSON.stringify(params),\r\n\t\t\tfunc: \"APIC_spLading_SumByStatusOverView\",\r\n\t\t\tAPI_key: APIKey,\r\n\t\t};\r\n\t\tconst result = await mainAction.API_spCallServer(pr, dispatch);\r\n\t\tlet totalCOD = 0, totalLading = 0, totalWeight = 0, totalAmount = 0;\r\n\t\tlet _s1 = 0, _s2 = 0, _s3 = 0, _s4 = 0, _s5 = 0, _s50 = 0, _s6 = 0, _s7 = 0, _s8 = 0, _s9 = 0;\r\n\t\tlet arrStatus=[9,1,2,3,4,5,6,7,8,50];\r\n\t\tlet listCanvas = [];\r\n\t\tarrStatus.forEach(element => {\r\n\t\t\tlet items = [],title=\"\";\r\n\t\t\tresult.filter(p => p.Status === element).map((item, index) => {\r\n\t\t\t\ttotalCOD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\ttotalLading += (item.Total === undefined ? 0 : item.Total);\r\n\t\t\t\ttotalWeight += (item.Weight === undefined ? 0 : item.Weight);\r\n\t\t\t\ttotalAmount += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\titems.push({ label: item.CreateDate, y: item.Total });\r\n\t\t\t\tif(element===9){\r\n\t\t\t\t\t_s9 += (item.Total);\r\n\t\t\t\t\ttitle=\"Khách hàng tạo bill\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===1){\r\n\t\t\t\t\t_s1 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đang lấy hàng\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===2){\r\n\t\t\t\t\t_s2 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đã lấy hàng\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===3){\r\n\t\t\t\t\t_s3 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đang trung chuyển\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===4){\r\n\t\t\t\t\t_s4 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đã nhận lại\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===5){\r\n\t\t\t\t\t_s5 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đang phát\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===6){\r\n\t\t\t\t\t_s6 += (item.Total);\r\n\t\t\t\t\ttitle=\"Phát thành công\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===7){\r\n\t\t\t\t\t_s7 += (item.Total);\r\n\t\t\t\t\ttitle=\"Phát lại\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===8){\r\n\t\t\t\t\t_s8 += (item.Total);\r\n\t\t\t\t\ttitle=\"Hoàn gốc\";\r\n\t\t\t\t}\r\n\t\t\t\tif(element===50){\r\n\t\t\t\t\t_s50 += (item.Total);\r\n\t\t\t\t\ttitle=\"Đang phát lại\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tlistCanvas.push(\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"column\",\r\n\t\t\t\t\tname: title,\r\n\t\t\t\t\tlegendText: title,\r\n\t\t\t\t\tshowInLegend: true, \r\n\t\t\t\t\tdataPoints:items\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t});\r\n\t\tsetStatus1(_s1);\r\n\t\tsetStatus2(_s2);\r\n\t\tsetStatus3(_s3);\r\n\t\tsetStatus4(_s4);\r\n\t\tsetStatus5(_s5);\r\n\t\tsetStatus6(_s6);\r\n\t\tsetStatus7(_s7);\r\n\t\tsetStatus8(_s8);\r\n\t\tsetStatus9(_s9);\r\n\t\tsetStatus50(_s50);\r\n\t\tsetTotalCOD(totalCOD);\r\n\t\tsetTotalLading(totalLading);\r\n\t\tsetTotalWeight(totalWeight);\r\n\t\tsetTotalAmount(totalAmount);\r\n\t\tsetDataCanvasChart(listCanvas);//.sort((a,b)=>(a.label > b.label)?1:-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-9\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t\t\t<label> Chọn thời gian</label>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0\">\r\n\t\t\t\t\t\t\t\t\t<select className=\"form-control\" onChange={(e) => ChangeTypeSearch(e.target.value)} style={{ height: \"36px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\">Hôm nay</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"30\">30 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t\t\t<label>Từ ngày <span class=\"red\">(*)</span> </label>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0\">\r\n\t\t\t\t\t\t\t\t\t<DateTimePicker className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={date => setFromDate(date)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={FromDate}\r\n\t\t\t\t\t\t\t\t\t\tformat='dd/MM/yyyy'\r\n\t\t\t\t\t\t\t\t\t\tref={FromDateRef}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t\t\t<label>Đến ngày <span class=\"red\">(*)</span> </label>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0\">\r\n\t\t\t\t\t\t\t\t\t<DateTimePicker className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={date => setToDate(date)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={ToDate}\r\n\t\t\t\t\t\t\t\t\t\tformat='dd/MM/yyyy'\r\n\t\t\t\t\t\t\t\t\t\tref={ToDateRef}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-12 text-center\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tdisabled={Disable}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tAPIC_spLading_SumByStatusOverView();\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">search</i>\r\n\t\t\t\t\t\tTìm kiếm\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row mt25 text-center\">\r\n\t\t\t\t\t\t\t<ul className=\"col-md-12 ul-overview\">\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud green\" style={{color:\"#4f81bc\"}}> </i> Mới tạo ({Status9})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud teal\"> </i> Đang lấy hàng ({Status1})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud purple\" style={{color:\"#9bb85d\"}}> </i> Đã lấy hàng ({Status2})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud lime\" style={{color:\"#23bfaa\"}}> </i> Đang trung chuyển ({Status3})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud orange\" style={{color:\"#8064a1\"}}> </i> Đã nhận lại ({Status4})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud maroon\" style={{color:\"#4aacc5\"}}> </i> Đang phát ({Status5})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud blue\" style={{color:\"#f79647\"}}> </i> Phát thành công ({Status6})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud yellow\"> </i> Đang phát lại ({Status50})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-cloud aqua\" style={{color:\"#77a033\"}}> </i> Hoàn gốc ({Status8})\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row mt25\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t\t<CanvasChart data={DataCanvasChart} />\r\n\t\t\t\t\t\t\t\t{/* <ChartTemp type=\"bar\" data={DataChart} title=\"Tổng quan\" /> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t\t<div class=\"alert alert-success text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TIỀN THU HỘ</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatMoney(TotalCOD)}đ</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <div class=\"alert alert-info text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">CHƯA ĐỐI SOÁT</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">2.000.000đ</p>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<div class=\"alert alert-info text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG VẬN ĐƠN</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatNumber(TotalLading)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"alert alert-danger text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG CƯỚC PHÍ</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatMoney(TotalAmount)}đ</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"alert alert-purple text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG TRỌNG LƯỢNG</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatNumber(TotalWeight)} (g)</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\CustomerComplain.js",["999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  ValidPhone,\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n\r\nexport const CustomerComplain = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [LadingCode, setLadingCode] = useState(\"\");\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [Name, setName] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [Type, setType] = useState(0);\r\n  const [Content, setContent] = useState(\"\");\r\n\r\n  const NameRef = useRef();\r\n  const PhoneRef = useRef();\r\n  const LadingCodeRef = useRef();\r\n\r\n  //#region validation\r\n  const [ErrType, setErrType] = useState(\"\");\r\n  const [ErrName, setErrName] = useState(\"\");\r\n  const [ErrPhone, setErrPhone] = useState(\"\");\r\n  const [ErrContent, setErrContent] = useState(\"\");\r\n  //#endregion end validation\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n\r\n    setName(Customer.CustomerName);\r\n    setPhone(Customer.Phone);\r\n\r\n    location.Code === undefined\r\n      ? setLadingCode(\"\")\r\n      : setLadingCode(location.Code);\r\n  }, []);\r\n\r\n  const APIC_spCustomerComplain = async () => {\r\n    debugger;\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      Name: Name,\r\n      Phone: Phone,\r\n      LadingCode: LadingCode,\r\n      Type: parseInt(Type),\r\n      Content: Content,\r\n      SendFrom: \"TRÊN WEBSITE CUSTOMER\",\r\n    };\r\n\r\n    if (Type === 0 || Type === \"0\") {\r\n      Alerterror(\"Vui lòng chọn loại khiếu nại\");\r\n      setErrType(\"form-error\");\r\n      return;\r\n    } else setErrType(\"\");\r\n\r\n    if (Name === \"\") {\r\n      Alerterror(\"Vui lòng nhập tên người khiếu nại\");\r\n      setErrName(\"form-error\");\r\n      return;\r\n    } else setErrName(\"\");\r\n\r\n    if (Phone === \"\") {\r\n      Alerterror(\"Vui lòng nhập số điện thoại\");\r\n      setErrPhone(\"form-error\");\r\n      return;\r\n    } else setErrPhone(\"\");\r\n\r\n    if (ValidPhone(Phone) !== \"\") {\r\n      Alerterror(\"Số điện thoại không đúng định dạng\");\r\n      setErrPhone(\"form-error\");\r\n      return;\r\n    } else if (Content === \"\") {\r\n      Alerterror(\"Vui lòng nhập nội dung khiếu nại\");\r\n      setErrContent(\"form-error\");\r\n      return;\r\n    } else setErrContent(\"\");\r\n\r\n    try {\r\n      setDisable(true); // disable button\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerComplain_JsonAuto\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(pr, dispatch);\r\n      // call redux saga\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n      Alertsuccess(\"Thành công\");\r\n      APIC_spCustomerComplain_Clear();\r\n      const NotifiParam = {\r\n        Json: JSON.stringify({\r\n          CustomerId: CustomerID,\r\n          FuncSend: \"ComplainCreate\",\r\n          SendFrom: \"WEB CUSTOMER\",\r\n          JsonData: [\r\n            {\r\n              Name: Name,\r\n              Phone: Phone,\r\n              Content: Content,\r\n            },\r\n          ],\r\n        }),\r\n        func: \"APIC_spSendNotification\",\r\n        API_key: APIKey,\r\n      };\r\n      const resultNotify = await mainAction.API_spCallServer(\r\n        NotifiParam,\r\n        dispatch\r\n      );\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false);\r\n    }\r\n  };\r\n\r\n  const APIC_spCustomerComplain_Clear = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setLadingCode(\"\");\r\n    setContent(\"\");\r\n    setDisable(false); // disable button\r\n  };\r\n  const RegPhone = (e) => {\r\n    let result = ValidPhone(e);\r\n    setErrPhone(result);\r\n    setPhone(e);\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">\r\n            <i className=\"fa fa-list\"></i> KHIẾU NẠI ĐƠN HÀNG\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-default\">\r\n          <div className=\"panel-heading black bold\">\r\n            <i className=\"fa fa-info-circle\"></i> Thông tin khiếu nại\r\n          </div>\r\n          <div className=\"panel-body col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group bmd-form-group\">\r\n                  <label className=\"mb0\">\r\n                    Loại khiếu nại <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <select\r\n                    className={\"top0 form-control \" + ErrType}\r\n                    value={Type}\r\n                    onChange={(e) => {\r\n                      setType(e.target.value);\r\n                      e.target.value === \"0\"\r\n                        ? setErrType(\"form-error\")\r\n                        : setErrType(\"\");\r\n                    }}\r\n                  >\r\n                    <option value=\"0\">Chọn loại khiếu nại</option>\r\n                    <option value=\"1\">Khiếu nại về dịch vụ</option>\r\n                    <option value=\"2\">Khiếu nại về cước phí</option>\r\n                    <option value=\"3\">Khiếu nại về COD</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"no-absolute\">Mã vận đơn</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={LadingCode}\r\n                    onChange={(e) => setLadingCode(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"no-absolute\">\r\n                    Tên người khiếu nại <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\"form-control \" + ErrName}\r\n                    ref={NameRef}\r\n                    value={Name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"no-absolute\">\r\n                    Số điện thoại liên hệ <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\"form-control \" + ErrPhone}\r\n                    ref={PhoneRef}\r\n                    value={Phone}\r\n                    onChange={(e) => {\r\n                      setPhone(e.target.value);\r\n                      RegPhone(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"no-absolute\">\r\n                    Nội dung khiếu nại <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <textarea\r\n                    className={\"form-control \" + ErrContent}\r\n                    value={Content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    minLength=\"0\"\r\n                    maxLength=\"500\"\r\n                    rows=\"4\"\r\n                    placeholder=\"Nhập nội dung khiếu nại, hỗ trợ, góp ý ...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger pull-right\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerComplain}\r\n                >\r\n                  <i className=\"material-icons\">edit</i>\r\n                  Gửi Yêu Cầu\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-default pull-right\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerComplain_Clear}\r\n                >\r\n                  <i className=\"material-icons\">undo</i>\r\n                  Hủy\r\n                </button>\r\n              </div>\r\n              <div className=\"clearfix\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\CustomerComplainList.js",["1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport {\r\n  PaginationTable,\r\n  FormatDate,\r\n  DecodeString,\r\n  Alerterror,\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const CustomerComplainList = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  const [CustomerComplainlist, setCustomerComplainlist] = useState([]);\r\n  const [AppAPIKey, setAppAPIKey] = useState(\"netcoAPIkey2020\");\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [Type, setType] = useState(0);\r\n  const [State, setState] = useState(0);\r\n  const [Code, binCode, setCode] = useInput(\"\");\r\n\r\n  const [fdate, setFdate] = useState(new Date());\r\n  const [tdate, setTdate] = useState(new Date());\r\n\r\n  const FromDate = (item) => {\r\n    setFdate(item);\r\n  };\r\n  const ToDate = (item) => {\r\n    setTdate(item);\r\n  };\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={}) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const APIC_spCustomerComplainList = async () => {\r\n    if (fdate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return;\r\n    } else if (tdate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return;\r\n    } else {\r\n      let params = {\r\n        AppAPIKey: AppAPIKey,\r\n        CustomerId: CustomerID,\r\n        TokenDevices: \"website\",\r\n        FromDate: fdate.toISOString(),\r\n        ToDate: tdate.toISOString(),\r\n        Skip: 0,\r\n        Take: 200,\r\n        Type: Type,\r\n        State: State,\r\n        Code: Code,\r\n      };\r\n\r\n      const data = await CustomerAction.APIC_spCustomerComplainList(\r\n        params,\r\n        dispatch\r\n      );\r\n      setCustomerComplainlist(JSON.parse(data.data));\r\n      //console.log(data);\r\n    }\r\n    // PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const firtdatasearch = () => {\r\n    setCustomerComplainlist([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tên người khiếu nại\",\r\n      accessor: \"ComplainName\",\r\n      // Cell: ({row})  => (<button className=\"btn btn-sm btn-danger\" onClick={e => clickRow({row})}>Edit</button>)\r\n    },\r\n    {\r\n      Header: \"Mã khiếu nại\",\r\n      accessor: \"ComplainCode\",\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"LadingCode\",\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"ComplainDate\",\r\n      Cell: (obj) => FormatDate(obj.value, \"d/k/y\"),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"ComplainPhone\",\r\n    },\r\n    {\r\n      Header: \"Loại khiếu nại\",\r\n      accessor: \"ComplainType\",\r\n    },\r\n    {\r\n      Header: \"Tình trạng xử lý\",\r\n      accessor: \"ComplainState\",\r\n    },\r\n    {\r\n      Header: \"Nội dung khiếu nại\",\r\n      accessor: \"Content\",\r\n    },\r\n    {\r\n      Header: \"Nội dung xử lý\",\r\n      accessor: \"Note\",\r\n    },\r\n  ];\r\n\r\n  const clickRow = (item) => {\r\n    console.log(\"clickrow\", item.row.ComplainCode);\r\n  };\r\n  const clickexcel = () => {\r\n    let dataExcel = CustomerComplainlist.map((item, index) => {\r\n      let row = new Object();\r\n      row.ComplainCode = item.ComplainCode;\r\n      row.ComplainName = item.ComplainName;\r\n      row.ComplainDate = FormatDate(item.ComplainDate, \"d/k/y\");\r\n      row.ComplainPhone = item.ComplainPhone;\r\n      row.ComplainType = item.ComplainType;\r\n      row.ComplainState = item.ComplainState;\r\n      row.Content = item.Content;\r\n      row.Note = item.Note;\r\n      return row;\r\n    });\r\n    ExportExcel(dataExcel, \"Danh Sách\");\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerComplainList_clear = () => {\r\n    setType(0);\r\n    setState(0);\r\n    setCode(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">DANH SÁCH KHIẾU NẠI</div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group\">\r\n              <label>Từ ngày (*)</label>\r\n              <DateTimePicker\r\n                className=\"form-control\"\r\n                onChange={(date) => FromDate(date)}\r\n                value={fdate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group\">\r\n              <label>Đến ngày (*)</label>\r\n              <DateTimePicker\r\n                className=\"form-control\"\r\n                onChange={(date) => ToDate(date)}\r\n                value={tdate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 mt30\">\r\n            <div className=\"form-group\">\r\n              <label>Mã vận đơn</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={Code}\r\n                {...binCode}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label className=\"mb0\">Loại khiếu nại</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={Type}\r\n              onChange={(e) => setType(e.target.value)}\r\n            >\r\n              <option value=\"0\">Tất Cả</option>\r\n              <option value=\"1\">Khiếu nại về dịch vụ</option>\r\n              <option value=\"2\">Khiếu nại về cước phí</option>\r\n              <option value=\"3\">Khiếu nại về COD</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label className=\"mb0\">Tình trạng xử lý</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={State}\r\n              onChange={(e) => setState(e.target.value)}\r\n            >\r\n              <option value=\"0\">Tất cả</option>\r\n              <option value=\"1\">Chưa xử lý</option>\r\n              <option value=\"2\">Đang xử lý</option>\r\n              <option value=\"3\">Đã xử lý</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-4 mt15\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              disabled={disable}\r\n              onClick={APIC_spCustomerComplainList}\r\n            >\r\n              <i className=\"material-icons\">search</i>\r\n                    Tìm kiếm\r\n                  </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={clickexcel}\r\n              className=\"btn btn-success\"\r\n            >\r\n              <i className=\"material-icons\">get_app</i>\r\n                    Excel\r\n                  </button>\r\n          </div>\r\n          <div className=\"col-md-12 table-responsive mt30\">\r\n            <DataTable data={CustomerComplainlist} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingCreateComponent.js",["1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import React, { useState, useEffect, useRef, useDebugValue } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  SelectCity,\r\n  SelectService,\r\n  SelectDistrict,\r\n  SelectWard,\r\n  SelectSender,\r\n  LadingDetail,\r\n  SelectRecipient\r\n} from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  FormatDate,\r\n  DecodeString,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  ValidPhone,\r\n  Alertwarning,\r\n  FormatNumber,\r\n  GetLatLngGoogle\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Service } from \"../../Redux/Actions/Category\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport Barcode from \"react-barcode\";\r\nimport $ from \"jquery\";\r\n\r\nexport const LadingCreateComponent = () => {\r\n\r\n  //#region ********** KHAI BÁO CÁC BIẾN DỮ LIỆU **********\r\n\r\n  //#region CÁC HÀM KHAI BÁO CHÍNH\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [Title, setTitle] = useState(\"TẠO ĐƠN HÀNG\");\r\n  const [ViewDetail, setViewDetail] = useState(null);\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n\r\n  //#endregion CÁC HÀM KHAI BÁO CHÍNH\r\n\r\n  //#region KHAI BÁO CHO FORM TẠO ĐƠN\r\n\r\n  const [ShowSender, setShowSender] = useState(\"\");\r\n  const [ShowReceipient, setShowReceipient] = useState(\"\");\r\n\r\n  const [LadingId, setLadingId] = useState(0);\r\n  const [LadingCode, setLadingCode] = useState(\"\");\r\n\r\n  //#region Thông tin khách hàng\r\n  const [PostOfficeId, setPostOfficeId] = useState(Customer.PostOfficeId);\r\n  const [CustomerID, setCustomerID] = useState(\r\n    Customer.CustomerID\r\n  );\r\n  const [CustomerName, setCustomerName] = useState(\r\n    Customer.CustomerName\r\n  );\r\n  const [CustomerPhone, setCustomerPhone] = useState(\r\n    Customer.Phone\r\n  );\r\n  const [CustomerAddress, setCustomerAddress] = useState(\r\n    Customer.Address\r\n  );\r\n  const [CustomerCompany, setCustomerCompany] = useState(\r\n    Customer.Company\r\n  );\r\n  //#endregion Thông tin khách hàng\r\n\r\n  //#region Người gửi thực tế\r\n  const [OnLoadSender, setOnloadSender] = useState(0);\r\n  const [SenderMeno, setSenderMeno] = useState({\r\n    value: 0,\r\n    label: Customer.CustomerName + \" - \" + Customer.Phone + \" - \" + Customer.Address,\r\n    obj: {\r\n      NameSend: Customer.CustomerName,\r\n      PhoneSend: Customer.Phone,\r\n      AddressFull: Customer.Address,\r\n      CityId: Customer.City,\r\n      CityName: Customer.CityName,\r\n      DistrictiId: Customer.District,\r\n      DistrictyName: Customer.DistrictName,\r\n      WarId: Customer.Ward,\r\n      WarName: Customer.WardName,\r\n      Street_Number: Customer.Address.replaceAll(\", \" + Customer.Ward, \"\").replaceAll(\", \" + Customer.District, \"\").replaceAll(\", \" + Customer.City, \"\")\r\n    }\r\n  });\r\n  const [SenderName, bindSenderName, setSenderName] = useInput(\r\n    Customer.CustomerName\r\n  );\r\n  const [SenderPhone, bindSenderPhone, setSenderPhone] = useInput(\r\n    Customer.Phone\r\n  );\r\n  const [SenderAddress, bindSenderAddress, setSenderAddress] = useInput(\r\n    Customer.Address\r\n  );\r\n  const [SenderStreet, bindSenderStreet, setSenderStreet] = useInput(\r\n    Customer.Address\r\n  );\r\n  const [CityFrom, setCityFrom] = useState(0);\r\n  const [CityFromName, setCityFromName] = useState(\r\n    Customer.CityName\r\n  );\r\n  const [DistrictFrom, setDistrictFrom] = useState(\r\n    Customer.District\r\n  );\r\n  const [DistrictFromName, setDistrictFromName] = useState(\r\n    Customer.DistrictName\r\n  );\r\n  const [WardFrom, setWardFrom] = useState(\r\n    Customer.Ward\r\n  );\r\n  const [WardFromName, setWardFromName] = useState(\r\n    Customer.WardName\r\n  );\r\n\r\n  const SenderNameRef = useRef();\r\n  const SenderPhoneRef = useRef();\r\n  const SenderAddressRef = useRef();\r\n  const SenderStreetRef = useRef();\r\n\r\n  const [IsSaveSender, setIsSaveSender] = useState(false);\r\n  //#endregion Người gửi thực tế\r\n\r\n  //#region Người nhận\r\n  const [OnLoadRecipient, setOnLoadRecipient] = useState(0);\r\n  const [RecipientMeno, setRecipientMeno] = useState({});\r\n  const [RecipientName, bindRecipientName, setRecipientName] = useInput(\"\");\r\n  const [RecipientPhone, bindRecipientPhone, setRecipientPhone] = useInput(\"\");\r\n  const [RecipientAddress, bindRecipientAddress, setRecipientAddress] = useInput(\"\");\r\n  const [RecipientAddressOld, setRecipientAddressOld] = useState(\"\");\r\n  const [RecipientStreet, bindRecipientStreet, setRecipientStreet] = useInput(\"\");\r\n  const [RecipientCompany, bindRecipientCompany, setRecipientCompany] = useInput(\"\");\r\n  const [CityTo, setCityTo] = useState(0);\r\n  const [DistrictTo, setDistrictTo] = useState(0);\r\n  const [WardTo, setWardTo] = useState(0);\r\n  const [CityToName, setCityToName] = useState(\"\");\r\n  const [DistrictToName, setDistrictToName] = useState(\"\");\r\n  const [WardToName, setWardToName] = useState(\"\");\r\n  const [Lat, setLat] = useState(0);\r\n  const [Lng, setLng] = useState(0);\r\n\r\n  const RecipientNameRef = useRef();\r\n  const RecipientPhoneRef = useRef();\r\n  const RecipientAddressRef = useRef();\r\n  const RecipientStreetRef = useRef();\r\n  const RecipientCompanyRef = useRef();\r\n  //#endregion Người nhận\r\n\r\n  //#region Thông tin hàng hóa\r\n  const [Description, bindDescription, setDescription] = useInput(\"\");\r\n  const [ParnerCode, bindParnerCode, setParnerCode] = useInput(\"\");\r\n  const [Weight, bindWeight, setWeight] = useInput(\"\");\r\n  const [Width, bindWidth, setWidth] = useInput(\"0\");\r\n  const [Noted, bindNoted, setNoted] = useInput(\"\");\r\n  const [NumberItem, bindNumberItem, setNumberItem] = useInput(\"1\");\r\n  const [Height, bindHeight, setHeight] = useInput(\"0\");\r\n  const [Length, bindLength, setLength] = useInput(\"0\");\r\n  const [Mass, bindMass, setMass] = useInput(\"\");\r\n  const DescriptionRef = useRef();\r\n  const ParnerCodeRef = useRef();\r\n  const WeightRef = useRef();\r\n  const WidthRef = useRef();\r\n  const NotedRef = useRef();\r\n  const NumberItemRef = useRef();\r\n  const HeightRef = useRef();\r\n  const LengthRef = useRef();\r\n  const MassRef = useRef();\r\n  //#endregion Thông tin hàng hóa\r\n\r\n  //#region Sản phẩm\r\n  const [ProductCode, bindProductCode, setProductCode] = useInput(\"\");\r\n  const [ProductName, bindProductName, setProductName] = useInput(\"\");\r\n  const [ProductQuality, bindProductQuality, setProductQuality] = useInput(\"\");\r\n  const [ProductDes, bindProductDes, setProductDes] = useInput(\"\");\r\n  const ProductCodeRef = useRef();\r\n  const ProductNameRef = useRef();\r\n  const ProductQualityRef = useRef();\r\n  const ProductDesRef = useRef();\r\n  //#endregion Sản phẩm\r\n\r\n  //#region Dịch vụ chính\r\n  const [ServiceID, setServiceID] = useState(0);\r\n  const [ServiceName, setServiceName] = useState(\"\");\r\n  //#endregion Dịch vụ chính\r\n\r\n  //#region Dịch vụ GTGT\r\n\r\n  const [IsPhuQuocIsLand, bindIsPhuQuocIsLand, setIsPhuQuocIsLand] = useInput(\r\n    0\r\n  );\r\n  const [PhuQuocIsLand, bindPhuQuocIsLand, setPhuQuocIsLand] = useInput(\"\");\r\n  const [IsProtocol, bindIsProtocol, setIsProtocol] = useInput(0);\r\n  const [IsParking, setIsParking] = useState(0);\r\n  const [IsHD, bindIsHD, setIsHD] = useInput(0);\r\n  const [HD, bindHD, setHD] = useInput(0);\r\n  const [IsDelivery, bindIsDelivery, setIsDelivery] = useInput(0);\r\n  const [NumberCoCheck, bindNumberCoCheck, setNumberCoCheck] = useInput(0); // same time check\r\n  const [IsNumberCoCheck, bindIsNumberCoCheck, setIsNumberCoCheck] = useInput(\r\n    0\r\n  ); // same time check\r\n  const [IsSupperMarket, bindIsSupperMarket, setIsSupperMarket] = useInput(0);\r\n  const [SupperMarket, bindSupperMarket, setSupperMarket] = useInput(\"\");\r\n  const HDRef = useRef();\r\n  const NumberCoCheckRef = useRef();\r\n\r\n  const [IsRunservice, setIsRunservice] = useState(1);\r\n\r\n  const [IsSelectService, setIsSelectService] = useState(false);\r\n  const [ServiceGTGTId, setServiceGTGTId] = useState(\"\");\r\n  const [ServiceGTGTName, setServiceGTGTName] = useState(\"\");\r\n  const [RecipientId, setRecipientId] = useState(0);\r\n\r\n  //#endregion Dịch vụ GTGT\r\n\r\n  //#region Hình thức thanh toán\r\n  const [PaymentType, setPaymentType] = useState(Customer.TypeCustomer === 1 ? 0 : 1);\r\n  const [PaymentTypeCode, setPaymentTypeCode] = useState(Customer.TypeCustomer === 1 ? \"TTCT\" : \"NNTT\");\r\n  //#endregion Hình thức thanh toán\r\n\r\n  //#region Thu hộ & khai giá\r\n  const [Cod, bindCod, setCod] = useInput(\"0\");\r\n  const [CODPrice, bindCODPrice, setCODPrice] = useInput(\"0\");\r\n  const [Insured, bindInsured, setInsured] = useInput(\"0\");\r\n  const [InsuredPrice, bindInsuredPrice, setInsuredPrice] = useInput(\"0\");\r\n\r\n  const CodRef = useRef();\r\n  const CODPriceRef = useRef();\r\n  const InsuredRef = useRef();\r\n  const InsuredPriceRef = useRef();\r\n  //#endregion Thu hộ & khai giá\r\n\r\n  //#region Chi tiết cước phí\r\n  const [PPXDPrice, bindPPXDPrice, setPPXDPrice] = useInput(\"\");\r\n  const [PriceMain, bindPriceMain, setPriceMain] = useInput(\"\");\r\n  const [InsuredPrices, bindInsuredPrices, setInsuredPrices] = useInput(\"\");\r\n  const [THBBPrice, bindTHBBPrice, setTHBBPrice] = useInput(\"\");\r\n  const [HDPrice, bindHDPrice, setHDPrice] = useInput(\"\");\r\n  const [PTTPrice, bindPTTPrice, setPTTPrice] = useInput(\"\");\r\n  const [VATPrice, bindVATPrice, setVATPrice] = useInput(\"\");\r\n  const [CODPrices, bindCODPrices, setCODPrices] = useInput(\"\");\r\n  const [BPPrice, bindBPPrice, setBPPrice] = useInput(\"\");\r\n  const [Searchcode, bindSearchcode, setSearchcode] = useInput(\"\");\r\n  const [NPDKPrice, bindNPDKPrice, setNPDKPrice] = useInput(\"\");\r\n  const [HQKPrice, bindHQKPrice, setHQKPrice] = useInput(\"\");\r\n  const PPXDPriceRef = useRef();\r\n  const PriceMainRef = useRef();\r\n  const InsuredPricesRef = useRef();\r\n  const THBBPriceRef = useRef();\r\n  const HDPriceRef = useRef();\r\n  const PTTPriceRef = useRef();\r\n  const VATPriceRef = useRef();\r\n  const CODPricesRef = useRef();\r\n  const BPPriceRef = useRef();\r\n  const SearchcodeRef = useRef();\r\n  const NPDKPriceRef = useRef();\r\n  const HQKPriceRef = useRef();\r\n  const [OnSiteDeliveryPrice, setOnSiteDeliveryPrice] = useState(0);\r\n  const [OnSiteDeliveryPriceMoney, setOnSiteDeliveryPriceMoney] = useState(0);\r\n\r\n  const [Amount, bindAmount, setAmount] = useInput(\"\");\r\n  const AmountRef = useRef();\r\n\r\n  const [Dealine, bindDealine, setDealine] = useInput(\"\");\r\n  const DealineRef = useRef();\r\n  //#endregion  Chi tiết cước phí\r\n\r\n  //#endregion KHAI BÁO CHO FORM TẠO ĐƠN\r\n\r\n  //#region KHAI BÁO CÁC BIẾN ACTION ĐỂ LOAD DATA LÊN FORM\r\n\r\n  const [ServiceGTGT, setServiceGTGT] = useState([]);\r\n  const [getCustomerRecipientLoad, setCustomerRecipientLoad] = useState([]);\r\n  const [dataAddress, setdataAddress] = useState([]);\r\n  const [dataLading, setdataLading] = useState([]);\r\n\r\n  const [IsAcctive, setIsAcctive] = useState(0);\r\n  const [IsLoad, setIsLoad] = useState(false); // active input form when click button edit\r\n  const [IsLoadWardTo, setIsLoadWardTo] = useState(false); // active input form when click button edit\r\n  const [IsLoadDistrictTo, setIsLoadDistrictTo] = useState(false); // active input form when click button edit\r\n  //#endregion KHAI BÁO CÁC BIẾN ACTION ĐỂ LOAD DATA LÊN FORM\r\n\r\n  //#region KHAI BÁO CÁC BIẾN DISPLAY\r\n\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [disablerecipient, setdisablerecipient] = useState(false); // disable button\r\n  const [showinggtgt, setshowinggtgt] = useState(false); // display none div  gtgt\r\n  const [showingdetail, setshowingdetail] = useState(false); // display none\r\n\r\n  //#endregion KHAI BÁO CÁC BIẾN DISPLAY\r\n\r\n  //#region KHAI BÁO CÁC BIẾN CHO FORM IN\r\n\r\n  const [State, setState] = useState([]);\r\n  const [DataPrint, setDataPrint] = useState([]);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [sheetprint, bindsheetprint, setsheetprint] = useInput(2);\r\n  const sheetprintRef = useRef();\r\n\r\n  //#endregion KHAI BÁO CÁC BIẾN CHO FORM IN\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const [phoneReg2, setPhoneReg2] = useState(\"\");\r\n  const [phoneReg3, setPhoneReg3] = useState(\"\");\r\n\r\n\r\n  //#endregion ********** KHAI BÁO CÁC BIẾN DỮ LIỆU **********\r\n\r\n  //#region ********** USE EFFECT **********\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {}) {\r\n      history.push(\"/login\");\r\n    }\r\n    APIC_spLadingGetMany();\r\n    APIC_spServiceGetMany();\r\n    setCityFrom(Customer.City);\r\n    ReadLadingDraft();\r\n    setIsChangeWard(1);\r\n  }, []);\r\n\r\n  //this for APIC_spServiceGetMany no run more time when click, is just one run\r\n  useEffect(() => {\r\n    IsRunservice === 1 ? APIC_spServiceGetMany() : Norun();\r\n  }, [IsRunservice]);\r\n\r\n  /* Chose item from select common province,district,ward*/\r\n\r\n  const Norun = () => {\r\n    console.log(\"No Run\");\r\n  };\r\n\r\n  //#endregion ********** USE EFFECT **********\r\n\r\n  //#region ********** THÔNG TIN ĐƠN HÀNG DANH SÁCH **********\r\n\r\n  //#region HÀM GET DANH SÁCH VẬN ĐƠN MỚI TẠO\r\n\r\n  //conveert date time for load list\r\n  const convert = (str) => {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  };\r\n\r\n  const APIC_spLadingGetMany = async () => {\r\n    let today = new Date(),\r\n      ToDate =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate(),\r\n      FromDate = convert(today.setDate(today.getDate() - 7));\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: \"\",\r\n      FromDate: FromDate,\r\n      ToDate: ToDate,\r\n      CustomerID: parseInt(Customer.CustomerID),\r\n      CustomerCode: Customer.CustomerCode,\r\n      Status: 9,\r\n      Skip: 0,\r\n      Take: 5000,\r\n    };\r\n\r\n    try {\r\n      let prList = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLadingGetManyJsonAuto\",\r\n        API_key: APIKey,\r\n      };\r\n      const data = await mainAction.API_spCallServer(prList, dispatch);\r\n      setdataLading(data);\r\n      //setDisable(false); // disable button\r\n      setIsRunservice(1);\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM GET DANH SÁCH VẬN ĐƠN MỚI TẠO\r\n\r\n  //#region HÀM XEM CHI TIẾT ĐƠN HÀNG\r\n  const [DetailId, setDetailId] = useState(0);\r\n  const GoToDetail = async (item) => {\r\n    let LadingDetail = item._original;\r\n    setDetailId(item._original.Id);\r\n  };\r\n\r\n  //#endregion HÀM XEM CHI TIẾT ĐƠN HÀNG\r\n\r\n  //#region HÀM XÓA VẬN ĐƠN\r\n\r\n  const APIC_spLadingRemove = async (item) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      LadingId: parseInt(item._original.Id),\r\n      CustomerId: Customer.CustomerID,\r\n      Notes: \"KHÁCH HÀNG HỦY BILL TRÊN WEBSITE CUSTOMER\",\r\n    };\r\n    try {\r\n      const data = await Lading.APIC_spLadingRemove(params, dispatch);\r\n      setdataLading(dataLading.filter((p) => p.Id !== item._original.Id));\r\n      Alertsuccess(data);\r\n      //APIC_spLadingGetMany();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM XÓA VẬN ĐƠN\r\n\r\n  //#region HÀM DANH SÁCH VẬN ĐƠN\r\n\r\n  const columns = [\r\n    {\r\n      Cell: (row) => (\r\n        <div className=\"form-check\" style={{ padding: \"0 15px\" }}>\r\n          <label className=\"form-check-label\" style={{ position: \"unset\" }}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={row.original.Id}\r\n              value={row.original.Id}\r\n              checked={row.original.Checked}\r\n              onChange={(e) => handleChange(row)}\r\n            />\r\n            <span className=\"form-check-sign\" htmlFor={row.original.Id}>\r\n              <span className=\"check\"></span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      ),\r\n      maxWidth: 40,\r\n      textAlign: \"center\",\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-eye green button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modalDetail\"\r\n            onClick={() => GoToDetail(row)}\r\n            title=\"Chi tiết\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-edit yellow button\"\r\n            onClick={() => APIC_spLadingEdit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa vận đơn \" + row.Code + \"?\") &&\r\n              APIC_spLadingRemove(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n        </span>\r\n      ),\r\n      minWidth: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 150,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value, 1)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)} (gram)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thu hộ\",\r\n      accessor: \"COD\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Khai giá\",\r\n      accessor: \"Insured\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Hình thức thanh toán\",\r\n      accessor: \"PaymentString\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //#endregion HÀM DANH SÁCH VẬN ĐƠN\r\n\r\n  //#region HÀM IN BILL\r\n  const [pageprint, setpageprint] = useState([0, 1]);\r\n  const [HtmlPrint, setHtmlPrint] = useState(null);\r\n  const APIC_spLadingGetDataPrint = async () => {\r\n    if (DataPrint.length === 0) {\r\n      Alerterror(\"Vui lòng chọn vận đơn cần in\");\r\n      return;\r\n    }\r\n\r\n    //#region SET HTML PRINT\r\n    await setHtmlPrint(\r\n      DataPrint.map((item, index) => {\r\n        return (\r\n          <div>\r\n            {pageprint.map((detail, idele) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"bill\"\r\n                  style={{\r\n                    width: \"710px\",\r\n                    height: \"1050px\",\r\n                    pageBreakBefore: \"always\",\r\n                    border: \"2px solid #000\",\r\n                  }}\r\n                >\r\n                  {item.PaymentType === 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"20vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(70deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD-TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType !== 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType === 1 && item.COD === 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontWeight: \"600\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                          <img\r\n                            src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\"\r\n                            style={{ width: \"180px\", height: \"70px\" }}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              position: \"relative\",\r\n                              display: \"inline-block\",\r\n                              height: \"40px\",\r\n                              marginBottom: \"5px\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              <Barcode value={item.Code} height=\"35\" />\r\n                            </div>\r\n                          </div>\r\n                          <br />\r\n                          <br />\r\n                          <p>\r\n                            BIÊN BẢN BÀN GIAO\r\n                            <br />\r\n                            (DELIVERY RECEIPTS)\r\n                          </p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            width: \"160px\",\r\n                            verticalAlign: \"top\",\r\n                            marginRight: \"1px\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n                            style={{ width: \"160px\", height: \"70px\" }}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>INFORMATION</b>\r\n                          </div>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            borderBottom: \"2px solid #ddd\",\r\n                            width: \"350px\",\r\n                            borderRight: \"1px solid #ddd\",\r\n                          }}\r\n                        >\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Ngày gửi hàng <i>(Date)</i>\r\n                          </b>{\": \"}\r\n                          {FormatDateJson(item.CreateDate, 1)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Số kiện <i>(Package)</i>\r\n                          </b>{\": \"}\r\n                          {FormatMoney(item.Number)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Nội dung hàng hóa <i>(Document,Goods)</i>\r\n                          </b>\r\n                          {\": \"}\r\n                          {item.Description !== undefined ? item.Description : \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Dịch vụ bưu chính <i>((Postal services)</i>\r\n                          </b>\r\n                          : <span>{item.ServiceName}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Dịch vụ cộng thêm <i>(Extra services)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.ServiceGTGTName !== undefined\r\n                            ? item.ServiceGTGTName\r\n                            : \"\"}\r\n                          <br />\r\n                        </td>\r\n                        <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            {(item.Mass === 0 || item.Mass === undefined) ? \"Trọng lượng\" : \"Khối lượng\"}{\" \"}\r\n                            <i>{(item.Mass === 0 || item.Mass === undefined) ? \"(Weight)\" : \"(Mass)\"}</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {(item.Mass === 0 || item.Mass === undefined)\r\n                              ? FormatMoney(item.Weight)\r\n                              : FormatMoney(item.Mass)}{\" \"}\r\n                            {(item.Mass === 0 || item.Mass === undefined) ? \"(gram)\" : \"(CBM)\"}\r\n                          </b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            HT thanh toán <i>(Payment)</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {item.PaymentString !== undefined\r\n                              ? item.PaymentString\r\n                              : \"Khác\"}\r\n                          </b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            COD\r\n                          </lbl>\r\n                          : <b>{FormatMoney(item.COD)} đ</b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            Số tiền phải thu <i>(Total receivables)</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {FormatMoney(\r\n                              item.PaymentType == 1 ? item.Amount : item.COD\r\n                            )}{\" \"}\r\n                            đ\r\n                          </b>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                          <b>\r\n                            THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i>\r\n                          </b>\r\n                          : <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Mã sản phẩm <i>(Product Code)</i>\r\n                          </b>\r\n                          : {item.ProductCode ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            <b>\r\n                              - Tên sản phẩm <i>((Product Name)</i>\r\n                            </b>\r\n                          </b>\r\n                          : {item.ProductName ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Số lượng <i>(Number)</i>\r\n                          </b>{\": \"}\r\n                          {item.ProductQuanlity ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Seri sản phẩm <i>(Product Seri)</i>\r\n                          </b>\r\n                          : <span>{item.ProductDes ?? \"\"}</span>\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\">\r\n                          <u>\r\n                            <b>* LƯU Ý GIAO (DELIVERY NOTE):</b>\r\n                          </u>{\" \"}\r\n                          <span>\r\n                            {item.Noted !== undefined ? item.Noted : \"\"}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>SENDER</b>\r\n                          </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Mã khách hàng <i>(Customer code)</i>\r\n                          </b>\r\n                          : {item.CustomerCode}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Người gửi <i>(Sender's name)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.CustomerName_Reality !== undefined\r\n                            ? item.CustomerName_Reality\r\n                            : item.CustomerName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          <span>\r\n                            {item.CustomerPhone_Reality !== undefined\r\n                              ? item.CustomerPhone_Reality\r\n                              : item.CustomerPhone}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Địa chỉ <i>(Address)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.CustomerAddress_Reality !== undefined\r\n                            ? item.CustomerAddress_Reality\r\n                            : item.CustomerAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                          : {item.CitySendCode}\r\n                          <br />\r\n                          <span\r\n                            style={{\r\n                              padding: \"2px 10px\",\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"45px\",\r\n                              borderTop: \"2px solid #000\",\r\n                              borderBottom: \"2px solid #000\",\r\n                              borderLeft: \"2px solid #000\",\r\n                              top: \"-2px\",\r\n                              right: 0,\r\n                              position: \"absolute\",\r\n                            }}\r\n                          >\r\n                            {item.POCodeFrom}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>RECEIVER</b>\r\n                          </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>:{\" \"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Người nhận <i>(Recipient’s name)</i>\r\n                          </b>\r\n                          : {item.RecipientName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                          : {item.RecipientPhone}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Công ty nhận <i>(Recipient’s company)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          <span>\r\n                            {item.RecipientCompany !== undefined\r\n                              ? item.RecipientCompany\r\n                              : \"\"}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Số nhà, đường <i>(No., Street)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.Street !== undefined\r\n                            ? item.Street\r\n                            : item.RecipientAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Phường/Xã <i>(Ward/Commune)</i>\r\n                          </b>\r\n                          : {item.Wards}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Quận/Huyện <i>(District)</i>\r\n                          </b>\r\n                          : {item.District}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"255px\" }}>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                          : {item.CityRecipientCode}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table style={{\r\n                    width: \"100%\", borderBottom: \"2px solid #ddd\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\", fontSize: \"45px\",\r\n                  }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\">\r\n                    <tbody><tr><td>{item.LocationTo}</td></tr></tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{ width: \"100%\" }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên\r\n                          nhận hàng đúng, đủ nội dung như trên/\r\n                          <br />\r\n                          The consigneee confirms that the Delivery company has\r\n                          delivered to the consignee the correct and sufficient\r\n                          content as above.\r\n                          <br />\r\n                          Bên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá\r\n                          trị như nhau/\r\n                          <br />\r\n                          The Delivery record are made into 02 copies, each party\r\n                          keeps 01 copy with the same value.\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          <br />\r\n                          <b>BÊN GIAO HÀNG</b> <br />\r\n                          <i>(Delivery Company)</i>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          Ngày (Date) ..... / ..... / 20.....\r\n                          <br />\r\n                          <b>BÊN NHẬN HÀNG</b>\r\n                          <br />\r\n                          <i>(Consignee)</i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n    //#endregion SET HTML PRINT\r\n\r\n    //#region Khởi tạo form in\r\n    let _timeout = 1000;\r\n    if (DataPrint.length > 100 && DataPrint.length < 200) _timeout = 2000;\r\n    else if (DataPrint.length > 200) _timeout = 3000;\r\n    let html = $(\"#barcodeTarget\").html();\r\n    html += `<script type=\"text/javascript\">window.focus();setTimeout(function(){window.print();window.close();},${_timeout});</script>`;\r\n    var myWindow = window.open(\"\", \"_blank\");\r\n    myWindow.document.write(\r\n      '<html><head></head><body style=\"margin:0\">' + html + \"</body></html>\"\r\n    );\r\n    //#endregion Khởi tạo form in\r\n  };\r\n\r\n  const ChangeSheetPrint = (event) => {\r\n    const sheetNumber = event.target.value;\r\n    let db = [];\r\n    setpageprint([]);\r\n    if (sheetNumber !== \"\" && sheetNumber !== \"0\") {\r\n      //setshowpage(sheetNumber);\r\n      setsheetprint(sheetNumber);\r\n      for (var i = 0; i < parseInt(sheetNumber); i++) {\r\n        db.push(i);\r\n      }\r\n      setpageprint(db);\r\n    }\r\n  };\r\n\r\n  const handleChange = (row) => {\r\n    dataLading.find((p) => p.Id == row.original.Id).Checked =\r\n      row.original.Checked == false ? true : false;\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  const handleCheckAll = (e) => {\r\n    let allChecked = IsChecked;\r\n    setIsChecked(!IsChecked);\r\n    dataLading.forEach((item) => {\r\n      item.Checked = e.target.checked;\r\n    });\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n  //#endregion HÀM IN BILL\r\n\r\n  //#endregion ********** THÔNG TIN ĐƠN HÀNG DANH SÁCH *********\r\n\r\n  //#region ********** FORM TẠO ĐƠN HÀNG **********\r\n\r\n  //#region HÀM VALIDATE CÁC GIÁ TRỊ NHẬP VÀO\r\n\r\n  const RegPhone = (e, key) => {\r\n    // setTimeout(function(){\r\n    let result = ValidPhone(e);\r\n    if (key == 1) {\r\n      setPhoneReg(result);\r\n      setSenderPhone(e);\r\n      // if (result === \"form-error\"){\r\n      //     SenderPhoneRef.current.focus();\r\n      // }\r\n    } else if (key == 2) {\r\n      setPhoneReg2(result);\r\n      setSenderPhone(e);\r\n    } else {\r\n      setPhoneReg3(result);\r\n      setRecipientPhone(e);\r\n    }\r\n\r\n    // },1000\r\n    //     )\r\n  };\r\n\r\n  //#endregion HÀM VALIDATE CÁC GIÁ TRỊ NHẬP VÀO\r\n\r\n  //#region HÀM CLEAR FORM KHI CLICK LÀM MỚI VÀ SAU KHI SAVE VẬN ĐƠN\r\n\r\n  const Clearform = async () => {\r\n    setLadingCode(\"\");\r\n    onChooseProvinceTo({});\r\n    // onChooseProvinceTo({ value: 0, label:'Chọn tỉnh thành'})\r\n    onChooseDistrictTo({});\r\n    onChooseWardTo({});\r\n    setTitle(\"TẠO ĐƠN HÀNG\");\r\n    APIC_spServiceGetMany();\r\n    setNumberCoCheck(0);\r\n    setSupperMarket(\"0\");\r\n    setPhuQuocIsLand(\"0\");\r\n    setIsSupperMarket(0);\r\n    setIsPhuQuocIsLand(0);\r\n    setIsNumberCoCheck(0);\r\n    setIsHD(0);\r\n    //Sender\r\n    setLadingId(0);\r\n    setServiceID(33);\r\n    setServiceName(\"Chuyển phát nhanh\");\r\n    IsLoadDistrictTo === false\r\n      ? setIsLoadDistrictTo(true)\r\n      : setIsLoadDistrictTo(false);\r\n    IsLoadWardTo === false ? setIsLoadWardTo(true) : setIsLoadWardTo(false);\r\n\r\n    setRecipientPhone(\"\");\r\n    setCityTo(0);\r\n    setWardTo(0);\r\n    setRecipientAddress(\"\");\r\n    setRecipientAddressOld(\"\");\r\n    setRecipientName(\"\");\r\n    setDistrictTo(0);\r\n    setRecipientStreet(\"\");\r\n    setRecipientCompany(\"\");\r\n    //goods\r\n    setDescription(\"\");\r\n    setParnerCode(\"\");\r\n    setWeight(\"\");\r\n    setWidth(\"\");\r\n    setNoted(\"\");\r\n    setNumberItem(\"1\");\r\n    setHeight(\"\");\r\n    setLength(\"\");\r\n    setMass(\"\");\r\n    //collecting money\r\n    setCod(\"\");\r\n    setCODPrice(\"\");\r\n    setInsured(\"\");\r\n    setInsuredPrice(\"\");\r\n    //service\r\n    //setPaymentType(\"\");\r\n    //setServiceGTGTs(\"\");\r\n    //info product\r\n    setProductCode(\"\");\r\n    setProductName(\"\");\r\n    setProductQuality(\"\");\r\n    setProductDes(\"\");\r\n    //Amount\r\n    setAmount(\"\");\r\n    setDealine(\"\");\r\n    //info Detail\r\n    setPPXDPrice(\"\");\r\n    setPriceMain(\"\");\r\n    setInsuredPrices(\"\");\r\n    setTHBBPrice(\"\");\r\n    setHDPrice(\"\");\r\n    setHD(0);\r\n    setPTTPrice(\"\");\r\n    setVATPrice(\"\");\r\n    setCODPrices(\"\");\r\n    setBPPrice(\"\");\r\n    setSearchcode(\"\");\r\n    setNPDKPrice(\"\");\r\n    setHQKPrice(\"\");\r\n    setServiceGTGTId(\"\");\r\n    setServiceGTGTName(\"\");\r\n    setOnloadSender(1);\r\n    setOnLoadRecipient(1);\r\n    setLat(0);\r\n    setLng(0);\r\n  };\r\n\r\n  //#endregion HÀM CLEAR FORM KHI CLICK LÀM MỚI VÀ SAU KHI SAVE VẬN ĐƠN\r\n\r\n  //#region HÀM LOAD DATA CHÍNH SHOW LÊN FORM TẠO ĐƠN HÀNG\r\n\r\n  //#region Hàm load dịch vụ GTGT\r\n  const APIC_spServiceGetMany = async () => {\r\n    let params1 = {\r\n      AppAPIKey: APIKey,\r\n      Type: 1,\r\n    };\r\n    const dataGTGT = await Service.APIC_spServiceGetMany(params1, dispatch); // this is service GTGT\r\n    let arrGTGT = [];\r\n    dataGTGT.map((item, index) => {\r\n      item.checkboxGTGT = false;\r\n      arrGTGT.push(item);\r\n    });\r\n    setServiceGTGT(arrGTGT);\r\n    setIsRunservice(0);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n  //#endregion Hàm load dịch vụ GTGT\r\n\r\n  //#region Hàm load thông tin vận đơn nháp\r\n\r\n  const ReadLadingDraft = async () => {\r\n    let editStr = localStorage.getItem(\"LadingEdit\");\r\n    let draftStr = localStorage.getItem(\"LadingDraft\");\r\n\r\n    if (editStr !== null && editStr !== undefined && editStr !== \"\") {\r\n      Clearform();\r\n      let ladingEdit = JSON.parse(editStr);\r\n      APIC_spLadingEdit({ _original: { Id: ladingEdit.Id } });\r\n      localStorage.setItem(\"LadingEdit\", \"\");\r\n    } else if (draftStr !== \"\" && draftStr !== undefined) {\r\n      let draft = JSON.parse(draftStr);\r\n      if (draft.AddressFromId !== undefined) {\r\n        onSelectSender({ value: draft.AddressFromId, label: draft.AddressFrom, obj: draft.objFrom });\r\n        setShowSender(\" show active\");\r\n      }\r\n      else if (draft.AddressToId !== undefined) {\r\n        onSelectRecipient({ value: draft.AddressToId, label: draft.AddressTo, obj: draft.objTo });\r\n        setShowReceipient(\" show active\");\r\n      }\r\n      else { //Mở từ form ước tính cước phí\r\n        onChooseProvinceFrom({ value: parseInt(draft.CityFrom), label: draft.CityFromName });\r\n        onChooseDistrictFrom({ value: parseInt(draft.DistrictFrom), label: draft.DistrictFromName });\r\n        onChooseWardFrom({ value: 0, label: \"\" });\r\n        setSenderStreet(\"\");\r\n        setSenderName(\"\");\r\n        setSenderPhone(\"\");\r\n        setSenderAddress(draft.DistrictFromName + \", \" + draft.CityFromName);\r\n        onChooseProvinceTo({ value: parseInt(draft.CityTo), label: draft.CityToName });\r\n        onChooseDistrictTo({ value: parseInt(draft.DistrictTo), label: draft.DistrictToName });\r\n        onChooseWardTo({ value: parseInt(draft.WardTo), label: draft.WardToName });\r\n        setRecipientStreet(\"\");\r\n        setRecipientPhone(\"\");\r\n        setRecipientName(\"\");\r\n        setRecipientCompany(\"\");\r\n        setRecipientAddress(draft.WardToName + \", \" + draft.DistrictToName + \", \" + draft.CityToName);\r\n        changeServiceId({ value: draft.ServiceID, label: draft.ServiceName });\r\n        setServiceID(draft.ServiceID);\r\n        setServiceName(draft.ServiceName);\r\n        setWeight(draft.Weight);\r\n        setIsChangeWard(1);\r\n        setIsChangePriceMain(1);\r\n        setShowSender(\" show active\");\r\n        setShowReceipient(\" show active\");\r\n      }\r\n      localStorage.setItem(\"LadingDraft\", \"\");\r\n    } else {\r\n      changeServiceId({ value: 33, label: \"Chuyển phát nhanh\" });\r\n      setServiceID(33);\r\n      setServiceName(\"Chuyển phát nhanh\");\r\n      /* onSelectRecipient({\r\n        value: 0,\r\n        label: \"Chọn địa chỉ\",\r\n        obj: {\r\n          Name: \"\",\r\n          Phone: \"\",\r\n          CityId: 0,\r\n          City: \"Chọn tỉnh thành\",\r\n          DistrictId: 0,\r\n          District: \"Chọn quận huyện\",\r\n          WardId: 0,\r\n          Ward: \"Chọn phường xã\",\r\n          Street: \"\",\r\n          Address: \"\",\r\n          Company: \"\"\r\n        }\r\n      }); */\r\n    }\r\n  };\r\n  //#endregion Hàm load thông tin vận đơn nháp\r\n\r\n  //#endregion HÀM LOAD DATA CHÍNH SHOW LÊN FORM TẠO ĐƠN HÀNG\r\n\r\n  //#region XỬ LÝ TRÊN FROM TẠO ĐƠN HÀNG\r\n\r\n  //#region Chọn địa chỉ gửi\r\n  const onSelectSender = async (item) => {\r\n    setSenderMeno(item);\r\n    setSenderName(item.obj.NameSend);\r\n    setSenderPhone(item.obj.PhoneSend);\r\n    onChooseProvinceFrom({ value: item.obj.CityId, label: item.obj.CityName });\r\n    onChooseDistrictFrom({\r\n      value: item.obj.DistrictiId,\r\n      label: item.obj.DistrictyName,\r\n    });\r\n    onChooseWardFrom({\r\n      value: item.obj.WarId,\r\n      label: item.obj.WarName,\r\n    });\r\n\r\n    setSenderStreet(item.obj.Street_Number);\r\n    setSenderAddress(item.obj.AddressFull);\r\n\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  const changeStreetFrom = (e) => {\r\n    setSenderStreet(e);\r\n    setSenderAddress(e + \", \" + WardFromName + \", \" + DistrictFromName + \", \" + CityFromName);\r\n  };\r\n\r\n  //#endregion Chọn địa chỉ gửi\r\n\r\n  //#region Chọn địa chỉ nhận\r\n  const [StreetSlect, setStreetSelect] = useState(0);\r\n  const onSelectRecipient = async (item) => {\r\n    //active select\r\n    setRecipientId(item.value);\r\n    setRecipientMeno(item);\r\n    onChooseProvinceTo({ value: item.obj.CityId, label: item.obj.City });\r\n    onChooseDistrictTo({ value: item.obj.DistrictId, label: item.obj.District });\r\n    onChooseWardTo({ value: item.obj.WardId, label: item.obj.Ward });\r\n\r\n    setRecipientStreet(item.obj.Street);\r\n    setRecipientPhone(item.obj.Phone);\r\n    setRecipientName(item.obj.Name);\r\n    setRecipientCompany(item.obj.Company);\r\n    setRecipientAddress(item.obj.Address);\r\n    setRecipientAddressOld(item.obj.Address);\r\n    setLat(item.obj.Lat);\r\n    setLng(item.obj.Lng);\r\n\r\n    setStreetSelect(item.obj.Street);\r\n\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  const changeStreetTo = (e) => {\r\n    setRecipientStreet(e);\r\n    setRecipientAddress(e + \", \" + WardToName + \", \" + DistrictToName + \", \" + CityToName);\r\n    if (e === \"\") {\r\n      setLng(0);\r\n      setLat(0);\r\n    }\r\n    else if (e.length> 5 &&(e+ \", \" + WardToName + \", \" + DistrictToName + \", \" + CityToName).toUpperCase() !== RecipientAddressOld.toUpperCase()){\r\n      let check = StreetList.find(p => p.Street.toUpperCase() === e.toUpperCase());\r\n      if(check !== undefined){\r\n        setLat(check.Lat);\r\n        setLng(check.Lng);\r\n      }\r\n      else{\r\n        setLat(0);\r\n        setLng(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  //#endregion Chọn địa chỉ nhận\r\n\r\n  //#region Chọn phường xã, quận huyện, tỉnh thành\r\n\r\n  const onChooseProvinceFrom = (item) => {\r\n    setCityFromName(item.label);\r\n    setCityFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label\r\n    );\r\n  };\r\n  const onChooseDistrictFrom = (item) => {\r\n    setDistrictFromName(item.label);\r\n    setDistrictFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      CityFromName\r\n    );\r\n  };\r\n\r\n  const onChooseWardFrom = (item) => {\r\n    setWardFromName(item.label);\r\n    setWardFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      DistrictFromName + \", \" +\r\n      CityFromName\r\n    );\r\n  };\r\n  //\r\n  const onChooseProvinceTo = (item) => {\r\n    setCityToName(item.label);\r\n    setCityTo(item.value);\r\n    setRecipientAddress(RecipientStreet + \", \" + item.label);\r\n  };\r\n  const onChooseDistrictTo = (item) => {\r\n    setDistrictToName(item.label);\r\n    setDistrictTo(item.value);\r\n    setRecipientAddress(\r\n      RecipientStreet + \", \" +\r\n      (item.label) + \", \" +\r\n      CityToName\r\n    );\r\n  };\r\n  const [StreetList, setStreetList] = useState([]);\r\n  const onChooseWardTo = async (item) => {\r\n    setWardToName(item.label);\r\n    setWardTo(item.value);\r\n    setIsChangeWard(1); // Để gọi useEffect tính ngoại tuyến\r\n\r\n    setRecipientAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      DistrictToName + \", \" +\r\n      CityToName\r\n    );\r\n    //Gọi api nạp danh sách địa chỉ cho khách lựa chọn\r\n    const params = {\r\n      Json: \"[{\\\"WardId\\\":\\\"\" + item.value + \"\\\"}]\",\r\n      func: \"APIC_spCustomerRecipientGetByLocation\",\r\n      API_key: APIKey,\r\n    };\r\n    // call redux saga\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    setStreetList(result);\r\n  };\r\n\r\n  //#endregion  Chọn phường xã, quận huyện, tỉnh thành\r\n\r\n  //#region Kiểm tra lấy lat lng địa chỉ nhận\r\n  const GetLatLng = async () => {\r\n    if (parseInt(Lat) === 0 || parseInt(Lng) === 0 || Lat === undefined || Lng === undefined) {\r\n      let AAA = await GetLatLngGoogle(RecipientAddress);\r\n      Alertsuccess(AAA.NameWard);\r\n      // console.log(AAA, \"aaaaaaaaa\");\r\n    }\r\n  }//#endregion\r\n\r\n  //#region Chọn dịch vụ chính\r\n\r\n  const changeServiceId = (item) => {\r\n    setServiceName(item.label);\r\n    setServiceID(item.value);\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  //#endregion Chọn dịch vụ chính\r\n\r\n  //#region Chọn hình thức thanh toán\r\n\r\n  const changePaymentType = (item) => {\r\n    setPaymentType(item.target.value); // set values for save\r\n    setPaymentTypeCode(item.target.attributes.code.value);\r\n  };\r\n\r\n  //#endregion Chọn hình thức thanh toán\r\n\r\n  //#region Chọn dịch vụ GTGT\r\n\r\n  const onChooseServiceGTGT = (item, element) => {\r\n    if (element.target.checked === true) {\r\n      setServiceGTGTId(ServiceGTGTId + element.target.value + \";\");\r\n      setServiceGTGTName(ServiceGTGTName + item.ServiceCode + \";\");\r\n      ServiceGTGT.find(\r\n        (e) => parseInt(e.ServiceID) == parseInt(element.target.value)\r\n      ).checkboxGTGT = true;\r\n    } else {\r\n      let a = (\";\" + ServiceGTGTId + \";\")\r\n        .replaceAll(\";\", \";;\")\r\n        .replaceAll(\";\" + element.target.value + \";\", \"\")\r\n        .replaceAll(\";;\", \";\");\r\n      let b = (\";\" + ServiceGTGTName + \";\")\r\n        .replaceAll(\";\", \";;\")\r\n        .replaceAll(\";\" + item.ServiceCode + \";\", \"\")\r\n        .replaceAll(\";;\", \";\");\r\n      setServiceGTGTId(a.substring(1, a.length));\r\n      setServiceGTGTName(b.substring(1, b.length));\r\n      ServiceGTGT.find(\r\n        (e) => parseInt(e.ServiceID) == parseInt(element.target.value)\r\n      ).checkboxGTGT = false;\r\n    }\r\n    if (parseInt(element.target.value) === 7 && element.target.checked === true)\r\n      setIsHD(1);\r\n    else if (\r\n      parseInt(element.target.value) === 7 &&\r\n      element.target.checked === false\r\n    )\r\n      setIsHD(0);\r\n\r\n    if (parseInt(element.target.value) === 9 && element.target.checked === true)\r\n      setIsNumberCoCheck(1);\r\n    else if (\r\n      parseInt(element.target.value) === 9 &&\r\n      element.target.checked === false\r\n    )\r\n      setIsNumberCoCheck(0);\r\n\r\n    if (\r\n      parseInt(element.target.value) === 13 &&\r\n      element.target.checked === true\r\n    )\r\n      setSupperMarket(1);\r\n    else if (\r\n      parseInt(element.target.value) === 13 &&\r\n      element.target.checked === false\r\n    )\r\n      setSupperMarket(0);\r\n\r\n    if (\r\n      parseInt(element.target.value) === 14 &&\r\n      element.target.checked === true\r\n    )\r\n      setPhuQuocIsLand(1);\r\n    else if (\r\n      parseInt(element.target.value) === 14 &&\r\n      element.target.checked === false\r\n    )\r\n      setPhuQuocIsLand(0);\r\n\r\n    setIsChangeVatPpxd(1);\r\n  };\r\n\r\n  //#endregion Chọn dịch vụ GTGT\r\n\r\n  //#region Hàm save lading\r\n\r\n  const SaveLading = async () => {\r\n    //#region VALIDATE FUNCTION BEFORE SAVE\r\n    /* if(Customer.Vertification!==1 && Customer.Type===2){\r\n      Alerterror(\"Vui lòng xác thực tài khoản trước khi tạo đơn hàng\");\r\n      return\r\n    } */\r\n    if (SenderName == \"\") {\r\n      Alerterror(\"Nhập tên người gửi\");\r\n      SenderNameRef.current.focus();\r\n      return;\r\n    }\r\n    if (SenderPhone === \"\") {\r\n      Alerterror(\"Nhập số điện thoại người gửi\");\r\n      SenderPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (SenderPhone.length < 8) {\r\n      Alerterror(\"Kiểm tra SĐT người gửi\");\r\n      SenderPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (CityFrom === 0) {\r\n      Alerterror(\"Chọn tỉnh thành người gửi\");\r\n      return;\r\n    }\r\n    if (\r\n      DistrictFrom === 0 ||\r\n      DistrictFrom == undefined\r\n    ) {\r\n      Alerterror(\"Chọn quận huyện người gửi\");\r\n      return;\r\n    }\r\n    if (SenderAddress == \"\") {\r\n      Alerterror(\"Nhập địa chỉ người gửi thực tế\");\r\n      SenderAddressRef.current.focus();\r\n      return;\r\n    }\r\n    //\r\n    if (RecipientName === \"\") {\r\n      Alerterror(\"Nhập tên người nhận\");\r\n      RecipientNameRef.current.focus();\r\n      return;\r\n    }\r\n    if (RecipientPhone === \"\") {\r\n      Alerterror(\"Nhập số điện thoại người nhận\");\r\n      RecipientPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (RecipientPhone.length < 8) {\r\n      Alerterror(\"Nhập SĐT người nhận\");\r\n      RecipientPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (\r\n      CityTo === 0 ||\r\n      CityTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn tỉnh/thành người nhận\");\r\n      return;\r\n    }\r\n    if (\r\n      DistrictTo === 0 ||\r\n      DistrictTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn quận/huyện người nhận\");\r\n      return;\r\n    }\r\n    if (\r\n      WardTo === 0 ||\r\n      WardTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn phường/xã người nhận\");\r\n      return;\r\n    }\r\n    if (RecipientStreet === \"\") {\r\n      Alerterror(\"Nhập số nhà/đường người nhận\");\r\n      RecipientStreetRef.current.focus();\r\n      return;\r\n    }\r\n    if (Description === \"\") {\r\n      Alerterror(\"Nhập nội dung hàng hóa\");\r\n      DescriptionRef.current.focus();\r\n      return;\r\n    }\r\n    if (Weight === \"\") {\r\n      Alerterror(\"Nhập trọng lượng hàng hóa\");\r\n      WeightRef.current.focus();\r\n      return;\r\n    }\r\n    if (NumberItem < 1 || NumberItem === \"\") {\r\n      Alerterror(\"Nhập Số kiện !\");\r\n      NumberItemRef.current.focus();\r\n      return;\r\n    }\r\n    if (ServiceID === 0) {\r\n      Alerterror(\"Chọn dịch vụ\");\r\n      return;\r\n    }\r\n    if (IsHD === 1 && (HD === 0 || HD === \"\")) {\r\n      Alerterror(\"Nhập số lượng hóa đơn\");\r\n      HDRef.current.focus();\r\n      return;\r\n    }\r\n    if (NPDKPrice === 1 && (NumberCoCheck === 0 || NumberCoCheck === \"\")) {\r\n      Alerterror(\"Nhập số lượng đồng kiểm\");\r\n      NumberCoCheckRef.current.focus();\r\n      return;\r\n    }\r\n    let GetLat = Lat, GetLng = Lng,RecipientIdNew=RecipientId;\r\n    if (Lat === 0 || Lng === 0 || Lat === \"\" || Lng === \"\" || Lat === \"0\" || Lng === \"0\"\r\n      || ((LadingId > 0 && RecipientAddress !== RecipientAddressOld))) {\r\n      const res = await GetLatLngGoogle(RecipientAddress)\r\n      if (res) {\r\n        GetLat = res[0].lat\r\n        GetLng = res[0].lng\r\n      }\r\n      RecipientIdNew=0;\r\n    }\r\n\r\n    //#endregion VALIDATE FUNCTION BEFORE SAVE\r\n\r\n    //#region SET PARAMETER\r\n    setDisable(true); // disable button\r\n    let pr = await {\r\n      // TokenDevices:TOKEN_DEVICE,\r\n      Id: LadingId,\r\n      Code: LadingCode,\r\n      Partnercode: ParnerCode,\r\n      SenderId: Customer.CustomerID,\r\n      CustomerCode: Customer.CustomerCode,\r\n      CustomerName: Customer.CustomerName,\r\n      CustomerPhone: Customer.Phone,\r\n      CustomerAddress: Customer.Address,\r\n      CustomerCompany: Customer.Company,\r\n      CitySendId: CityFrom,\r\n      CitySendCode: CityFromName,\r\n      DistrictID_From: DistrictFrom,\r\n      DistrictName_From: DistrictFromName,\r\n      WardID_From: WardFrom,\r\n      WardName_From: WardFromName,\r\n      Street_From: SenderStreet,\r\n      CustomerName_Reality: SenderName,\r\n      CustomerAddress_Reality: SenderAddress,\r\n      CustomerPhone_Reality: SenderPhone,\r\n      RecipientId: RecipientIdNew,\r\n      RecipientName: RecipientName,\r\n      RecipientPhone: RecipientPhone,\r\n      RecipientAddress: RecipientAddress,\r\n      RecipientCompany: RecipientCompany,\r\n      Street: RecipientStreet,\r\n      CityRecipientId: CityTo,\r\n      CityRecipientCode: CityToName,\r\n      DistrictID_To: DistrictTo,\r\n      District: DistrictToName,\r\n      WardId: WardTo,\r\n      Wards: WardToName,\r\n      ServiceId: ServiceID,\r\n      ServiceName: ServiceName,\r\n      ServiceGTGTId: AnotherPriceSave.ListServiceGTGTId,\r\n      ServiceGTGTName: AnotherPriceSave.ListServiceGTGTName,\r\n      PaymentType: PaymentType,\r\n      PaymentTypeName: PaymentTypeCode,\r\n      COD: parseFloat(Cod.toString().replaceAll(\",\", \"\")),\r\n      CODPrice: parseFloat(AnotherPriceSave.CODMoney),\r\n      PackId: 0, ////\r\n      PackPrice: 0, /////\r\n      PercentHD: HD, //////////\r\n      HDPrice: AnotherPriceSave.HDMoney,\r\n      Insured: parseFloat(Insured.toString().replaceAll(\",\", \"\")),\r\n      InsuredPrice: AnotherPriceSave.HHKGMoney,\r\n      PercentPDK: NumberCoCheck,\r\n      NPDKPrice: AnotherPriceSave.NPDKMoney,\r\n      PSTPrice: AnotherPriceSave.PSTMoney,\r\n      PDPQPrice: AnotherPriceSave.PDPQMoney,\r\n      PTTPrice: AnotherPriceSave.PTTMoney,\r\n      HQKPrice: AnotherPriceSave.HQKMoney,\r\n      THBBPrice: AnotherPriceSave.THBBMoney,\r\n      BPPrice: AnotherPriceSave.BPMoney,\r\n      IsBP: IsDelivery,\r\n      IsTHBB: IsProtocol,\r\n      Weight: parseFloat(Weight.toString().replaceAll(\".\", \"\")),\r\n      Number: parseFloat(NumberItem.toString().replaceAll(\".\", \"\")),\r\n      Length: parseFloat(Length.toString().replaceAll(\".\", \"\")),\r\n      Height: parseFloat(Height.toString().replaceAll(\".\", \"\")),\r\n      Width: parseFloat(Width.toString().replaceAll(\".\", \"\")),\r\n      Mass: parseFloat(Mass.toString().replaceAll(\".\", \"\")),\r\n      Noted: Noted,\r\n      Description: Description,\r\n      OnSiteDeliveryPrice: OutlineSave.OnSiteDeliveryPrice,\r\n      OnSiteDeliveryMoney: AnotherPriceSave.OnSiteDeliveryPriceMoney,\r\n      Discount: 0,\r\n      DiscountMoney: 0,\r\n      PriceMain: AnotherPriceSave.PriceMain,\r\n      Allowance: 0,\r\n      PPXDPercent: 0,\r\n      PPXDMoney: AnotherPriceSave.PPXDMoney,\r\n      PPXDPercent: AnotherPriceSave.PPXDPercent,\r\n      IsPPXD: 1,\r\n      VATPercent: AnotherPriceSave.VATPercent,\r\n      VATMoney: AnotherPriceSave.VATMoney,\r\n      TotalMoney: AnotherPriceSave.Amount,\r\n      IsVAT: 1,\r\n      Amount: AnotherPriceSave.Amount,\r\n      TypeLading: 9,\r\n      DealineTime: AnotherPriceSave.DealineTime,\r\n      Status: 9,\r\n      IsSaveSender: IsSaveSender,\r\n      ProductCode: ProductCode,\r\n      ProductName: ProductName,\r\n      ProductDescription: ProductDes,\r\n      Quanlity: ProductQuality,\r\n      Lat_Recipient: GetLat,\r\n      Lng_Recipient: GetLng,\r\n    };\r\n    //#endregion SET PARAMETER\r\n\r\n    //#region GỌI HÀM SAVE\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify(pr),\r\n        func: \"CPN_spLading_Save\",\r\n        API_key: APIKey,\r\n      };\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      Alertsuccess(\"Thành công\");\r\n      Clearform();\r\n      APIC_spLadingGetMany();\r\n      setOnloadSender(1);\r\n      setOnLoadRecipient(1);\r\n      //Gọi send notify\r\n      if ((pr.Id ?? 0) === 0) { //Kiểm tra nếu thêm mới thì gửi notify\r\n        const NotifiParam = {\r\n          Json: JSON.stringify({\r\n            CustomerId: parseInt(Customer.CustomerID),\r\n            FuncSend: \"LadingCreate\",\r\n            SendFrom: \"WEB CUSTOMER\",\r\n            JsonData: [\r\n              {\r\n                LadingCode: result.LadingCode,\r\n                TotalLading: 1,\r\n              },\r\n            ],\r\n          }),\r\n          func: \"APIC_spSendNotification\",\r\n          API_key: APIKey,\r\n        };\r\n        const resultNotify = await mainAction.API_spCallServer(\r\n          NotifiParam,\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n    //#endregion GỌI HÀM SAVE\r\n  };\r\n\r\n  //#endregion Hàm save lading\r\n\r\n  //#region Load thông tin đơn hàng để sửa\r\n\r\n  const APIC_spLadingEdit = async (row) => {\r\n    try {\r\n      //Lấy thông tin vận đơn\r\n      let pr = {\r\n        Json: \"{\\\"LadingId\\\":\" + row._original.Id + \",\\\"CustomerID\\\":\" + Customer.CustomerID + \"}\",\r\n        func: \"APIC_spLading_Find\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      const result = await mainAction.API_spCallServer(pr, dispatch);\r\n      let data = result.Detail[0];\r\n      setshowingdetail(true); // open detail view\r\n      setdisablerecipient();\r\n      setIsAcctive(1);\r\n      setLadingId(data.Id);\r\n      setLadingCode(data.Code);\r\n\r\n      setOnSiteDeliveryPrice(data.OnSiteDeliveryPrice);\r\n      setOnSiteDeliveryPriceMoney(data.OnSiteDeliveryMoney);\r\n\r\n      //#region SHOW THÔNG TIN DỊCH VỤ\r\n      setServiceID(data.ServiceId); // active service\r\n      setServiceName(data.ServiceName); // active service\r\n\r\n      //HÌNH THỨC THANH TOÁN\r\n      setPaymentType(data.PaymentType);\r\n      setPaymentTypeCode(data.PaymentString);\r\n\r\n      //checked box service\r\n      setshowinggtgt(true); // onpen part\r\n      setServiceGTGTId(data.ServiceGTGTId);\r\n      setServiceGTGTName(data.ServiceGTGTName);\r\n      if (data.ServiceGTGTId !== \"\" && data.ServiceGTGTId !== null) {\r\n        let arr = data.ServiceGTGTId.substring(\r\n          0,\r\n          data.ServiceGTGTId.length - 1\r\n        ).split(\";\");\r\n        //bỏ chọn tất cả dv gtgt\r\n        ServiceGTGT.filter(\r\n          (i) => arr.indexOf(i.ServiceID) === -1\r\n        ).checkboxGTGT = false;\r\n\r\n        // check chọn dv gtgt\r\n        arr.forEach((element) => {\r\n          ServiceGTGT.find(\r\n            (i) => i.ServiceID === parseInt(element)\r\n          ).checkboxGTGT = true;\r\n          if (parseInt(element) === 7) {\r\n            setIsHD(1);\r\n            setHD(data.PercentHD);\r\n          }\r\n          if (parseInt(element) === 9) {\r\n            setIsNumberCoCheck(1);\r\n            setNumberCoCheck(data.NumberCoCheck);\r\n          }\r\n          if (parseInt(element) === 13) setSupperMarket(1);\r\n          if (parseInt(element) === 14) setPhuQuocIsLand(1);\r\n        });\r\n      }\r\n\r\n      //#endregion SHOW THÔNG TIN DỊCH VỤ\r\n\r\n      //#region SHOW THÔNG TIN SẢN PHẨM\r\n\r\n      setProductCode(data.ProductCode);\r\n      setProductName(data.ProductName);\r\n      setProductQuality(data.ProductNum);\r\n      setProductDes(data.ProductDesc);\r\n\r\n      //#endregion SHOW THÔNG TIN SẢN PHẨM\r\n\r\n      //#region THÔNG TIN ĐƠN HÀNG\r\n\r\n      setDescription(data.Description);\r\n      setParnerCode(data.PartnerCode);\r\n      setWeight(data.Weight ?? 0);\r\n      setWidth(data.Width ?? 0);\r\n      setNoted(data.Noted);\r\n      setNumberItem(data.Number ?? 1);\r\n      setHeight(data.Height ?? 0);\r\n      setLength(data.Length ?? 0);\r\n      setMass(data.Mass ?? 0);\r\n      setDealine(FormatDate(data.DealineTime, \"d/k/y\"));\r\n\r\n      //#endregion THÔNG TIN ĐƠN HÀNG\r\n\r\n      //#region SHOW THÔNG TIN CƯỚC PHÍ\r\n\r\n      // 4 CỘT NHẬP ĐẶC BIỆT\r\n\r\n      //collecting money\r\n      setCod(data.COD ?? 0);\r\n      setCODPrice(data.CODPrice ?? 0);\r\n      setInsured(data.Insured ?? 0);\r\n      setInsuredPrice(data.InsuredPrice ?? 0);\r\n\r\n      setAmount(data.Amount ?? 0);\r\n      setPriceMain(data.PriceMain ?? 0);\r\n      setVATPrice(data.VATMoney ?? 0);\r\n      setPPXDPrice(data.PDPQPrice ?? 0);\r\n\r\n      //#endregion SHOW THÔNG TIN CƯỚC PHÍ\r\n\r\n      //#region THÔNG TIN NGƯỜI GỬI\r\n      onSelectSender({\r\n        value: 0,\r\n        label: data.CustomerName_Reality + \" - \" + data.CustomerPhone_Reality + \" - \" + data.CustomerAddress_Reality,\r\n        obj: {\r\n          NameSend: data.CustomerName_Reality,\r\n          PhoneSend: data.CustomerPhone_Reality,\r\n          CityId: parseInt(data.CitySendId),\r\n          CityName: data.CitySendCode,\r\n          DistrictiId: parseInt(data.DistrictID_Fom),\r\n          DistrictyName: data.DistrictName_From,\r\n          WarId: parseInt(data.WardId_From),\r\n          WarName: data.WardName_From,\r\n          Street_Number: data.CustomerAddress_Reality.replaceAll(\", \" + data.WardName_From + \", \", \"\").replaceAll(data.DistrictName_From + \", \", \"\").replaceAll(data.CitySendCode, \"\"),\r\n          AddressFull: data.CustomerAddress_Reality\r\n        }\r\n      });\r\n\r\n      //#endregion\r\n\r\n      //#region THÔNG TIN NGƯỜI NHẬN\r\n\r\n      onSelectRecipient({\r\n        value: data.RecipientId,\r\n        label: data.RecipientName + \" - \" + data.RecipientPhone + \" - \" + data.RecipientAddress,\r\n        obj: {\r\n          Name: data.RecipientName,\r\n          Phone: data.RecipientPhone,\r\n          CityId: parseInt(data.CityRecipientId),\r\n          City: data.CityRecipientCode,\r\n          DistrictId: parseInt(data.DistrictID_To),\r\n          District: data.District,\r\n          WardId: parseInt(data.WardId),\r\n          Ward: data.Wards,\r\n          Street: data.Street,\r\n          Address: data.RecipientAddress,\r\n          Company: data.RecipientCompany,\r\n          Lat: data.Lat_Recipient,\r\n          Lng: data.Lng_Recipient\r\n        }\r\n      });\r\n      setLat(data.Lat_Recipient);\r\n      setLng(data.Lng_Recipient);\r\n\r\n      //#endregion THÔNG TIN NGƯỜI NHẬN\r\n\r\n      setTitle(\"SỬA THÔNG TIN ĐƠN HÀNG\");\r\n\r\n      setIsChangePriceMain(1);\r\n      setIsChangeVatPpxd(1);\r\n\r\n      setShowCreateTab(\"show active\");\r\n      setShowListTab(\"\");\r\n    } catch (err) {\r\n      setTitle(\"TẠO ĐƠN HÀNG\");\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion Load thông tin đơn hàng để sửa\r\n\r\n  //#endregion XỬ LÝ TRÊN FROM TẠO ĐƠN HÀNG\r\n\r\n  //#region TÍNH CƯỚC PHÍ\r\n\r\n  //#region Tính ngoại tuyến\r\n\r\n  const [IsChangeWard, setIsChangeWard] = useState(0);\r\n  const [OutlineSave, setOutlineSave] = useState({});\r\n  useEffect(() => {\r\n    IsChangeWard === 1 ? CPN_spLocationCheckCustomer() : Norun();\r\n  }, [IsChangeWard]);\r\n\r\n  const CPN_spLocationCheckCustomer = async () => {\r\n    if (WardTo === 0) return;\r\n    const pr = {\r\n      CustomerId: parseInt(Customer.CustomerID),\r\n      WardId: WardTo, //WardTo\r\n    };\r\n\r\n    const params = {\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLocationCheckCustomer\",\r\n    };\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    setOutlineSave(result);\r\n    if (result.Status !== \"\") {\r\n      Alertsuccess(result.Status);\r\n    }\r\n    setOnSiteDeliveryPrice(result.OnSiteDeliveryPrice);\r\n    setOnSiteDeliveryPriceMoney(result.OnSiteDeliveryPriceMoney);\r\n    setIsChangeWard(0);\r\n  };\r\n\r\n  //#endregion TÍNH NGOẠI TUYẾN KHI CHỌN PHƯỜNG XÃ NHẬN\r\n\r\n  //#region TÍNH CƯỚC TRẮNG KHI CHỌN TỈNH, DỊCH VỤ, TRỌNG LƯỢNG\r\n\r\n  const [IsChangePriceMain, setIsChangePriceMain] = useState(0);\r\n  const [PriceMainSave, setPriceMainSave] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (IsChangePriceMain === 1) {\r\n      CPN_spLading_PriceMain();\r\n      setIsChangePriceMain(0);\r\n    } else Norun();\r\n  }, [IsChangePriceMain]);\r\n\r\n  const CPN_spLading_PriceMain = async () => {\r\n    if (\r\n      CityFrom === 0 ||\r\n      CityTo === 0 ||\r\n      (Weight === \"\" && Mass === \"\") ||\r\n      (Weight === 0 && Mass === 0) ||\r\n      (Weight === 0 && Mass === \"\") ||\r\n      (Weight === \"\" && Mass === 0) ||\r\n      ServiceID === 0 ||\r\n      ServiceID === undefined\r\n    ) {\r\n      return;\r\n    }\r\n    let pr = {\r\n      CustomerId: parseInt(Customer.CustomerID),\r\n      ServiceId: ServiceID,\r\n      Weight: Weight === \"\" ? 0 : parseInt(Weight),\r\n      Mass: Mass === \"\" ? 0 : parseInt(Mass),\r\n      Number: NumberItem === \"\" ? 1 : parseInt(NumberItem),\r\n      ProvinceID_From: CityFrom,\r\n      DistrictID_From: DistrictFrom,\r\n      ProvinceID_To: CityTo,\r\n      DistrictID_To: DistrictTo,\r\n      Keykl: 0,\r\n      IsAPI: 1,\r\n    };\r\n    try {\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(pr),\r\n        func: \"CPN_spLading_PriceMain\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      setPriceMainSave(data.length === 0 ? 18000 : parseInt(data));\r\n      setPriceMain(FormatMoney(data.length === 0 ? 18000 : parseInt(data), 0));\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setIsChangeVatPpxd(1);\r\n    setIsChangePriceMain(0);\r\n  };\r\n\r\n  //#endregion TÍNH CƯỚC TRẮNG KHI CHỌN TỈNH, DỊCH VỤ, TRỌNG LƯỢNG\r\n\r\n  //#region TÍNH GIÁ DỊCH VỤ GTGT VÀ VAT PPXD\r\n\r\n  const [IsChangeVatPpxd, setIsChangeVatPpxd] = useState(0);\r\n  useEffect(() => {\r\n    if (IsChangeVatPpxd === 1) {\r\n      CPN_spLadingGetAnotherServiceMoney();\r\n      setIsChangeVatPpxd(0);\r\n    } else Norun();\r\n  }, [IsChangeVatPpxd]);\r\n\r\n  const [AnotherPriceSave, setAnotherPriceSave] = useState([]);\r\n  const CPN_spLadingGetAnotherServiceMoney = async () => {\r\n    let _listServiceSelect = \";\" + ServiceGTGTId;\r\n    let pr = {\r\n      CustomerId: parseInt(Customer.CustomerID), // đây là í của customer đăng nhập\r\n      ServiceId: ServiceID, // đây là id dịch vụ vd như CPN,\r\n      PostOfficeId: PostOfficeId, //Bưu cục của KH\r\n      THBB: _listServiceSelect.indexOf(\";1;\") !== -1 ? 1 : 0, // thu hồi biên bản\r\n      BP: _listServiceSelect.indexOf(\";2;\") !== -1 ? 1 : 0, //báo phát\r\n      HD: HD > 1 || _listServiceSelect.indexOf(\";7;\") !== -1 ? HD : 0, //hóa đơn Important\r\n      NPDK:\r\n        NumberCoCheck > 1 || _listServiceSelect.indexOf(\";9;\") !== -1\r\n          ? NumberCoCheck\r\n          : 0, //Số lượng đồng kiểm  Important\r\n      PTT: _listServiceSelect.indexOf(\";10;\") !== -1 ? 1 : 0, // phát tận tay\r\n      HQK: _listServiceSelect.indexOf(\";12;\") !== -1 ? 1 : 0, // hàng quá khổ\r\n      PST:\r\n        SupperMarket > 1 || _listServiceSelect.indexOf(\";13;\") !== -1\r\n          ? SupperMarket\r\n          : 0, // phát siêu thị  Important\r\n      PDPQ:\r\n        PhuQuocIsLand > 1 || _listServiceSelect.indexOf(\";14;\") !== -1\r\n          ? PhuQuocIsLand\r\n          : 0, // phát đảo phú quốc  Important\r\n      COD:\r\n        Cod.toString() !== \"\"\r\n          ? parseFloat(Cod.toString().replaceAll(\",\", \"\"))\r\n          : 0, // Tiền thu hộ\r\n      HHKG:\r\n        Insured.toString() !== \"\"\r\n          ? parseFloat(Insured.toString().replaceAll(\",\", \"\"))\r\n          : 0, // Khai giá\r\n      PriceMain: PriceMainSave,\r\n      Width: parseFloat(Width),\r\n      Height: parseFloat(Height),\r\n      Length: parseFloat(Length),\r\n      //PackType:0\r\n      //IsPPXD:PPXDPercent>0?1:0,\r\n      //IsVAt:VAT>0?1:0,\r\n      IsPPXD: 1,\r\n      IsVAT: 1,\r\n      OnSiteDeliveryPrice: OnSiteDeliveryPrice,\r\n      OnSiteDeliveryPriceMoney: OnSiteDeliveryPriceMoney,\r\n      //PercentDiscount:0\r\n      Allowance: 0,\r\n      TypeElec: 0, //Loại khách hàng TMĐT & KHTT\r\n      CitySendId: CityFrom,\r\n      CityToId: CityTo,\r\n      //WardTo: WardTo,\r\n    };\r\n\r\n    try {\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify([pr]),\r\n        func: \"CPN_spLadingGetAnotherServiceMoney\",\r\n      };\r\n      console.log(params);\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      const data = result[0];\r\n      console.log(CPN_spLadingGetAnotherServiceMoney, data);\r\n      setDealine(FormatDateJson(data.DealineTime));\r\n      setTHBBPrice(FormatMoney(data.THBBMoney, 0)); //  thu hồi bb\r\n      setBPPrice(FormatMoney(data.BPMoney, 0)); //báo phát\r\n      setHDPrice(FormatMoney(data.HDMoney, 0));\r\n      setNPDKPrice(FormatMoney(data.NPDKMoney, 0));\r\n      setPTTPrice(FormatMoney(data.PTTMoney, 0)); //\r\n      setHQKPrice(FormatMoney(data.HQKMoney, 0));\r\n      setCODPrice(FormatMoney(data.CODMoney, 0));\r\n      setInsuredPrice(FormatMoney(data.HHKGMoney, 0)); // hvae two InsuredMoney\r\n      setPPXDPrice(FormatMoney(data.PPXDMoney, 0)); // pp xăng dầu\r\n      setVATPrice(FormatMoney(data.VATMoney, 0));\r\n      setAnotherPriceSave(data); //data này dùng để save lading\r\n\r\n      setOnSiteDeliveryPrice(data.OnSiteDeliveryPrice);\r\n      setOnSiteDeliveryPriceMoney(data.OnSiteDeliveryPriceMoney);\r\n\r\n      setPriceMain(FormatMoney(data.PriceMain, 0));\r\n      setPriceMainSave(data.PriceMain);\r\n      setAmount(FormatMoney(data.Amount, 0));\r\n      if (data.Amount <= 1000000000) setDisable(false);\r\n      else {\r\n        setDisable(true);\r\n        Alerterror(\r\n          \"Cước phí lớn hơn 1.000.000.000đ. Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco để được hỗ trợ\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  //#endregion TÍNH GIÁ DỊCH VỤ GTGT VÀ VAT PPXD\r\n\r\n  //#endregion TÍNH CƯỚC PHÍ\r\n\r\n  //#endregion ******** FORM TẠO ĐƠN HÀNG **********\r\n\r\n  //#region ********** HÀM LOAD HTML **********\r\n  const StreetHtml = (\r\n    <ul contentEditable>\r\n      {StreetList.map((item, index) => {\r\n        return (\r\n          <li className=\"street-item cursor\" onClick={(e) => { setRecipientStreet(item.Street); setLat(item.Lat); setLng(item.Lng); RecipientStreetRef.current.focus() }}>\r\n            {item.Street}\r\n          </li>\r\n        )\r\n      }\r\n      )}\r\n    </ul>\r\n  );\r\n\r\n  const CreateLading = (\r\n    <form className=\"row\">\r\n      {/* <div className=\"main-title bg-light-green\">\r\n        <i className=\"fa fa-shopping-cart\"></i> {Title}\r\n      </div> */}\r\n      {/* <div\r\n        className=\"col-md-12 red text-center\"\r\n        style={{ marginBottom: \"5px\" }}\r\n      >\r\n        Quý khách chỉ cần tạo vận đơn, NETCO sẽ liên hệ ngay với quý khách trong\r\n        thời gian sớm nhất !\r\n      </div> */}\r\n      <div className=\"col-md-6\">\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseSender\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-user\"></i> NGƯỜI GỬI{\" \"}\r\n              <span className=\"red\">(*)</span>\r\n            </a>\r\n            <a\r\n              className=\"pull-right white\"\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseSender\"\r\n            >\r\n              <small>\r\n                Nhập địa chỉ gửi <i className=\"fa fa-edit\"></i>\r\n              </small>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <SelectSender\r\n                  onActive={SenderMeno.value}\r\n                  defaultLabel={SenderMeno.label}\r\n                  onSelected={(item) => {\r\n                    onSelectSender(item);\r\n                  }}\r\n                  onLoad={OnLoadSender}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={\"panel-collapse collapse mt15 in\" + ShowSender}\r\n              id=\"collapseSender\"\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Họ tên <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderNameRef}\r\n                      value={SenderName}\r\n                      {...bindSenderName}\r\n                      title=\"Họ tên bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Điện thoại <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\"form-control \" + phoneReg2}\r\n                      ref={SenderPhoneRef}\r\n                      value={SenderPhone}\r\n                      {...bindSenderPhone}\r\n                      title=\"Điện thoại bắt buộc nhập !\"\r\n                      onChange={(e) => {\r\n                        setSenderPhone(e.target.value);\r\n                      }}\r\n                      minLength=\"8\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Tỉnh thành <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectCity\r\n                      onActive={CityFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseProvinceFrom(item);\r\n                      }}\r\n                      onBlur={(e) => setIsChangePriceMain(1)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Quận huyện <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectDistrict\r\n                      key=\"DistrictFrom\"\r\n                      onActive={DistrictFrom}\r\n                      ParentID={CityFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseDistrictFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Phường xã <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectWard\r\n                      key=\"WardFrom\"\r\n                      onActive={WardFrom}\r\n                      ParentID={DistrictFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseWardFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\" style={{ marginTop: \"27px\" }}>\r\n                    <label>\r\n                      Số nhà/ đường <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderStreetRef}\r\n                      value={SenderStreet}\r\n                      {...bindSenderStreet}\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      onBlur={(e) => {\r\n                        changeStreetFrom(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Địa chỉ gửi <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderAddressRef}\r\n                      value={SenderAddress}\r\n                      {...bindSenderAddress}\r\n                      title=\"Địa chỉ gửi bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      disabled=\"disabled\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 text-center\">\r\n                  <div\r\n                    className=\"form-check\"\r\n                    title=\"Thêm vào địa chỉ gửi thường xuyên\"\r\n                  >\r\n                    <label className=\"form-check-label font-size-11px\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"1\"\r\n                        onClick={() => { setIsSaveSender(!IsSaveSender); setShowSender(\"\"); }}\r\n                      />\r\n                      Thêm vào địa chỉ gửi thường xuyên\r\n                      <span className=\"form-check-sign\">\r\n                        <span className=\"check\"></span>\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseReceipient\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-user\"></i> NGƯỜI NHẬN{\" \"}\r\n              <span className=\"red\">(*)</span>\r\n            </a>\r\n            <a\r\n              className=\"pull-right white\"\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseReceipient\"\r\n            >\r\n              <small>\r\n                Nhập địa chỉ nhận <i className=\"fa fa-edit\"></i>\r\n              </small>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"form-group mt0\">\r\n                  <SelectRecipient\r\n                    onActive={RecipientId}\r\n                    onSelected={(item) => {\r\n                      onSelectRecipient(item);\r\n                    }}\r\n                    onLoad={OnLoadRecipient}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 display-none\">Lat {Lat} Lng {Lng}</div>\r\n            </div>\r\n            <div className={\"panel-collapse collapse in \" + ShowReceipient} id=\"collapseReceipient\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Họ tên <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={RecipientNameRef}\r\n                      value={RecipientName}\r\n                      {...bindRecipientName}\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Điện thoại <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\"form-control \" + phoneReg3}\r\n                      ref={RecipientPhoneRef}\r\n                      value={RecipientPhone}\r\n                      {...bindRecipientPhone}\r\n                      onChange={(e) => {\r\n                        setRecipientPhone(e.target.value);\r\n                      }}\r\n                      minLength=\"8\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Tỉnh thành <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectCity\r\n                      onActive={CityTo}\r\n                      IsLoad={IsLoad}\r\n                      onSelected={(item) => {\r\n                        onChooseProvinceTo(item);\r\n                      }}\r\n                      onBlur={(e) => setIsChangePriceMain(1)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Quận huyện <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectDistrict\r\n                      key=\"DistrictTo\"\r\n                      onActive={DistrictTo}\r\n                      ParentID={CityTo}\r\n                      onSelected={(item) => {\r\n                        onChooseDistrictTo(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0\">\r\n                      Phường xã <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectWard\r\n                      key=\"WardTo\"\r\n                      onActive={WardTo}\r\n                      ParentID={DistrictTo}\r\n                      onSelected={(item) => {\r\n                        onChooseWardTo(item);\r\n                      }}\r\n                      onBlur={(e) => {\r\n                        CPN_spLocationCheckCustomer(e);\r\n                        setIsChangePriceMain(1);\r\n                        setRecipientId(0);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group StreetToArea\" style={{ marginTop: \"27px\" }}>\r\n                    <label>\r\n                      Số nhà /Đường <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={RecipientStreetRef}\r\n                      value={RecipientStreet}\r\n                      {...bindRecipientStreet}\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      onBlur={(e) => {\r\n                        changeStreetTo(e.target.value);\r\n                        setRecipientId(0);\r\n                      }}\r\n                    />\r\n                    <div className=\"ListStreet\">\r\n                      {StreetHtml}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Địa chỉ nhận <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={RecipientAddressRef}\r\n                      value={RecipientAddress}\r\n                      {...bindRecipientAddress}\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      disabled=\"disabled\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label>Công ty nhận</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={RecipientCompanyRef}\r\n                      value={RecipientCompany}\r\n                      {...bindRecipientCompany}\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 text-center\">\r\n                  <div\r\n                    className=\"form-check\"\r\n                    title=\"Thêm vào địa chỉ nhận thường xuyên\"\r\n                  >\r\n                    <label className=\"form-check-label font-size-11px\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"1\"\r\n                        onChange={(element) => { setShowReceipient(\"\"); }}\r\n                      />\r\n                      Thêm vào địa chỉ nhận thường xuyên\r\n                      <span className=\"form-check-sign\">\r\n                        <span className=\"check\"></span>\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <i className=\"fa fa-shopping-cart\"></i> HÀNG HÓA:\r\n          </div>\r\n          <div className=\"panel-body row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Nội dung <span className=\"red\"> *</span>\r\n                </label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  ref={DescriptionRef}\r\n                  value={Description}\r\n                  {...bindDescription}\r\n                  minLength=\"0\"\r\n                  maxLength=\"500\"\r\n                  rows=\"2\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"form-group\">\r\n                <label> Ghi chú </label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  ref={NotedRef}\r\n                  value={Noted}\r\n                  {...bindNoted}\r\n                  minLength=\"0\"\r\n                  maxLength=\"250\"\r\n                  rows=\"2\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Trọng lượng<span className=\"red\"> *</span>\r\n                </label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={WeightRef}\r\n                    value={FormatMoney(Weight)}\r\n                    {...bindWeight}\r\n                    onChange={(e) => {\r\n                      setWeight(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => { setMass(0); setIsChangePriceMain(1); }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">gram</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Số kiện<span className=\"red\"> *</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  ref={NumberItemRef}\r\n                  value={FormatMoney(NumberItem)}\r\n                  {...bindNumberItem}\r\n                  min=\"1\"\r\n                  max=\"1000\"\r\n                  onChange={(e) => {\r\n                    setNumberItem(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <label>Dài</label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={WidthRef}\r\n                    value={FormatMoney(Width)}\r\n                    {...bindWidth}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setWidth(e.target.value);\r\n                    }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <label>Rộng</label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={HeightRef}\r\n                    value={FormatMoney(Height)}\r\n                    {...bindHeight}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setHeight(e.target.value);\r\n                    }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <label>Cao</label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={LengthRef}\r\n                    value={FormatMoney(Length)}\r\n                    {...bindLength}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setLength(e.target.value);\r\n                    }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <label>Khối lượng</label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={MassRef}\r\n                    value={FormatMoney(Mass)}\r\n                    {...bindMass}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setMass(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => { setWeight(0); setIsChangePriceMain(1); }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cbm</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseTwo\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-info-circle\"></i> THÔNG TIN SẢN PHẨM\r\n            </a>\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseTwo\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-chevron-circle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in\" id=\"collapseTwo\">\r\n            <div className=\"panel-body row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Mã sản phẩm</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductCodeRef}\r\n                    value={ProductCode}\r\n                    {...bindProductCode}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên sản phẩm</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductNameRef}\r\n                    value={ProductName}\r\n                    {...bindProductName}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Số lượng</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={ProductQualityRef}\r\n                    value={ProductQuality}\r\n                    {...bindProductQuality}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Số seri</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductDesRef}\r\n                    value={ProductDes}\r\n                    {...bindProductDes}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <i className=\"fa fa-truck\" style={{ transform: \"scaleX(-1)\" }}></i>{\" \"}\r\n            CHỌN DỊCH VỤ <span className=\"red\">(*)</span>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <SelectService\r\n              onActive={ServiceID}\r\n              onSelected={(item) => {\r\n                changeServiceId(item);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseGTGT\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-plus\"></i> DỊCH VỤ GTGT:\r\n            </a>\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseGTGT\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-chevron-circle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in\" id=\"collapseGTGT\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"row\">\r\n                {ServiceGTGT.map((item, index) => {\r\n                  if (\r\n                    item.ServiceID !== 4 &&\r\n                    item.ServiceID !== 6 &&\r\n                    item.ServiceID !== 3 &&\r\n                    item.ServiceID !== 8\r\n                  )\r\n                    return (\r\n                      <div className=\"col-md-2\" key={index}>\r\n                        <div className=\"form-check\" title={item.ServiceName}>\r\n                          <label className=\"form-check-label font-size-11px\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              name=\"ServiceGTGT\"\r\n                              value={item.ServiceID}\r\n                              checked={item.checkboxGTGT}\r\n                              onChange={(element) => {\r\n                                onChooseServiceGTGT(item, element);\r\n                              }}\r\n                            />\r\n                            {item.ServiceCode}\r\n                            <span className=\"form-check-sign\">\r\n                              <span className=\"check\"></span>\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                })}\r\n              </div>\r\n              <div className=\"row mt10\">\r\n                <div className={IsHD === 1 ? \"col-md-6\" : \"col-md-6 display-none\"}>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Số lượng hóa đơn <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      ref={HDRef}\r\n                      value={HD}\r\n                      {...bindHD}\r\n                      onChange={(e) => {\r\n                        setHD(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      title=\"Số lượng hóa đơn bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={IsNumberCoCheck === 1 ? \"col-md-6\" : \"col-md-6 display-none\"}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Số lượng đồng kiểm <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      ref={NumberCoCheckRef}\r\n                      value={NumberCoCheck}\r\n                      {...bindNumberCoCheck}\r\n                      onChange={(e) => {\r\n                        setNumberCoCheck(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      title=\"Số lượng đồng kiểm bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <i className=\"fa fa-user\"></i> NGƯỜI TRẢ CƯỚC{\" \"}\r\n            <span className=\"red\">(*)</span>\r\n          </div>\r\n          <div className=\"panel-body row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Người gửi thanh toán\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 2}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"DTT\"\r\n                    value={2}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Người gửi TT (ĐTT)\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Người nhận thanh toán\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 1}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"NNTT\"\r\n                    value={1}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Người nhận TT\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Thanh toán cuối tháng\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 0}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"TTCT\"\r\n                    value={0}\r\n                    name=\"Payment\"\r\n                  />\r\n                  TT cuối tháng\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Khác\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 3}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"KHAC\"\r\n                    value={3}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Khác\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseCOD\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-plus\"></i> THU HỘ - KHAI GIÁ\r\n            </a>\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseCOD\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-chevron-circle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in\" id=\"collapseCOD\">\r\n            <div className=\"panel-body row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Tiền thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={FormatMoney(Cod)}\r\n                      onChange={(e) => {\r\n                        setCod(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      minLength=\"0\"\r\n                      maxLength=\"15\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={CODPriceRef}\r\n                      value={CODPrice}\r\n                      {...bindCODPrice}\r\n                      minLength=\"0\"\r\n                      maxLength=\"15\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={FormatMoney(Insured)}\r\n                      onChange={(e) => {\r\n                        setInsured(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={InsuredPriceRef}\r\n                      value={InsuredPrice}\r\n                      {...bindInsuredPrice}\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"panel panel-success\">\r\n          <div className=\"panel-heading\">\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseOne\"\r\n              className=\"white\"\r\n            >\r\n              <i className=\"fa fa-info-circle\"></i> CHI TIẾT CƯỚC PHÍ\r\n            </a>\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseOne\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-chevron-circle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in\" id=\"collapseOne\">\r\n            <div className=\"panel-body row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Tiền PPXD</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PPXDPriceRef}\r\n                      value={PPXDPrice}\r\n                      {...bindPPXDPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí VAT</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={VATPriceRef}\r\n                      value={VATPrice}\r\n                      {...bindVATPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Cước phí</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PriceMainRef}\r\n                      value={PriceMain}\r\n                      {...bindPriceMain}\r\n                    />{\" \"}\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={CODPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={InsuredPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Báo phát</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={BPPriceRef}\r\n                      value={BPPrice}\r\n                      {...bindBPPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Thu hồi BB</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={THBBPriceRef}\r\n                      value={THBBPrice}\r\n                      {...bindTHBBPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Hóa đơn</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={HDPriceRef}\r\n                      value={HDPrice}\r\n                      {...bindHDPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phát đồng kiểm</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={NPDKPriceRef}\r\n                      value={NPDKPrice}\r\n                      {...bindNPDKPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phát tận tay</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PTTPriceRef}\r\n                      value={PTTPrice}\r\n                      {...bindPTTPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Hàng quá khổ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={HQKPriceRef}\r\n                      value={HQKPrice}\r\n                      {...bindHQKPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>TỔNG CƯỚC</label>\r\n              <div className=\"input-group mb-2\">\r\n                <input\r\n                  disabled=\"disabled\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  ref={AmountRef}\r\n                  value={Amount}\r\n                  {...bindAmount}\r\n                />{\" \"}\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">đ</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group\">\r\n              <label>THỜI GIAN ƯỚC TÍNH GIAO</label>\r\n              <input\r\n                disabled=\"disabled\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={DealineRef}\r\n                value={Dealine}\r\n                {...bindDealine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <button\r\n          disabled={disable}\r\n          type=\"button\"\r\n          className=\"btn btn-danger pull-right btn-sm\"\r\n          onClick={SaveLading}\r\n        >\r\n          <span>\r\n            {\" \"}\r\n            <i className=\"material-icons Iconsize18\">save</i> Lưu\r\n          </span>\r\n        </button>\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning pull-right btn-sm\"\r\n          onClick={WriteLadingDraft}\r\n        >\r\n          <span>\r\n            <i className=\"material-icons Iconsize18\">save</i> Lưu nháp\r\n          </span>\r\n        </button> */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-default pull-right btn-sm\"\r\n          onClick={Clearform}\r\n        >\r\n          <span>\r\n            <i className=\"material-icons Iconsize18\">cancel</i> LÀM MỚI\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className=\"clearfix\"></div>\r\n    </form>\r\n  );\r\n\r\n  const ListLading = (\r\n    <form className=\"row\">\r\n      {/* <div className=\"main-title bg-light-green\">\r\n        <i className=\"fa fa-list\"></i> VẬN ĐƠN MỚI TẠO TRONG TUẦN\r\n      </div> */}\r\n      <div className=\"col-md-12\">\r\n        <div className=\"pull-left\">\r\n          <div className=\"form-check top0\">\r\n            <label className=\"form-check-label\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value=\"checkAll\"\r\n                checked={IsChecked}\r\n                onChange={handleCheckAll}\r\n              />\r\n              <span className=\"form-check-sign\">\r\n                <span className=\"check\"> </span>\r\n              </span>\r\n              Chọn tất cả\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"pull-right\">\r\n          <div className=\"input-group text-right\">\r\n            <div\r\n              className=\"input-group-prepend\"\r\n              style={{ marginRight: \"5px\", marginTop: \"5px\" }}\r\n            >\r\n              Số liên cần in{\" \"}\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              value={sheetprint}\r\n              ref={sheetprintRef}\r\n              {...bindsheetprint}\r\n              onChange={(event) => ChangeSheetPrint(event)}\r\n              min=\"1\"\r\n              max=\"10\"\r\n              className=\"form-control maxwidth100\"\r\n              placeholder=\"Số liên in\"\r\n              style={{ height: \"30px\" }}\r\n            />\r\n            <div className=\"form-group-append\">\r\n              <button\r\n                onClick={() => {\r\n                  APIC_spLadingGetDataPrint();\r\n                }}\r\n                type=\"button\"\r\n                className=\"btn btn-info btn-sm\"\r\n                style={{ margin: 0 }}\r\n              >\r\n                <i className=\"material-icons\">print</i>\r\n                &nbsp; In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <DataTable data={dataLading} columns={columns} />\r\n      </div>\r\n    </form>\r\n  );\r\n  const [ShowCreateTab, setShowCreateTab] = useState(\"show active\");\r\n  const [ShowListTab, setShowListTab] = useState(\"\");\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <ul className=\"nav nav-pills nav-pills-warning hide-sm big-nav nav-pillss\" style={{ display: \"inline-flex\" }}>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className={\"nav-link \" + ShowCreateTab}\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link1\"\r\n                  onClick={(e) => {\r\n                    setShowCreateTab(\"show active\");\r\n                    setShowListTab(\"\");\r\n                  }}\r\n                  style={{ padding: \"10px 15px !important\" }}\r\n                >\r\n                  <i className=\"fa fa-edit\"></i> {Title}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className={\"nav-link \" + ShowListTab}\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link2\"\r\n                  onClick={(e) => {\r\n                    setShowCreateTab(\"\");\r\n                    setShowListTab(\"show active\");\r\n                  }}\r\n                  style={{ padding: \"10px 15px !important\" }}\r\n                >\r\n                  <i className=\"fa fa-list\"></i> VẬN ĐƠN MỚI TẠO TRONG TUẦN\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n              <div className={\"tab-pane fade \" + ShowCreateTab}>{CreateLading}</div>\r\n              <div className={\"tab-pane fade \" + ShowListTab}>{ListLading}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/LogoNetco.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      <div id=\"barcodeTarget\" style={{ display: \"none\" }}>{HtmlPrint}</div>\r\n      <div\r\n        className=\"modal\"\r\n        id=\"modalDetail\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modalDetail\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Chi tiết vận đơn</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <LadingDetail LadingCode=\"\" LadingId={DetailId} />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default btn-sm\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                <i className=\"fa fa-close\"></i> Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //#endregion *********** HÀM LOAD HTML ***********\r\n\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\PaymentReportComponent.js",["1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  FormatMoney,\r\n  FormatNumber,\r\n  FormatDateJson\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const PaymentReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [SelectMonth, setSelectMonth] = useState(FormatDateJson(new Date(),2));\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const [NoData, setNoData] = useState(\"display-none\");\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (SelectMonth === null) {\r\n      Alerterror(\"Chọn tháng\");\r\n      return false;\r\n    }\r\n    let time = SelectMonth.split('-');\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      Month: parseInt(time[1]),\r\n      Year: parseInt(time[0])\r\n    };\r\n    debugger\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spPaymentReportJson\",\r\n      API_key: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    setReportData(data);\r\n    if (data.length === 0) setNoData(\"\");\r\n    else setNoData(\"display-none\");\r\n    setDisable(true);\r\n    //PaginationTable();\r\n    setShowList(\"\");\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Mã bảng kê\",\r\n      accessor: \"Code\",\r\n    },\r\n    {\r\n      Header: \"Từ ngày\",\r\n      accessor: \"Start_date\",\r\n    },\r\n    {\r\n      Header: \"Đến ngày\",\r\n      accessor: \"End_date\",\r\n    },\r\n    {\r\n      Header: \"Trạng thái\",\r\n      accessor: \"StatusName\",\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"CreateDate\",\r\n    },\r\n    {\r\n      Header: \"Người tạo\",\r\n      accessor: \"CreateByName\",\r\n    },\r\n    {\r\n      Header: \"Ngày chốt\",\r\n      accessor: \"ConfirmDate\",\r\n    },\r\n    {\r\n      Header: \"Người chốt\",\r\n      accessor: \"ConfirmName\",\r\n    },\r\n    {\r\n      Header: \"NV công nợ\",\r\n      accessor: \"OfficerName\",\r\n    },\r\n    {\r\n      Header: \"Tổng vận đơn\",\r\n      accessor: \"NumberLading\",\r\n      Cell: (obj) => (<span>{FormatNumber(obj.value)}</span>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TotalMoney\",\r\n      Cell: (obj) => (<span>{FormatMoney(obj.value)} đ</span>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền giảm\",\r\n      accessor: \"TotalDiscount\",\r\n      Cell: (obj) => (<span>{FormatMoney(obj.value)} đ</span>)\r\n    },\r\n    {\r\n      Header: \"Tiền phải thu\",\r\n      Cell: ({ row }) => (<span>{FormatMoney(row.TotalMoney - row.TotalDiscount)} đ</span>)\r\n    },\r\n  ];\r\n\r\n  const Excell = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      let row = new Object();\r\n      row.Ma_Bang_Ke = item.Code;\r\n      row.Tu_Ngay = item.Start_date;\r\n      row.Den_Ngay = item.End_date;\r\n      row.Trang_Thai = item.StatusName;\r\n      row.Ngay_Tao = item.CreateDate;\r\n      row.Nguoi_Tao = item.CreateByName;\r\n      row.Ngay_Chot = item.ConfirmDate;\r\n      row.Nguoi_Chot = item.ConfirmName;\r\n      row.NV_Cong_No = item.OfficerName;\r\n      row.Tong_Van_Don = FormatNumber(item.NumberLading);\r\n      row.Tong_Tien = FormatMoney(item.TotalMoney);\r\n      row.Tong_Tien_Giam = FormatMoney(item.TotalDiscount);\r\n      row.Tien_Phai_Thu = FormatMoney(item.TotalMoney - item.TotalDiscount);\r\n      return row;\r\n    });\r\n    ExportExcel(dataExcel, \"Bảng kê thanh toán\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i class=\"material-icons\">insights</i> BẢNG KÊ THANH TOÁN</div>\r\n          <form className=\"form-horizontal col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\"></div>\r\n              <div className=\"col-md-3\">\r\n                <label>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" className=\"form-control\" value={SelectMonth} format=\"yyyy-MM\" onChange={(e)=>setSelectMonth(e.target.value)} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-5 mt30\">\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={ViewReport}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                >\r\n                  <i className=\"material-icons\">search</i> Xem báo cáo\r\n                      </button>\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={() => {\r\n                    Excell();\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-success\"\r\n                >\r\n                  <i className=\"material-icons\">file_download</i> Excel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className={ShowList + \" col-md-12\"}>\r\n            <DataTable data={ReportData} columns={columns} />\r\n            {/* <div className=\"table-responsive\">\r\n              <table id=\"dataTable\" className=\"table text-center\">\r\n                <thead className=\" text-primary\">\r\n                  <tr>\r\n                    <th>Mã bảng kê</th>\r\n                    <th>Từ ngày</th>\r\n                    <th>Đến ngày</th>\r\n                    <th>Trạng thái</th>\r\n                    <th>Ngày tạo</th>\r\n                    <th>Người tạo</th>\r\n                    <th>Ngày chốt</th>\r\n                    <th>Người chốt</th>\r\n                    <th>NV công nợ</th>\r\n                    <th>Tổng vận đơn</th>\r\n                    <th>Tổng tiền</th>\r\n                    <th>Tổng tiền giảm</th>\r\n                    <th>Tiền phải thu</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {ReportData.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{item.Code}</td>\r\n                        <td>\r\n                          {FormatDate(item.Start_date, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>\r\n                          {FormatDate(item.End_date, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>\r\n                          {getStatus(item.State, item.StatusInCome)}\r\n                        </td>\r\n                        <td>\r\n                          {FormatDate(item.CreateDate, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>{item.CreateByName}</td>\r\n                        <td>\r\n                          {FormatDate(item.ConfirmDate, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>{item.ConfirmName}</td>\r\n                        <td>{item.OfficerName}</td>\r\n                        <td>{item.NumberLading}</td>\r\n                        <td>{FormatMoney(item.TotalMoney)}</td>\r\n                        <td>{FormatMoney(item.TotalDiscount)}</td>\r\n                        <td>\r\n                          {FormatMoney(\r\n                            item.TotalMoney - item.TotalDiscount\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  <tr className={NoData}>\r\n                    <td colSpan=\"13\">Không có dữ liệu</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\CustomerPaymentDealineComponent.js",["1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatDateJson,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { DataTable } from \"../../Common\";\r\nimport { ExportExcel } from \"../../Utils\";\r\n\r\nexport const CustomerPaymentDealineComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [dataA, setdataA] = useState([]);\r\n  const [dataB, setdataB] = useState([]);\r\n  const [dataC, setdataC] = useState([]);\r\n  const [Code, setCode] = useState(\"\");\r\n  const [Monthyear, setMonthyear] = useState(FormatDateJson(new Date(),2));\r\n  const [TabActive, setTabActive] = useState(1);\r\n  const [ShowTable,setShowTable] = useState(\"display-none\");\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {}) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n  const Excell = (key) => {\r\n    if (key === 1) {\r\n      ExportExcel(dataA, \"Hóa đơn quá hạn thanh toán\");\r\n    } else if (key === 2) {\r\n      ExportExcel(dataB, \"Hóa đơn đến hạn thanh toán\");\r\n    } else {\r\n      ExportExcel(dataC, \"Hóa đơn chưa đến hạn trong tháng\");\r\n    }\r\n  };\r\n  const APIC_spCustomerPaymentDealine_Report = async () => {\r\n    setDisable(false);\r\n    let _month = Monthyear.split('-')[1], _year = Monthyear.split('-')[0];\r\n    debugger\r\n    let paramsA = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: Customer.CustomerID,\r\n      InvoiceCode: Code,\r\n      Month: _month,\r\n      Year: _year,\r\n      Type: 1,\r\n    };\r\n    let paramsB = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: Customer.CustomerID,\r\n      InvoiceCode: Code,\r\n      Month: _month,\r\n      Year: _year,\r\n      Type: 2,\r\n    };\r\n    let paramsC = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: Customer.CustomerID,\r\n      InvoiceCode: Code,\r\n      Month: _month,\r\n      Year: _year,\r\n      Type: 3,\r\n    };\r\n\r\n    debugger;\r\n    try {\r\n      const dataA = await ReportAction.APIC_spCustomerPaymentDealine_Report(\r\n        paramsA,\r\n        dispatch\r\n      );\r\n      const dataB = await ReportAction.APIC_spCustomerPaymentDealine_Report(\r\n        paramsB,\r\n        dispatch\r\n      );\r\n      const dataC = await ReportAction.APIC_spCustomerPaymentDealine_Report(\r\n        paramsC,\r\n        dispatch\r\n      );\r\n      if (dataA.data !== null) setdataA(JSON.parse(dataA.data));\r\n      else setdataA([]);\r\n\r\n      if (dataA.data !== null) setdataB(JSON.parse(dataB.data));\r\n      else setdataB([]);\r\n\r\n      if (dataC.data !== null) setdataC(JSON.parse(dataC.data));\r\n      else setdataC([]);\r\n\r\n      setDisable(true);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      setDisable(true);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tên khách hàng\",\r\n      accessor: \"CustomerName\",\r\n    },\r\n    {\r\n      Header: \"Email\",\r\n      accessor: \"Email\",\r\n    },\r\n    {\r\n      Header: \"Chi nhánh\",\r\n      accessor: \"POName\",\r\n    },\r\n    {\r\n      Header: \"Tháng công nợ\",\r\n      accessor: \"Day_Collected\",\r\n    },\r\n    {\r\n      Header: \"Số hóa đơn\",\r\n      accessor: \"InvoiceCode\",\r\n    },\r\n\r\n    {\r\n      Header: \"Hạn thanh toán\",\r\n      accessor: \"Dealine\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i className=\"material-icons\">bubble_chart</i> BÁO CÁO THỜI HẠN THANH TOÁN</div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\"></div>\r\n              <div className=\"col-md-3\">\r\n                <label>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" format=\"MM/yyyy\" className=\"form-control\"\r\n                    onChange={(e) => setMonthyear(e.target.value)}\r\n                    value={Monthyear} defaultValue={Monthyear}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label>Mã hóa đơn</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    minLength=\"0\"\r\n                    maxLength=\"500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"clearfix\"></div>\r\n              <div className=\"col-md-12 text-center\">\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={() => {\r\n                    APIC_spCustomerPaymentDealine_Report();\r\n                    setShowTable(\"\");\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                >\r\n                  <i className=\"material-icons\">search</i> Xem báo cáo\r\n                  </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={\"col-md-12 text-center \"+ ShowTable}>\r\n            <ul className=\"nav nav-pills nav-pills-success\" style={{display:\"inline-flex\"}}>\r\n              <li className=\"nav-item whiteSpace\" onClick={(e)=>setTabActive(1)}>\r\n                <a className=\"nav-link active show\" data-toggle=\"tab\" href=\"#link1\">\r\n                  Hóa đơn quá hạn thanh toán ({dataA.Count ?? 0})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\" onClick={(e)=>setTabActive(2)}>\r\n                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#link2\">\r\n                  Hóa đơn đến hạn thanh toán ({dataB.Count ?? 0})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\" onClick={(e)=>setTabActive(3)}>\r\n                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#link3\">\r\n                  Hóa đơn chưa đến hạn thanh toán ({dataC.Count ?? 0})\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className={\"tab-content col-md-12 \"+ ShowTable} id=\"nav-tabContent\">\r\n            <div className={\"tab-pane fade\" + (TabActive===1?\" show active\":\"\")} id=\"link1\">\r\n              <div className=\"text-right\">\r\n                <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { Excell(1); }} >\r\n                  <i className=\"material-icons\">file_download</i> Xuất Excel\r\n                </button>\r\n              </div>\r\n              <DataTable data={dataA} columns={columns} />\r\n            </div>\r\n            <div className={\"tab-pane fade\" + (TabActive===2?\" show active\":\"\")} id=\"link2\">\r\n              <div className=\"text-right\">\r\n                <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { Excell(2); }} >\r\n                  <i className=\"material-icons\">file_download</i> Xuất Excel\r\n                </button>\r\n              </div>\r\n              <DataTable data={dataB} columns={columns} />\r\n            </div>\r\n            <div className={\"tab-pane fade\" + (TabActive===3?\" show active\":\"\")} id=\"link3\">\r\n              <div className=\"text-right\">\r\n                <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { Excell(3); }} >\r\n                  <i className=\"material-icons\">file_download</i> Xuất Excel\r\n                </button>\r\n              </div>\r\n              <DataTable data={dataC} columns={columns} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseInventoryReportComponent.js",["1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  PaginationTable2,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\n/* Load CSS */\r\n\r\nexport const WareHouseInventoryReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [Parcels, setParcels] = useState([]);\r\n  const [WareHouse, setWareHouse] = useState(null);\r\n  const [Parcel, setParcel] = useState(null);\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n    let _date = new Date(\r\n      item.getFullYear(),\r\n      item.getMonth() + 1,\r\n      item.getDate()\r\n    );\r\n    setToDate(_date);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    let _date = new Date(item);\r\n    setFromDate(\r\n      new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n    );\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_List(params, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n\r\n    if (WareHouse.value === 0) {\r\n      Alerterror(\"Chọn kho\");\r\n      return false;\r\n    } else if (Parcel === null || Parcel.value === 0) {\r\n      Alerterror(\"Chọn lô\");\r\n      return false;\r\n    }\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      WhId: WareHouse.value,\r\n      ParcelId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Inventory_Report(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(data.data));\r\n    setReportDataDetail([]);\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Inventory_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable2();\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO TỒN KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"table-responsive\">\r\n                    <table id=\"dataTable\" className=\"table\">\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Tùy chọn</th>\r\n                          <th>Mã phiếu nhập</th>\r\n                          <th>Thời gian nhập</th>\r\n                          <th>Người nhập</th>\r\n                          <th>Mã khách hàng</th>\r\n                          <th>Tên khách hàng</th>\r\n                          <th>Mã kho</th>\r\n                          <th>Mã lô</th>\r\n                          <th>Tổng sản phẩm</th>\r\n                          <th>Tổng số lượng</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ReportData.map((item, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>{index + 1}</td>\r\n                              <td>\r\n                                <button\r\n                                  onClick={() => ViewReportDetail(item)}\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-info btn-sm pull-right\"\r\n                                >\r\n                                  <i className=\"material-icons\">loyalty</i>{\" \"}\r\n                                  Detail\r\n                                </button>\r\n                              </td>\r\n                              <td>{item.WHWareHouse_ImportCode} </td>\r\n                              <td>\r\n                                {FormatDate(item.CreateTimeImport, \"d-k-y H:m\")}\r\n                              </td>\r\n                              <td>{item.OfficerName}</td>\r\n                              <td>{item.CustomerCode}</td>\r\n                              <td>{item.CustomerName}</td>\r\n                              <td>{item.WareHouseCode}</td>\r\n                              <td>{item.WareHouseAreaCode}</td>\r\n                              <td>{item.TotalProducts}</td>\r\n                              <td>{item.TotalNumber}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> CHI TIẾT TỒN\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable1\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã sản phẩm</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Số lượng nhập</th>\r\n                            <th>Gía sản phẩm</th>\r\n                            <th>Tên màu</th>\r\n                            <th>Tên kích thước</th>\r\n                            <th>Tên đơn vị tính</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportDataDetail.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.PackageNumber}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseTranportReportComponent.js",["1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\n/* Load CSS */\r\n\r\nexport const WareHouseTranportReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n\r\n  const [Parcels, setParcels] = useState([]);\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n\r\n  const [ParcelsRecipient, setParcelsRecipient] = useState([]);\r\n\r\n  const [WareHouseRecipient, setWareHouseRecipient] = useState({\r\n    value: 0,\r\n    label: \"Chọn kho\",\r\n  });\r\n  const [ParcelRecipient, setParcelRecipient] = useState({\r\n    value: 0,\r\n    label: \"Chọn lô\",\r\n  });\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_List(params, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n    let _date = new Date(\r\n      item.getFullYear(),\r\n      item.getMonth() + 1,\r\n      item.getDate()\r\n    );\r\n    setToDate(_date);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    let _date = new Date(item);\r\n    setFromDate(\r\n      new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n    );\r\n    setToDate(item);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseListRecipient = async (item) => {\r\n    setDisable(false);\r\n    setWareHouseRecipient(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    debugger;\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcelRecipient({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcelsRecipient(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcelRecipient = async (item) => {\r\n    setDisable(false);\r\n    setParcelRecipient(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n    debugger;\r\n    if (WareHouse === null || WareHouse.value === 0) {\r\n      Alerterror(\"Chọn kho chuyển\");\r\n      return false;\r\n    } else if (Parcel === null || Parcel.value === 0) {\r\n      Alerterror(\"Chọn lô chuyển\");\r\n      return false;\r\n    } else if (WareHouseRecipient === null || WareHouseRecipient.value === 0) {\r\n      Alerterror(\"Chọn kho nhận\");\r\n      return false;\r\n    } else if (ParcelRecipient === null || ParcelRecipient.value === 0) {\r\n      Alerterror(\"Chọn lô nhận\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      WhId: WareHouse.value,\r\n      ParcelId: Parcel.value,\r\n      WhIdRecipient: WareHouseRecipient.value,\r\n      ParcelIdRecipient: ParcelRecipient.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Tranport_Report(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(data.data));\r\n    setReportDataDetail([]);\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: 17478,\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Tranport_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO CHUYỂN\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho chuyển</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô chuyển</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho nhận</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouseRecipient}\r\n                          onChange={onChangeWareHouseListRecipient}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô nhận</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={ParcelRecipient}\r\n                          onChange={onChangeParcelRecipient}\r\n                          options={ParcelsRecipient}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/*  <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th>STT</th>\r\n                        <th>Tùy chọn</th>\r\n                        <th>Mã phiếu nhập</th>\r\n                        <th>Thời gian nhập</th>\r\n                        <th>Người nhập</th>\r\n                        <th>Mã khách hàng</th>\r\n                        <th>Tên khách hàng</th>\r\n                        <th>Mã kho</th>\r\n                        <th>Mã lô</th>\r\n                        <th>Tổng sản phẩm</th>\r\n                        <th>Tổng số lượng</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ReportData.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <button\r\n                                onClick={() => ViewReportDetail(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-info btn-sm pull-right\"\r\n                              >\r\n                                <i className=\"material-icons\">loyalty</i> Detail\r\n                              </button>\r\n                            </td>\r\n                            <td>{item.WHWareHouse_ImportCode} </td>\r\n                            <td>\r\n                              {FormatDate(item.CreateTimeImport, \"d-k-y H:m\")}\r\n                            </td>\r\n                            <td>{item.OfficerName}</td>\r\n                            <td>{item.CustomerCode}</td>\r\n                            <td>{item.CustomerName}</td>\r\n                            <td>{item.WareHouseCode}</td>\r\n                            <td>{item.WareHouseAreaCode}</td>\r\n                            <td>{item.TotalProducts}</td>\r\n                            <td>{item.TotalNumber}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> CHI TIẾT CHUYỂN\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã sản phẩm</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Số lượng nhập</th>\r\n                            <th>Gía sản phẩm</th>\r\n                            <th>Tên màu</th>\r\n                            <th>Tên kích thước</th>\r\n                            <th>Tên đơn vị tính</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportDataDetail.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.PackageNumber}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseOutputReportComponent.js",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\n/* Load CSS */\r\n\r\nexport const WareHouseOutputReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [Parcels, setParcels] = useState([]);\r\n  const [WareHouse, setWareHouse] = useState(null);\r\n  const [Parcel, setParcel] = useState(null);\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n    let _date = new Date(\r\n      item.getFullYear(),\r\n      item.getMonth() + 1,\r\n      item.getDate()\r\n    );\r\n    setToDate(_date);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    let _date = new Date(item);\r\n    setFromDate(\r\n      new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n    );\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_List(params, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n\r\n    if (WareHouse.value === 0) {\r\n      Alerterror(\"Chọn kho\");\r\n      return false;\r\n    } else if (Parcel === null || Parcel.value === 0) {\r\n      Alerterror(\"Chọn lô\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      WhId: WareHouse.value,\r\n      ParcelId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Output_Report(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(data.data));\r\n    setReportDataDetail([]);\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Output_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO XUẤT\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th>STT</th>\r\n                        <th>Tùy chọn</th>\r\n                        <th>Mã phiếu nhập</th>\r\n                        <th>Thời gian nhập</th>\r\n                        <th>Người nhập</th>\r\n                        <th>Mã khách hàng</th>\r\n                        <th>Tên khách hàng</th>\r\n                        <th>Mã kho</th>\r\n                        <th>Mã lô</th>\r\n                        <th>Tổng sản phẩm</th>\r\n                        <th>Tổng số lượng</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ReportData.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <button\r\n                                onClick={() => ViewReportDetail(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-info btn-sm pull-right\"\r\n                              >\r\n                                <i className=\"material-icons\">loyalty</i> Detail\r\n                              </button>\r\n                            </td>\r\n                            <td>{item.WHWareHouse_ImportCode} </td>\r\n                            <td>\r\n                              {FormatDate(item.CreateTimeImport, \"d-k-y H:m\")}\r\n                            </td>\r\n                            <td>{item.OfficerName}</td>\r\n                            <td>{item.CustomerCode}</td>\r\n                            <td>{item.CustomerName}</td>\r\n                            <td>{item.WareHouseCode}</td>\r\n                            <td>{item.WareHouseAreaCode}</td>\r\n                            <td>{item.TotalProducts}</td>\r\n                            <td>{item.TotalNumber}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> CHI TIẾT XUẤT\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã sản phẩm</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Số lượng nhập</th>\r\n                            <th>Gía sản phẩm</th>\r\n                            <th>Tên màu</th>\r\n                            <th>Tên kích thước</th>\r\n                            <th>Tên đơn vị tính</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportDataDetail.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.PackageNumber}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\OutstandingDebtReportComponent.js",["1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const OutstandingDebtReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [cookies, setCookie] = useCookies([\"customerLoginWeb\"], \"\");\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [SelectMonth, setSelectMonth] = useState(FormatDateJson(new Date(),2));\r\n\r\n  const [ReportData, setReportData] = useState({});\r\n  const [TotalDebt, setTotalDebt] = useState(0);\r\n  const [TotalDebtBefore, setTotalDebtBefore] = useState(0);\r\n  const [DebtList, setDebtList] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const [ArrMonth, setArrMonth] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n  const [ArrYear, setArrYear] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n\r\n  const setListMonth = (month, year) => {\r\n    let arr = [],\r\n      att = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n      if (i - month > 0) {\r\n        arr.push(13 - i + month);\r\n        att.push(year - 1);\r\n      } else {\r\n        arr.push(month + 1 - i);\r\n        att.push(year);\r\n      }\r\n    }\r\n    setArrMonth(arr);\r\n    setArrYear(att);\r\n  };\r\n\r\n  const changeSelectMonth = (item) => {\r\n    if (item !== null) {\r\n      setSelectMonth(item);\r\n      setDisable(true);\r\n      setListMonth(item._a[1] + 1, item._a[0]);\r\n    }\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (SelectMonth === null) {\r\n      Alerterror(\"Chọn tháng\");\r\n      return false;\r\n    }\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      ToDate: SelectMonth,\r\n    };\r\n    const response = await ReportAction.APIC_spOutstandingDebtReport(\r\n      params,\r\n      dispatch\r\n    );\r\n    let obj = new Object();\r\n    obj.TotalDebt = 0;\r\n    let _debtList = [],\r\n      _totalDebt = 0,\r\n      _totalDebtBefore = 0;\r\n    JSON.parse(response.data).map((item, index) => {\r\n      if (index === 0) {\r\n        obj.CustomerCode = item.CustomerCode;\r\n        obj.CustomerName = item.CustomerName;\r\n        obj.Adress_CT = item.Adress_CT;\r\n        obj.AddressBill = item.AddressBill;\r\n        obj.Phone = item.Phone;\r\n        obj.CompanyName = item.CompanyName;\r\n        obj.OfficerName = item.OfficerName;\r\n        obj.OfficerNamePostman = item.OfficerNamePostman;\r\n        obj.Tax_Code = item.Tax_Code;\r\n      }\r\n      if (index < 12) {\r\n        _debtList.push({ TotalDebt: item.TotalDebt, MonthBK: item.MonthBK });\r\n      } else {\r\n        _totalDebtBefore += item.TotalDebt;\r\n      }\r\n      _totalDebt += item.TotalDebt;\r\n    });\r\n    setTotalDebtBefore(_totalDebtBefore);\r\n    setDebtList(_debtList);\r\n    setTotalDebt(_totalDebt);\r\n    setReportData(obj);\r\n    setDisable(true);\r\n\r\n    if (response.data !== []) setShowList(\"\");\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i className=\"material-icons\">bubble_chart</i> BÁO CÁO TỒN NỢ</div>\r\n          <form className=\"form-horizontal col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\"></div>\r\n              <div className=\"col-md-3\">\r\n                <label>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" className=\"form-control\" value={SelectMonth} onChange={(e) => setSelectMonth(e.target.value)} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-5 mt30\">\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={ViewReport}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                >\r\n                  <i className=\"material-icons\">search</i> Xem báo cáo\r\n                      </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className={ShowList + \" col-md-12\"}>\r\n            <div className=\"table-responsive\">\r\n              <table id=\"dataTable\" className=\"table text-center\">\r\n                <thead className=\" text-primary\">\r\n                  <tr>\r\n                    <th>Mã KH</th>\r\n                    <th>Tên KH</th>\r\n                    <th>Địa chỉ</th>\r\n                    <th>SĐT</th>\r\n                    <th>Người liên hệ</th>\r\n                    <th>Công nợ</th>\r\n                    <th>Giao dịch</th>\r\n                    <th>Địa chỉ HĐ</th>\r\n                    <th>MST</th>\r\n                    <th>Nợ trước {ArrMonth[11] + \"/\" + ArrYear[11]}</th>\r\n                    <th>Tháng {ArrMonth[11] + \"/\" + ArrYear[11]}</th>\r\n                    <th>Tháng {ArrMonth[10] + \"/\" + ArrYear[10]}</th>\r\n                    <th>Tháng {ArrMonth[9] + \"/\" + ArrYear[9]}</th>\r\n                    <th>Tháng {ArrMonth[8] + \"/\" + ArrYear[8]}</th>\r\n                    <th>Tháng {ArrMonth[7] + \"/\" + ArrYear[7]}</th>\r\n                    <th>Tháng {ArrMonth[6] + \"/\" + ArrYear[6]}</th>\r\n                    <th>Tháng {ArrMonth[5] + \"/\" + ArrYear[5]}</th>\r\n                    <th>Tháng {ArrMonth[4] + \"/\" + ArrYear[4]}</th>\r\n                    <th>Tháng {ArrMonth[3] + \"/\" + ArrYear[3]}</th>\r\n                    <th>Tháng {ArrMonth[2] + \"/\" + ArrYear[2]}</th>\r\n                    <th>Tháng {ArrMonth[1] + \"/\" + ArrYear[1]}</th>\r\n                    <th>Tháng {ArrMonth[0] + \"/\" + ArrYear[0]}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{ReportData.CustomerCode}</td>\r\n                    <td>{ReportData.CustomerName}</td>\r\n                    <td>\r\n                      {ReportData.Adress_CT == \"null\"\r\n                        ? \"N/A\"\r\n                        : ReportData.Adress_CT}\r\n                    </td>\r\n                    <td>{ReportData.Phone}</td>\r\n                    <td>{ReportData.CompanyName}</td>\r\n                    <td>{ReportData.OfficerName}</td>\r\n                    <td>{ReportData.OfficerNamePostman}</td>\r\n                    <td>{ReportData.AddressBill}</td>\r\n                    <td>{ReportData.Tax_Code}</td>\r\n                    <td>{FormatMoney(TotalDebtBefore)} đ</td>\r\n                    {DebtList.map((item, index) => {\r\n                      return (\r\n                        <td key={index}>\r\n                          {FormatMoney(item.TotalDebt)} đ\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-md-12 sum-debt\">\r\n              Tổng tồn nợ: {FormatMoney(TotalDebt)} đ\r\n                  </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\WareHouseImportReportComponent.js",["1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\n/* Load CSS */\r\n\r\nexport const WareHouseImportReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [Parcels, setParcels] = useState([]);\r\n  const [WareHouse, setWareHouse] = useState(null);\r\n  const [Parcel, setParcel] = useState(null);\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      let _date = new Date(\r\n        item.getFullYear(),\r\n        item.getMonth() + 1,\r\n        item.getDate()\r\n      );\r\n      setToDate(_date);\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let _date = new Date(item);\r\n      setFromDate(\r\n        new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n      );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_List(params, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n\r\n    if (WareHouse.value === 0) {\r\n      Alerterror(\"Chọn kho\");\r\n      return false;\r\n    } else if (Parcel === null || Parcel.value === 0) {\r\n      Alerterror(\"Chọn lô\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      WhId: WareHouse.value,\r\n      ParcelId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Import_Report(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(data.data));\r\n    setReportDataDetail([]);\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Import_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable();\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO NHẬP\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"table-responsive\">\r\n                    <table id=\"dataTable\" className=\"table\">\r\n                      <thead className=\" text-primary\">\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Tùy chọn</th>\r\n                          <th>Mã phiếu nhập</th>\r\n                          <th>Thời gian nhập</th>\r\n                          <th>Người nhập</th>\r\n                          <th>Mã khách hàng</th>\r\n                          <th>Tên khách hàng</th>\r\n                          <th>Mã kho</th>\r\n                          <th>Mã lô</th>\r\n                          <th>Tổng sản phẩm</th>\r\n                          <th>Tổng số lượng</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ReportData.map((item, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>{index + 1}</td>\r\n                              <td>\r\n                                <button\r\n                                  onClick={() => ViewReportDetail(item)}\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-info btn-sm pull-right\"\r\n                                >\r\n                                  <i className=\"material-icons\">loyalty</i>{\" \"}\r\n                                  Detail\r\n                                </button>\r\n                              </td>\r\n                              <td>{item.WHWareHouse_ImportCode} </td>\r\n                              <td>\r\n                                {FormatDate(item.CreateTimeImport, \"d-k-y H:m\")}\r\n                              </td>\r\n                              <td>{item.OfficerName}</td>\r\n                              <td>{item.CustomerCode}</td>\r\n                              <td>{item.CustomerName}</td>\r\n                              <td>{item.WareHouseCode}</td>\r\n                              <td>{item.WareHouseAreaCode}</td>\r\n                              <td>{item.TotalProducts}</td>\r\n                              <td>{item.TotalNumber}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> CHI TIẾT NHẬP\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã sản phẩm</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Số lượng nhập</th>\r\n                            <th>Gía sản phẩm</th>\r\n                            <th>Tên màu</th>\r\n                            <th>Tên kích thước</th>\r\n                            <th>Tên đơn vị tính</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportDataDetail.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.PackageNumber}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\KpiDeliveryCODReportComponent.js",["1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatMoney,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp } from \"../../Common\";\r\n\r\n/* Load CSS */\r\n\r\nexport const KpiDeliveryCODReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n  const [DataChart, setDataChart] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  const [TitleDetail, setTitleDetail] = useState(\"\");\r\n  const [DataChartPie, setDataChartPie] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setFromDate(\r\n          new Date(item.getFullYear(), item.getMonth() + 1, item.getDate())\r\n        );\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let a = ToDate - item;\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setToDate(\r\n          new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n        );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    /* setDisable(false); */\r\n    if (FromDate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return false;\r\n    } else if (ToDate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    debugger;\r\n    const response = await ReportAction.APIC_spKpiDeliveryCODReport(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(response.data));\r\n    //PaginationTable();\r\n    setShowDetail(\"display-none\");\r\n    setReportDataDetail([]);\r\n    setDisable(true);\r\n\r\n    if (response.data !== []) {\r\n      //chart main\r\n      setShowList(\"\");\r\n      let chart = [];\r\n      JSON.parse(response.data).forEach((element, index) => {\r\n        chart.push([\r\n          new Date(FormatDate(element.CreateDate, \"y-k-d h:m\")),\r\n          element.TongTien,\r\n        ]);\r\n      });\r\n      setDataChart([{ data: chart, label: \"Tong tien\" }]);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewChart = async (item) => {\r\n    setShowDetail(\"\");\r\n    setTitleDetail(\"ngày \" + FormatDate(item.CreateDate, \"d-k-y\"));\r\n    setDataChartPie([\r\n      { title: \"Mới tạo\", value: item.MoiTao, color: \"#008d4c\" },\r\n      { title: \"Đang lấy hàng\", value: item.DangLayHang, color: \"#39cccc\" },\r\n      { title: \"Đã lấy hàng\", value: item.DaLayHang, color: \"#555299\" },\r\n      {\r\n        title: \"Đang trung chuyển\",\r\n        value: item.DangTrungChuyen,\r\n        color: \"#01ff70\",\r\n      },\r\n      { title: \"Đã nhận lại\", value: item.DaNhanLai, color: \"#ff851b\" },\r\n      { title: \"Đang phát\", value: item.DangPhat, color: \"#d81b60\" },\r\n      { title: \"Thành công\", value: item.ThanhCong, color: \"#005384\" },\r\n      { title: \"Phát lại\", value: item.PhatLai, color: \"#db8b0b\" },\r\n      { title: \"Hoàn gốc\", value: item.HoanGoc, color: \"#00a7d0\" },\r\n    ]);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i className=\"material-icons\">bubble_chart</i> Báo cáo KPI báo phát COD</div>\r\n          <div className=\"col-md-12\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Từ ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    <DateTimePicker\r\n                      onChange={changeFromDate}\r\n                      value={FromDate}\r\n                      className=\"form-control\"\r\n                      format=\"dd-MM-yyyy\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Đến ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    <DateTimePicker\r\n                      onChange={changeToDate}\r\n                      value={ToDate}\r\n                      className=\"form-control\"\r\n                      format=\"dd-MM-yyyy\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"clearfix\"></div>\r\n              <div className=\"col-md-12 text-center\">\r\n                <button type=\"reset\" className=\"btn btn-sm btn-default\">\r\n                  <i className=\"material-icons\">undo</i> Hủy\r\n                    </button>\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={ViewReport}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                >\r\n                  <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className={ShowList + \" row\"}>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table text-center\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th className=\"noExp\">Tùy chọn</th>\r\n                        <th>Ngày tạo</th>\r\n                        <th>Tổng tiền</th>\r\n                        <th>Tổng bill</th>\r\n                        <th>Mới tạo</th>\r\n                        <th>Đang lấy hàng</th>\r\n                        <th>Đã lấy hàng </th>\r\n                        <th>Đang trung chuyển</th>\r\n                        <th>Đã nhận lại</th>\r\n                        <th>Đang phát</th>\r\n                        <th>Phát Thành Công</th>\r\n                        <th>Đang Phát Lại</th>\r\n                        <th>Hoàn Gốc</th>\r\n                        <th>Có hình</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ReportData.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td className=\"noExp\">\r\n                              <button\r\n                                onClick={() => ViewChart(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-info btn-xs\"\r\n                              >\r\n                                <i className=\"material-icons\">bar_chart</i>{\" \"}\r\n                                    Xem\r\n                                  </button>\r\n                            </td>\r\n                            <td>{FormatDate(item.CreateDate, \"d-k-y\")}</td>\r\n                            <td>{FormatMoney(item.TongTien)} đ</td>\r\n                            <td>{FormatMoney(item.TongBill)}</td>\r\n                            <td>\r\n                              {item.MoiTao}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.MoiTao / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangLayHang}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangLayHang / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DaLayHang}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DaLayHang / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangTrungChuyen}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangTrungChuyen / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DaNhanLai}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DaNhanLai / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangPhat}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangPhat / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.ThanhCong}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.ThanhCong / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.PhatLai}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.PhatLai / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.HoanGoc}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.HoanGoc / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.CoHinh}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.CoHinh / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 mt30\">\r\n                <p className=\"text-center bold\">\r\n                  THỐNG KÊ DOANH THU THEO NGÀY\r\n                    </p>\r\n                <ChartTemp type=\"line\" data={DataChart} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className={ShowDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i class=\"material-icons mt10\">insights</i> Chi tiết{\" \"}\r\n                  {TitleDetail}\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <ChartTemp type=\"pie\" data={DataChartPie} />\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <p>\r\n                      <span className=\"chart-color bg-green\"> </span> Mới tạo\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-teal\"> </span> Đang lấy\r\n                      hàng\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-purple\"> </span> Đã lấy\r\n                      hàng\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-lime\"> </span> Đang trung\r\n                      chuyển\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-orange\"> </span> Đã nhận\r\n                      lại\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <p>\r\n                      <span className=\"chart-color bg-maroon\"> </span> Đang phát\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-blue\"> </span> Phát thành\r\n                      công\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-yellow\"> </span> Đang phát\r\n                      lại\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-aqua\"> </span> Hoàn gốc\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Reports\\OverViewReportComponent.js",["1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatDateJson,\r\n  FormatMoney,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp, CanvasChart } from \"../../Common\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\n/* Load CSS */\r\n\r\nexport const OverViewReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [FromDate, bindFromDate, setFromDate] = useInput(new Date());\r\n  const [ToDate, bindToDate, setToDate] = useInput(new Date());\r\n  const FromDateRef = useRef();\r\n  const ToDateRef = useRef();\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [DataChart, setDataChart] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"\");\r\n  const [ShowData, setShowData] = useState(\"display-none\");\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  const [TitleDetail, setTitleDetail] = useState(\"\");\r\n  const [DataChartPie, setDataChartPie] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setToDate(\r\n          new Date(item.getFullYear(), item.getMonth() + 1, item.getDate())\r\n        );\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let a = ToDate - item;\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setFromDate(\r\n          new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n        );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      accessor: \"item\",\r\n      Cell: (row) => (\r\n        <button\r\n          onClick={(e) => ViewChart(row)}\r\n          type=\"button\"\r\n          className=\"btn btn-info btn-xs\"\r\n        >\r\n          <i className=\"material-icons\">bar_chart</i>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (obj) => FormatDate(obj.value, \"d-k-y\"),\r\n      // Cell: ({row})  => (<button className=\"btn btn-sm btn-danger\" onClick={e => clickRow({row})}>Edit</button>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TongTien\",\r\n      Cell: (obj) => FormatMoney(obj.value) + \" đ\",\r\n    },\r\n    {\r\n      Header: \"Tổng bill\",\r\n      accessor: \"TongBill\",\r\n    },\r\n    {\r\n      Header: \"Mới tạo\",\r\n      accessor: \"MoiTao\",\r\n    },\r\n    {\r\n      Header: \"Đang lấy hàng\",\r\n      accessor: \"DangLayHang\",\r\n    },\r\n    {\r\n      Header: \"Đã lấy hàng\",\r\n      accessor: \"DaLayHang\",\r\n    },\r\n    {\r\n      Header: \"Đang trung chuyển\",\r\n      accessor: \"DangTrungChuyen\",\r\n    },\r\n    {\r\n      Header: \"Đã nhận lại\",\r\n      accessor: \"DaNhanLai\",\r\n    },\r\n    {\r\n      Header: \"Đang phát\",\r\n      accessor: \"DangPhat\",\r\n    },\r\n    {\r\n      Header: \"Phát thành công\",\r\n      accessor: \"ThanhCong\",\r\n    },\r\n    {\r\n      Header: \"Đang phát lại\",\r\n      accessor: \"PhatLai\",\r\n    },\r\n    {\r\n      Header: \"Hoàn gốc\",\r\n      accessor: \"HoanGoc\",\r\n    },\r\n    {\r\n      Header: \"Có hình\",\r\n      accessor: \"CoHinh\",\r\n    },\r\n  ];\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      let row = new Object();\r\n      row.NgayTao = FormatDate(item.CreateDate, \"k-d-y\");\r\n      row.TongTien = FormatMoney(item.TongTien);\r\n      row.TongBill = item.TongBill;\r\n      row.MoiTao = item.MoiTao;\r\n      row.DangLayHang = item.DangLayHang;\r\n      row.DaLayHang = item.DaLayHang;\r\n      row.DangTrungChuyen = item.DangTrungChuyen;\r\n      row.DaNhanLai = item.DaNhanLai;\r\n      row.DangPhat = item.DangPhat;\r\n      row.ThanhCong = item.ThanhCong;\r\n      row.PhatLai = item.PhatLai;\r\n      row.HoanGoc = item.HoanGoc;\r\n      row.CoHinh = item.CoHinh;\r\n      return row;\r\n    });\r\n    ExportExcel(\r\n      dataExcel,\r\n      \"Thống kê kết quả giao hàng từ ngày \" +\r\n      FormatDateJson(FromDate, 1) +\r\n      \" đến ngày \" +\r\n      FormatDateJson(ToDate, 1)\r\n    );\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (FromDate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return false;\r\n    } else if (ToDate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    debugger\r\n    const response = await ReportAction.APIC_spLadingReportDelivery(\r\n      params,\r\n      dispatch\r\n    );\r\n    let data = JSON.parse(response.data);\r\n    setReportData(data);\r\n    setShowDetail(\"display-none\");\r\n    setShowList(\"\");\r\n    setShowData(\"\");\r\n    setDisable(true);\r\n    if (data !== []) {\r\n      let chart = [];\r\n      data.forEach((element, index) => {\r\n        chart.push({\r\n          label: \"Ngày \" + FormatDate(element.CreateDate, \"d-k-y\"),\r\n          y: element.TongTien,\r\n        });\r\n      });\r\n      setDataChart([{\r\n        type: \"spline\",\r\n        name: \"Doanh thu\",\r\n        legendText: \"Doanh thu\",\r\n        showInLegend: true,\r\n        dataPoints: chart,\r\n      },]);\r\n    } else {\r\n      setDataChart([{\r\n        type: \"spline\",\r\n        name: \"Doanh thu\",\r\n        legendText: \"Doanh thu\",\r\n        showInLegend: true,\r\n        dataPoints: [],\r\n      }]);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewChart = async (row) => {\r\n    setShowList(\"display-none\");\r\n    setShowDetail(\"\");\r\n    setTitleDetail(\"ngày \" + FormatDate(row.original.CreateDate, \"d-k-y\"));\r\n    setDataChartPie([\r\n      { title: \"Mới tạo\", value: row.original.MoiTao, color: \"#008d4c\" },\r\n      { title: \"Đang lấy hàng\", value: row.original.DangLayHang, color: \"#39cccc\" },\r\n      { title: \"Đã lấy hàng\", value: row.original.DaLayHang, color: \"#555299\" },\r\n      { title: \"Đang trung chuyển\", value: row.original.DangTrungChuyen, color: \"#01ff70\" },\r\n      { title: \"Đã nhận lại\", value: row.original.DaNhanLai, color: \"#ff851b\" },\r\n      { title: \"Đang phát\", value: row.original.DangPhat, color: \"#d81b60\" },\r\n      { title: \"Thành công\", value: row.original.ThanhCong, color: \"#005384\" },\r\n      { title: \"Phát lại\", value: row.original.PhatLai, color: \"#db8b0b\" },\r\n      { title: \"Hoàn gốc\", value: row.original.HoanGoc, color: \"#00a7d0\" },\r\n    ]);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i class=\"material-icons\">insights</i> KẾT QUẢ GIAO HÀNG</div>\r\n          <div className={ShowList + \" col-md-12\"}>\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Từ ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    {/* <input type=\"date\" className=\"form-control\" format=\"dd/MM/yyyy\" value={FromDate} ref={FromDateRef} {...bindFromDate} /> */}\r\n                    <DateTimePicker className=\"form-control\" onChange={(date) => changeFromDate(date)} value={FromDate} format=\"dd/MM/yyyy\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Đến ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    {/* <input type=\"date\" className=\"form-control\" format=\"dd/MM/yyyy\" value={ToDate} ref={ToDateRef} {...bindToDate} /> */}\r\n                    <DateTimePicker className=\"form-control\" onChange={(date) => changeToDate(date)} value={ToDate} format=\"dd/MM/yyyy\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 mt30\">\r\n                  <button\r\n                    disabled={!disable}\r\n                    onClick={ViewReport}\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-danger\"\r\n                  >\r\n                    <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={ExportToExcel}\r\n                    className=\"btn btn-sm btn-success\"\r\n                  >\r\n                    <i class=\"material-icons\">get_app</i>\r\n                      Excel\r\n                    </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className={ShowData + \" row\"}>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"table-responsive\">\r\n                  <DataTable data={ReportData} columns={columns} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 mt30\">\r\n                <p className=\"text-center bold\">\r\n                  THỐNG KÊ DOANH THU THEO NGÀY\r\n                    </p>\r\n                {/* <ChartTemp type=\"line\" data={DataChart} /> */}\r\n                <CanvasChart data={DataChart} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={ShowDetail + \" col-md-12\"}>\r\n            <div className=\"card-header card-header-primary\">\r\n              <h4 className=\"card-title\">\r\n                <i class=\"material-icons mt10\">insights</i> Chi tiết{\" \"}\r\n                {TitleDetail}\r\n                <button\r\n                  onClick={(e) => {\r\n                    setShowList(\"\");\r\n                    setShowDetail(\"display-none\");\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-default pull-right\"\r\n                >\r\n                  <i className=\"material-icons\">undo</i> Trở về\r\n                  </button>\r\n              </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <ChartTemp type=\"pie\" data={DataChartPie} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <p>\r\n                    <span className=\"chart-color bg-green\"> </span> Mới tạo\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-teal\"> </span> Đang lấy\r\n                      hàng\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-purple\"> </span> Đã lấy\r\n                      hàng\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-lime\"> </span> Đang trung\r\n                      chuyển\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-orange\"> </span> Đã nhận\r\n                      lại\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <p>\r\n                    <span className=\"chart-color bg-maroon\"> </span> Đang phát\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-blue\"> </span> Phát thành\r\n                      công\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-yellow\"> </span> Đang phát\r\n                      lại\r\n                    </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-aqua\"> </span> Hoàn gốc\r\n                    </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\FooterMenu.js",["1244","1245","1246","1247","1248"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport const FooterMenu = () => {\r\n  /* run after render */\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"text-center footer-custom\">\r\n      &copy;\r\n      {new Date().getFullYear()} All rights reserved. Powered by{\" \"}\r\n      <a href=\"https://netco.com.vn\" target=\"_blank\">\r\n        NETCO POST\r\n      </a>\r\n    </div>\r\n  );\r\n  {\r\n    /* <div className=\"main-panel\">\r\n            <footer className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"float-left\">\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"https://www.creative-tim.com\">\r\n                                    Creative Tim\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://creative-tim.com/presentation\">\r\n                                    About Us\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"http://blog.creative-tim.com\">\r\n                                    Blog\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://www.creative-tim.com/license\">\r\n                                    Licenses\r\n                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div className=\"copyright float-right\">\r\n                        &copy;\r\n            <script>\r\n                            document.write(new Date().getFullYear())\r\n            </script>, made with <i className=\"material-icons\">favorite</i> by\r\n            <a href=\"https://www.creative-tim.com\" target=\"_blank\">Creative Tim</a> for a better web.\r\n          </div>\r\n                </div>\r\n            </footer>\r\n        </div> */\r\n  }\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\HeaderMenu.js",["1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory, Link, Route, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  EncodeString,\r\n} from \"../../Utils\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const HeaderMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const [Codesearch, bindCodesearch, setCodesearch] = useInput(\"\");\r\n  const [Customer, setCustomer] = useState({});\r\n  const [CustomerGroup, setCustomerGroup] = useState(0);\r\n  const [Customers, setCustomers] = useState([]);\r\n  const [CustomerID, setCustomerID] = useState(0);\r\n  const location = useLocation();\r\n  \r\n  /* run after render */\r\n  useEffect(() => {\r\n    let _checkLogin = localStorage.getItem(\"Customer_LoginData\");\r\n    if(_checkLogin===null || _checkLogin===undefined || _checkLogin===\"\")\r\n      window.location.href=\"/login\";\r\n    else\r\n    {\r\n        let LoginInfo = JSON.parse(_checkLogin);\r\n        setCustomer(LoginInfo);\r\n        setCustomerGroup(LoginInfo.GroupId);\r\n        setCustomerID(LoginInfo.CustomerID);\r\n        //if (LoginInfo.Verification === \"1\") setVerification(\"display-none\");\r\n        if (LoginInfo.GroupId !== \"0\") {\r\n          APIC_spCustomerGetByGroup(LoginInfo.GroupId);\r\n        }\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const APIC_spCustomerGetByGroup = async (group) => {\r\n    if (group !== 0) {\r\n      let pr = {\r\n        Json: \"{\\\"GroupId\\\":\"+ group +\"}\",\r\n        func: \"APIC_spCustomerGetByGroupJson\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setCustomers(data);\r\n    }\r\n  };\r\n\r\n  const setNewCookie = async (item) => {\r\n    debugger\r\n    let objCustomer = {\r\n      CustomerID: item.CustomerID,\r\n      CustomerCode: item.CustomerCode,\r\n      CustomerName: item.CustomerName,\r\n      Phone: item.Phone,\r\n      Email: item.Email,\r\n      Address: item.Address,\r\n      Company: item.Company,\r\n      City: item.City,\r\n      District: item.District,\r\n      Ward: item.Ward,\r\n      CityName: item.CityName,\r\n      DistrictName: item.DistrictName,\r\n      WardName: item.WardName,\r\n      Verification: item.Verification,\r\n      CustomerGroupId: item.CustomerGroupId,\r\n      PostOfficeId: item.PostOfficeId,\r\n      Officer_ServiceId: item.Officer_ServiceId,\r\n      GroupId: item.CustomerGroupId\r\n    };\r\n    localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n    window.location.reload();\r\n  };\r\n\r\n  const onClickLogout = async () => {\r\n    localStorage.setItem(\"Customer_LoginData\", \"\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  const Link = (Codesearch) => {\r\n    window.location.href = \"/tra-cuu-van-don?code=\" + Codesearch.trim();\r\n    /* history.push({\r\n    pathname : '/tra-cuu-van-don',\r\n    state:{ // should use state becuase this page can reload\r\n      Codesearch: Codesearch.Trim()\r\n    }\r\n    }) */\r\n    // <Link to=\"/tra-cuu-van-don\"></Link>\r\n    // return( <Link className=\"nav-link\"  to={{ pathname: '/tra-cuu-van-don', Codesearch: Code}}>\r\n    // </Link>)\r\n  };\r\n  const onKeyUp = (e) => {\r\n    if (e.charCode == 13) {\r\n      Link(Codesearch);\r\n    }\r\n  };\r\n\r\n  const MenuNoGroup = (\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item dropdown hide-sm\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"#\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i className=\"material-icons\">person</i> {Customer.CustomerName}\r\n          <p className=\"d-lg-none d-md-block\">CÀI ĐẶT TÀI KHOẢN</p>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          <a className=\"dropdown-item\" href=\"#\" onClick={onClickLogout}>\r\n            Đăng xuất\r\n          </a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const MenuHaveGroup = (\r\n    <ul className=\"navbar-nav mt0\">\r\n      <li className=\"nav-item dropdown\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"javascript:;\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i className=\"material-icons\">group</i>\r\n          <p className=\"d-lg-none d-md-block\">TÀI KHOẢN NHÓM</p>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right header-scroll\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          {Customers.map((item, index) => {\r\n            return (\r\n              <a\r\n                className={\r\n                  item.CustomerId === CustomerID\r\n                    ? \"active dropdown-item\"\r\n                    : \"dropdown-item\"\r\n                }\r\n                key={index}\r\n                href=\"#\"\r\n                onClick={() => setNewCookie(item)}\r\n              >\r\n                {item.CustomerCode + \" - \" + item.CustomerName}\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item dropdown hide-sm\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"#\"\r\n          id=\"navbarDropdownProfile\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i className=\"material-icons\">person</i>\r\n           {Customer.CustomerName}\r\n          <p className=\"d-lg-none d-md-block\">CÀI ĐẶT TÀI KHOẢN</p>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownProfile\"\r\n        >\r\n          <a className=\"dropdown-item\" href=\"#\" onClick={onClickLogout}>\r\n            Đăng xuất\r\n          </a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-wrapper\">\r\n          <a className=\"navbar-brand\" href=\"/home\" className=\"simple-text logo-normal\">\r\n            <img src=\"../../assets/img/LogoNetco.png\" width=\"180\" />\r\n          </a>\r\n        </div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          aria-controls=\"navigation-index\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"sr-only\">Toggle navigation</span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse justify-content-center\">\r\n          <div className=\"input-group no-border\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Tìm kiếm đơn hàng...\"\r\n              value={Codesearch}\r\n              {...bindCodesearch}\r\n              onKeyPress={(e) => {\r\n                onKeyUp(e);\r\n              }}\r\n              style={{width:\"350px\"}}\r\n            />\r\n            <div className=\"input-group-append\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-success input-group-button\"\r\n              onClick={() => Link(Codesearch)}\r\n            >\r\n              <i className=\"material-icons\">search</i>\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"collapse navbar-collapse justify-content-end\">\r\n          {CustomerGroup === 0 ? MenuNoGroup : MenuHaveGroup}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Template\\LeftMenu.js",["1275","1276","1277","1278","1279","1280","1281","1282"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Img } from \"react-image\";\r\nexport const LeftMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const [cookies, setCookie] = useCookies(\"customerLoginWeb\");\r\n  const [Customer, setCustomer] = useState({});\r\n  const history = useHistory();\r\n  const [IsAvery, setIsAvery] = useState(\"display-none\");\r\n  const [CurrentUrl, setCurrentUrl] = useState(\"\");\r\n  const location = useLocation();\r\n  /* run after render */\r\n  useEffect(() => {\r\n    setCurrentUrl(location.pathname);\r\n    let _checkLogin = localStorage.getItem(\"Customer_LoginData\");\r\n    if(_checkLogin===null || _checkLogin===undefined || _checkLogin===\"\")\r\n      window.location.href=\"/login\";\r\n    else\r\n    {\r\n        let LoginInfo = JSON.parse(_checkLogin);\r\n        setCustomer(LoginInfo);\r\n        if (LoginInfo.GroupId === 6)\r\n          setIsAvery(\"\");\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const onClickLogout = async () => {\r\n    setCookie(\"customerLoginWeb\", \"\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebar ps\"\r\n      data-color=\"purple\"\r\n      data-background-color=\"white\"\r\n      data-image=\"../assets/img/sidebar-1.jpg\"\r\n    >\r\n      <div className=\"logo text-center\">\r\n        <div className=\"btn btn-just-icon btn-white btn-fab\">\r\n          <i className=\"material-icons design_bullet-list-67\">\r\n            view_list\r\n          </i>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-wrapper ps-container ps-theme-default\">\r\n        <ul className=\"nav mt0\">\r\n          <li className={\"border-bottom nav-item\"+ (\r\n                location.pathname === \"/home\"\r\n                ? \"active\"\r\n                : \"\")}>\r\n            <Link className=\"nav-link\" to=\"/home\">\r\n              <i className=\"material-icons mt5\">home</i>\r\n              <p> TRANG CHỦ</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/tao-nhanh-van-don\" ||\r\n                location.pathname === \"/upload-excel-van-don\" ||\r\n                location.pathname === \"/tim-kiem-van-don\" ||\r\n                location.pathname === \"/goi-lay-hang\" ||\r\n                location.pathname === \"/danh-sach-goi-lay-hang\" ||\r\n                location.pathname === \"/danh-sach-goi-lay-hang\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#ladingnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">content_paste</i>\r\n              <p>\r\n                QUẢN LÝ ĐƠN HÀNG <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"ladingnav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/tao-nhanh-van-don\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/tao-nhanh-van-don\">\r\n                    <i className=\"material-icons mt5\">shopping_cart</i>\r\n                    <span className=\"sidebar-normal\"> Tạo nhanh vận đơn</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/upload-excel-van-don\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/upload-excel-van-don\">\r\n                    <i className=\"material-icons mt5\">shopping_cart</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Upload excel vận đơn\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/tim-kiem-van-don\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/tim-kiem-van-don\">\r\n                    <i className=\"material-icons mt5\">search</i>\r\n                    <span className=\"sidebar-normal\"> Danh sách vận đơn</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/uoc-tinh-cuoc-phi\" ||\r\n                location.pathname === \"/thoi-gian-toan-trinh-phat-hang-dich-vu\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#pricenav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">list</i>\r\n              <p>\r\n                CƯỚC PHÍ - THỜI GIAN <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"pricenav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/uoc-tinh-cuoc-phi\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/uoc-tinh-cuoc-phi\">\r\n                    <i className=\"material-icons mt5\">fact_check</i>\r\n                    <span className=\"sidebar-normal\"> Ước tính cước phí</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname ===\r\n                      \"/thoi-gian-toan-trinh-phat-hang-dich-vu\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/thoi-gian-toan-trinh-phat-hang-dich-vu\"\r\n                  >\r\n                    <i className=\"material-icons mt5\">watch_later</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Toàn trình phát theo DV\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/ho-tro-don-hang\" ||\r\n                location.pathname === \"/danh-sach-ho-tro-don-hang\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#complainnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">record_voice_over</i>\r\n              <p>\r\n                HỖ TRỢ ĐƠN HÀNG <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"complainnav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/ho-tro-don-hang\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/ho-tro-don-hang\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">settings_phone</i>\r\n                    <span className=\"sidebar-normal\">Khiếu nại đơn hàng</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-it em \" +\r\n                    (location.pathname === \"/danh-sach-ho-tro-don-hang\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/danh-sach-ho-tro-don-hang\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">perm_contact_calendar</i>\r\n                    <span className=\"sidebar-normal\">Lịch sử khiếu nại</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/cong-no-tam-tinh\" ||\r\n                location.pathname === \"/bang-ke-thanh-toan\" ||\r\n                location.pathname === \"/bao-cao-tong-quan\" ||\r\n                location.pathname === \"/bao-cao-kpi-giao-hang-cod\" ||\r\n                location.pathname === \"/bao-cao-ton-no\" ||\r\n                location.pathname === \"/bao-cao-dealine-thanh-toan\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#reportnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">insights</i>\r\n              <p>\r\n                BÁO CÁO <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"reportnav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/cong-no-tam-tinh\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/cong-no-tam-tinh\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">dns</i>\r\n                    <span className=\"sidebar-normal\">Công nợ tạm tính</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bang-ke-thanh-toan\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bang-ke-thanh-toan\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">credit_card</i>\r\n                    <span className=\"sidebar-normal\">Bảng kê thanh toán</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-tong-quan\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-tong-quan\" className=\"nav-link\">\r\n                    <i className=\"material-icons\">insights</i>\r\n                    <span className=\"sidebar-normal\">Kết quả giao hàng</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-kpi-giao-hang-cod\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-kpi-giao-hang-cod\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">bubble_chart</i>\r\n                    <span className=\"sidebar-normal\">Kpi giao hàng COD</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-ton-no\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-ton-no\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">pie_chart</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo tồn nợ</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-dealine-thanh-toan\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/bao-cao-dealine-thanh-toan\">\r\n                    <i className=\"material-icons mt5\">bar_chart</i>\r\n                    <span className=\"sidebar-normal\">Thời hạn thanh toán</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              IsAvery +\r\n              \" \" +\r\n              (location.pathname === \"/in-bill-tu-excel\" ? \"active\" : \"\")\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/in-bill-tu-excel\">\r\n              <i className=\"material-icons\">unarchive</i>\r\n              <p>AVERY - IN BILL</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/mang-luoi-buu-cuc\" ? \"active\" : \"\")\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/mang-luoi-buu-cuc\">\r\n              <i className=\"material-icons\">room</i>\r\n              <p>MẠNG LƯỚI BƯU CỤC</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/thong-tin-ca-nhan\" ||\r\n                location.pathname === \"/dia-chi-gui-thuong-xuyen\" ||\r\n                location.pathname === \"/dia-chi-nhan-thuong-xuyen\" ||\r\n                location.pathname === \"/doi-mat-khau\" ||\r\n                location.pathname === \"/xac-thuc-tai-khoan\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#settingnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">list</i>\r\n              <p>\r\n                CÀI ĐẶT TÀI KHOẢN <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"settingnav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/thong-tin-ca-nhan\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/thong-tin-ca-nhan\">\r\n                    <i className=\"material-icons mt5\">account_circle</i>\r\n                    <span className=\"sidebar-normal\"> Thông tin tài khoản</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/doi-mat-khau\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/doi-mat-khau\">\r\n                    <i className=\"material-icons mt5\">swap_horiz</i>\r\n                    <span className=\"sidebar-normal\"> Đổi mật khẩu</span>\r\n                  </Link>\r\n                </li>\r\n                {Customer.Verification===0 && Customer.TypeCustomer===2?(<li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/xac-thuc-tai-khoan\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/xac-thuc-tai-khoan\">\r\n                    <i className=\"material-icons mt5\">fact_check</i>\r\n                    <span className=\"sidebar-normal\"> Xác thực tài khoản</span>\r\n                  </Link>\r\n                </li>):(<></>)}\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/dia-chi-gui-thuong-xuyen\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/dia-chi-gui-thuong-xuyen\">\r\n                    <i className=\"material-icons mt5\">location_on</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Địa chỉ gửi thường xuyên\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/dia-chi-nhan-thuong-xuyen\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/dia-chi-nhan-thuong-xuyen\">\r\n                    <i className=\"material-icons mt5\">location_on</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Địa chỉ nhận thường xuyên\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"hide-md nav-item \" +\r\n                    (location.pathname === \"/dia-chi-nhan-thuong-xuyen\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <a className=\"nav-link\" href=\"#\" onClick={onClickLogout}>\r\n                    <i className=\"material-icons mt5\">logout</i>\r\n                    <span className=\"sidebar-normal\"> Đăng xuất</span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div className=\"ps-scrollbar-x-rail\">\r\n          <div className=\"ps-scrollbar-x\" tabIndex=\"0\"></div>\r\n        </div>\r\n        <div className=\"ps-scrollbar-y-rail\">\r\n          <div className=\"ps-scrollbar-y\" tabIndex=\"0\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-background\"></div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\LadingTemporaryAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TestTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\LadingTemporaryTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TimelineTransportAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\CustomerSenderAddressTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\CustomerSenderAddressAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\CustomerAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TimelineTransportTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\System\\TestAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Main\\CustomerTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\ReportAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Redux\\Actions\\Reports\\ReportTypeAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Hooks\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Hooks\\useInput.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\GetLadingTemporary.js",["1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {\r\n  PaginationTable,\r\n  PaginationTable2,\r\n  FormatDateJson,\r\n  DecodeString,\r\n  FormatMoney,\r\n  Alerterror,\r\n  FormatDate,\r\n} from \"../../Utils\";\r\nimport { LadingTemporaryAction } from \"../../Redux/Actions/System\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\nexport const GetLadingTemporary = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      Json: '{\"CustomerId\":' + Customer.CustomerID + \"}\",\r\n      TokenDevices: \"website\",\r\n      func: \"APIC_spLadingTemporaryReport\",\r\n    };\r\n\r\n    try {\r\n      //const data = await LadingTemporaryAction.CTM_spGetLadingTemporary(params, dispatch);\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      setLadingTemporarylist(data);\r\n      PaginationTable2();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  /* get list TimelineTransportList */\r\n  const [LadingTemporarylist, setLadingTemporarylist] = useState([]);\r\n  const [LadingDetailTemporarylist, setLadingDetailTemporarylist] = useState(\r\n    []\r\n  );\r\n  const [hiddenTable, setHiddenTable] = useState(true);\r\n\r\n  const APIC_spLadingTemporaryDetail = async (item) => {\r\n    let params = {\r\n      Json: '{\"CustomerId\":' + CustomerID + \"}\",\r\n      TokenDevices: \"website\",\r\n      func: \"APIC_spLadingTemporaryDetail\",\r\n    };\r\n    debugger;\r\n    try {\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      setLadingDetailTemporarylist(data);\r\n      PaginationTable2();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    setHiddenTable(false);\r\n  };\r\n\r\n  const undo = () => {\r\n    setHiddenTable(true);\r\n  };\r\n\r\n  const columnBk = [\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      maxWidth: 90,\r\n      Cell: ({ row }) => (\r\n          <i className=\"material-icons fontsizeicon14 green button\" onClick={() => APIC_spLadingTemporaryDetail(row)}>remove_red_eye</i>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Từ ngày\",\r\n      accessor: \"FromDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Đến ngày\",\r\n      accessor: \"ToDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Nhân viên công nợ\",\r\n      accessor: \"OfficerName\",\r\n    },\r\n    {\r\n      Header: \"Tổng vận đơn\",\r\n      accessor: \"TotalBill\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TotalMoney\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền giảm\",\r\n      accessor: \"DiscountAmount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n    },\r\n  ];\r\n\r\n  const columnDetails = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n    },\r\n    {\r\n      Header: \"Tình trạng\",\r\n      accessor: \"StatusName\",\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n    },\r\n  ];\r\n\r\n  const ExportToExcel = () => {\r\n    if (LadingDetailTemporarylist.length > 0) {\r\n      let dataExcel = LadingDetailTemporarylist.map((item, index) => {\r\n        let row = new Object();\r\n        row.Ma_Van_Don = item.Code;\r\n        row.Tinh_Di = item.CitySendCode;\r\n        row.Tinh_Den = item.CityRecipientCode;\r\n        row.Thoi_Gian_Tao = FormatDateJson(item.CreateDate);\r\n        row.Ngay_Phat_Thanh_Cong = item.FinishDate===undefined?\"\":FormatDateJson(item.FinishDate);\r\n        row.Dich_Vu = item.ServiceName;\r\n        row.Trang_Thai = item.StatusName;\r\n        row.Trong_Luong = FormatMoney(item.Weight);\r\n        row.So_Kien = item.Number;\r\n        row.COD = FormatMoney(item.COD);\r\n        row.Tong_Cuoc_Phi = FormatMoney(item.Amount);\r\n        row.Hinh_Thuc_Thanh_Toan = item.PaymentString;\r\n        row.Nguoi_Nhan = item.RecipientName;\r\n        row.SDT_Nguoi_Nhan = item.RecipientPhone;\r\n        row.Cong_Ty_Nhan = item.RecipientCompany;\r\n        row.Dia_Chi_Nguoi_Nhan = item.RecipientAddress;\r\n        return row;\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách vận đơn công nợ tạm tính\"\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div\r\n          className={\r\n            hiddenTable === true ? \"row display-block\" : \"row display-none\"\r\n          }\r\n        >\r\n          <div className=\"col-md-12 main-title\">CÔNG NỢ TẠM TÍNH</div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable data={LadingTemporarylist} columns={columnBk} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            hiddenTable === false ? \"row display-block\" : \"row display-none\"\r\n          }\r\n        >\r\n          <div className=\"col-md-12 main-title\">CHI TIẾT CÔNG NỢ TẠM TÍNH\r\n            <div className=\"pull-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default btn-sm\"\r\n              disabled={disable}\r\n              onClick={() => undo()}\r\n            >\r\n              <i className=\"material-icons\">undo</i>\r\n                  Quay Lại\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={ExportToExcel}\r\n                  className=\"btn btn-sm btn-success\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                >\r\n                  <i class=\"material-icons\">get_app</i>\r\n                    Xuất excel\r\n                  </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n              <DataTable\r\n                data={LadingDetailTemporarylist}\r\n                columns={columnDetails}\r\n              />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\PostOfficeComponent.js",["1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DecodeString, Alertwarning } from \"../../Utils\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { SelectCity } from \"../../Common\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport GoogleMap from \"google-map-react\";\r\nconst AnyReactComponent = ({ Name, Address, Phone }) => (\r\n  <div className=\"map-marker\">\r\n    <i className=\"fa fa-map-marker green\" style={{ fontSize: 30 }}></i>\r\n    <div className=\"map-tooltip\">\r\n      <span className=\"bold\" style={{ textTransform: \"uppercase\" }}>\r\n        {Name}\r\n      </span>{\" \"}\r\n      <br />\r\n      <span>\r\n        <i className=\"fa fa-map-marker green\"></i> {Address}\r\n      </span>\r\n      <br />\r\n      <span>\r\n        <i className=\"fa fa-phone green\"></i> {Phone}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\nexport const PostOfficeComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [ServiceMeno, setServiceMeno] = useState({\r\n    value: 0,\r\n    label: \"Chọn dịch vụ\",\r\n  });\r\n  const [CityMeno, setCityMeno] = useState({\r\n    value: 0,\r\n    label: \"Chọn tỉnh thành\",\r\n  });\r\n  const [Data, setData] = useState([]);\r\n  const [DataFilter, setDataFilter] = useState([]);\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    try {\r\n      let params = {\r\n        IDGo_Province: CityMeno.value,\r\n      };\r\n      debugger;\r\n      let pr = {\r\n        Json: \"\",\r\n        func: \"CPN_spGetPostOffic\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setData(\r\n        data.filter(\r\n          (p) =>\r\n            (p.Types === 1 || p.Types === 2) &&\r\n            p.Lat !== null &&\r\n            p.Lng !== null &&\r\n            p.Lat !== 0 &&\r\n            p.Lng !== 0\r\n        )\r\n      );\r\n      setDataFilter(data.filter((p) => p.Types === 1 || p.Types === 2));\r\n    } catch (err) {\r\n      Alertwarning(\"Vui lòng liên hệ CSKH NETCO để biết thêm thông tin !\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  /* get list TimelineTransportList */\r\n\r\n  const onFilterPO = (CityId) => {\r\n    setDataFilter(Data.filter((p) => p.LocationId === CityId || CityId === 0));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">MẠNG LƯỚI BƯU CỤC</div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"border\">\r\n              <div className=\"form-group\" style={{ marginTop: 0 }}>\r\n                <SelectCity\r\n                  IsActive={CityMeno}\r\n                  onSelected={(item) => {\r\n                    setCityMeno(item);\r\n                    onFilterPO(item.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12 bold\">\r\n                {Data.length} chi nhánh/bưu cục trên toàn quốc\r\n              </div>\r\n              <div\r\n                className=\"scroller\"\r\n                style={{ maxHeight: \"calc(100vh - 230px)\" }}\r\n              >\r\n                {DataFilter.map((item, index) => {\r\n                  return (\r\n                    <div className=\"col-md-12 bg-gray\" key={index}>\r\n                      <span\r\n                        className=\"bold\"\r\n                        style={{ textTransform: \"uppercase\" }}\r\n                      >\r\n                        {item.POName}\r\n                      </span>{\" \"}\r\n                      <br />\r\n                      <span>\r\n                        <i className=\"fa fa-map-marker green\"></i>{\" \"}\r\n                        {item.POAddress}\r\n                      </span>\r\n                      <br />\r\n                      <span>\r\n                        <i className=\"fa fa-phone green\"></i> {item.POPhone}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 text-center\">\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"calc(100vh - 155px)\",\r\n              }}\r\n            >\r\n              <GoogleMap\r\n                apiKey={\"AIzaSyAze_kI_jO9fpyDVJ-Ff1ytPjbflkn_xzM\"}\r\n                center={[10.775869, 106.688661]}\r\n                zoom={6}\r\n              >\r\n                {DataFilter.filter(\r\n                  (p) =>\r\n                    p.Lat !== null &&\r\n                    p.Lng !== null &&\r\n                    p.Lat !== 0 &&\r\n                    p.Lng !== 0\r\n                ).map((item, index) => {\r\n                  return (\r\n                    <AnyReactComponent\r\n                      key={index}\r\n                      lat={item.Lat}\r\n                      lng={item.Lng}\r\n                      Name={item.POName}\r\n                      Address={item.POAddress}\r\n                      Phone={item.POPhone}\r\n                    />\r\n                  );\r\n                })}\r\n              </GoogleMap>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Categorys\\TimelineTransport.js",["1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {\r\n  PaginationTable,\r\n  DecodeString,\r\n  ExportExcel,\r\n  Alertwarning,\r\n} from \"../../Utils\";\r\nimport { TimelineTransportAction } from \"../../Redux/Actions/System\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { SelectService, SelectCity } from \"../../Common\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { Location } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n\r\nexport const TimelineTransport = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [ServiceMeno, setServiceMeno] = useState(33);\r\n  const [CityMeno, setCityMeno] = useState(0);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [ShowTable, setShowTable] = useState(\"display-none\");\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  /* get list TimelineTransportList */\r\n\r\n  const APIC_spTimelineTransport = async () => {\r\n    debugger;\r\n    if (CityMeno === 0) {\r\n      Alertwarning(\"Vui lòng Chọn tỉnh đi\");\r\n      return;\r\n    } else if (ServiceMeno === 0) {\r\n      Alertwarning(\"Vui lòng Chọn dịch vụ\");\r\n      return;\r\n    }\r\n    setDisable(true);\r\n    try {\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        ServiceId: ServiceMeno,\r\n        IDGo_Province: CityMeno,\r\n      };\r\n      debugger;\r\n      let pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spTimelineTransport\",\r\n        API_key: APIKey,\r\n        TokenDevices: \"website\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setData(data);\r\n      setShowTable(\"\");\r\n    } catch (err) {\r\n      Alertwarning(\"Vui lòng liên hệ CSKH NETCO để biết thêm thông tin !\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"NameProvinceGo\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"NameToProvince\",\r\n      //Cell: obj => (<span className='btn btn-success'>{obj.value}</span>)\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n    },\r\n    {\r\n      Header: \"Thời gian\",\r\n      accessor: \"Hours\",\r\n      Cell: (obj) => (\r\n        <span>\r\n          {obj.value === 0\r\n            ? \"Liên hệ bộ phận CSKH NETCO để biết thêm thông tin\"\r\n            : obj.value + \" giờ\"}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const Excell = () => {\r\n    let arr = [];\r\n    arr.push({\r\n      NameProvinceGo: \"Tỉnh đi\",\r\n      NameToProvince: \"Tỉnh đến\",\r\n      ServiceName: \"Dịch vụ\",\r\n      Hours: \"Thời gian\",\r\n    });\r\n    Data.map((item, index) => {\r\n      arr.push(item);\r\n    });\r\n    ExportExcel(arr, \"Thời gian toàn trình phát theo dịch vụ\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">THỜI GIAN TOÀN TRÌNH PHÁT THEO BƯU CỤC</div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"panel panel-success\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-info-circle\"></i> Tỉnh đi{\" \"}\r\n                <span className=\"red\">(*)</span>\r\n              </div>\r\n              <div className=\"panel-body row\">\r\n                <div className=\"col-md-12\">\r\n                  <SelectCity\r\n                    onActive={CityMeno}\r\n                    onSelected={(item) => {\r\n                      setCityMeno(item.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"panel panel-success\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-info-circle\"></i> Dịch vụ{\" \"}\r\n                <span className=\"red\">(*)</span>\r\n              </div>\r\n              <div className=\"panel-body row\">\r\n                <div className=\"col-md-12\">\r\n                  <SelectService\r\n                    onActive={ServiceMeno}\r\n                    onSelected={(item) => {\r\n                      setServiceMeno(item.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 text-center\">\r\n            <button\r\n              type=\"button\"\r\n              disabled={disable}\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={APIC_spTimelineTransport}\r\n            >\r\n              <i className=\"material-icons\">search</i>\r\n              Tìm kiếm\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={ShowTable + \" btn btn-success btn-sm\"}\r\n              onClick={() => {\r\n                Excell();\r\n              }}\r\n            >\r\n              <i className=\"material-icons\">file_download</i>\r\n              Xuất Excel\r\n            </button>\r\n          </div>\r\n          <div className=\"clearfix\"></div>\r\n          <div className={ShowTable + \" table-responsive col-md-12 mt10\"}>\r\n            <DataTable data={Data} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ChangePasswordComponent.js",["1317","1318","1319","1320","1321","1322"],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\CustomerSenderComponent.js",["1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  PaginationTable,\r\n  ValidPhone,\r\n} from \"../../Utils\";\r\n\r\nimport { Location } from \"../../Redux/Actions/Category\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\n/* Load CSS */\r\nexport const CustomerSenderComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [AddressList, setAddressList] = useState([]);\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [AddressId, setAddressId] = useState(0);\r\n\r\n  const [City, setCity] = useState(0);\r\n  const [District, setDistrict] = useState(0);\r\n  const [Ward, setWard] = useState(0);\r\n  const [CityMeno, setCityMeno] = useState(\"\");\r\n  const [DistrictMeno, setDistrictMeno] = useState(\"\");\r\n  const [WardMeno, setWardMeno] = useState(\"\");\r\n\r\n  const [Name, bindName, setName] = useInput(\"\");\r\n  const NameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n  const PhoneRef = useRef();\r\n\r\n  const [Street, bindStreet, setStreet] = useInput(\"\");\r\n  const StreetRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(\"\");\r\n  const CompanyRef = useRef();\r\n\r\n  const [NoResultMessage, setNoResultMessage] = useState(\r\n    \"Không tìm thấy dữ liệu\"\r\n  );\r\n\r\n  const [ShowForm,setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n    APIC_spCustomerSenderAddressList(Customer.CustomerID);\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCity(item.value);\r\n    setCityMeno(item.label);\r\n    setDistrict(0);\r\n    setDistrictMeno(\"\");\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrict(item.value);\r\n    setDistrictMeno(item.label);\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onSelectWard = (item) => {\r\n    setWard(item.value);\r\n    setWardMeno(item.label);\r\n  };\r\n\r\n  const APIC_spCustomerSenderAddressList = async (ID) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + ID + \"}\",\r\n      func: \"APIC_spCustomerSenderAddressList\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    debugger;\r\n    if (data !== null) setNoResultMessage(\"\");\r\n    else setNoResultMessage(\"Không tìm thấy dữ liệu\");\r\n    setAddressList(data);\r\n    //PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n   \r\n  const GoToCreateLading = (item) =>{\r\n    debugger\r\n    let draft = {\r\n      AddressFromId: item._original.CustomerAddressSenderId,\r\n      AddressFrom:item._original.AddressFull,\r\n      objFrom: item._original\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draft));\r\n    debugger\r\n    history.push(\"tao-nhanh-van-don\");\r\n  }\r\n\r\n  const Edit = (item)=>{\r\n    debugger\r\n    setAddressId(item._original.CustomerAddressSenderId);\r\n    setName(item._original.NameSend);\r\n    setPhone(item._original.PhoneSend);\r\n    setStreet(item._original.Street_Number);\r\n    setCity(item._original.CityId);\r\n    setDistrict(item._original.DistrictiId);\r\n    setWard(item._original.WarId);\r\n    setCityMeno(item._original.CityName);\r\n    setDistrictMeno(item._original.DistrictyName);\r\n    setWardMeno(item._original.WarName);\r\n    setCompany(item._original.Company);\r\n    setShowForm(true);\r\n  }\r\n  \r\n  const Delete = async (row) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      Json: '{\"CustomerId\":' + CustomerID + ',\"AddressId\":' + row._original.CustomerAddressSenderId + '}',\r\n      func: \"APIC_spCustomerSenderAddressRemove\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    if (data.resultCode == 0) {\r\n      setAddressList(AddressList.filter(p => p.CustomerAddressSenderId !== row._original.CustomerAddressSenderId));\r\n      Alertsuccess(data.localMessage);\r\n    } else Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerSenderAddress_SaveJson = async () => {\r\n    //ScrollTop();\r\n    setDisable(true);\r\n    if (Name === \"\") Alerterror(\"Nhập họ tên\");\r\n    else if (Phone === \"\") Alerterror(\"Nhập số điện thoại\");\r\n    else if (ValidPhone(Phone) === \"form-error\")\r\n      Alerterror(\"Số điện thoại không đúng định dạng !\");\r\n    else if (City === undefined || City == 0)\r\n      Alerterror(\"Chọn tỉnh thành\");\r\n    else if (District === undefined || District == 0)\r\n      Alerterror(\"Chọn quận huyện\");\r\n    else if (Ward === undefined || Ward == 0)\r\n      Alerterror(\"Chọn phường xã\");\r\n    else if (Street === \"\") Alerterror(\"Nhập số nhà, đường\");\r\n    else {\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        AddressId: AddressId,\r\n        NameSend: Name,\r\n        PhoneSend: Phone,\r\n        CityId: City,\r\n        DistrictId: District,\r\n        WardId: Ward,\r\n        Street_Number: Street,\r\n        AddressFull:\r\n          Street +\r\n          \", \" +\r\n          WardMeno +\r\n          \", \" +\r\n          DistrictMeno +\r\n          \", \" +\r\n          CityMeno\r\n      };\r\n      const pr = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerSenderAddress_SaveJson\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      Alertsuccess(data.localMessage);\r\n      APIC_spCustomerSenderAddressList(CustomerID);\r\n      PaginationTable();\r\n      ClearForm();\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const RegPhone = (e) => {\r\n    debugger;\r\n    setPhone(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPhone(e);\r\n      setPhoneReg(result);\r\n      if (result === \"form-error\")\r\n        Alerterror(\"Số điện thoại không đúng định dạng\");\r\n    }\r\n  };\r\n\r\n  const ClearForm = () => {\r\n    setCity(0);\r\n    setDistrict(0);\r\n    setWard(0);\r\n    setCityMeno(\"\");\r\n    setDistrictMeno(\"\");\r\n    setWardMeno(\"\");\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setStreet(\"\");\r\n    setCompany(\"\");\r\n    setDisable(false);\r\n    setAddressId(0);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-edit green button\"\r\n            onClick={() => GoToCreateLading(row)}\r\n            title=\"Tạo đơn hàng\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-cog yellow button\"\r\n            onClick={() => Edit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa địa chỉ ?\") &&\r\n              Delete(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n\r\n        </span>\r\n      ),\r\n      width: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tên\",\r\n      accessor: \"NameSend\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo tên ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"PhoneSend\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo số điện thoại ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Địa chỉ\",\r\n      accessor: \"AddressFull\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo địa chỉ ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">ĐỊA CHỈ GỬI THƯỜNG XUYÊN\r\n          <button type=\"button\" className=\"btn btn-danger pull-right btn-sm\" onClick={(e)=> setShowForm(!ShowForm)}>\r\n              <i className=\"fa fa-plus\"></i> Thêm mới\r\n           </button>\r\n           </div>\r\n          <div className=\"col-md-12\">\r\n            <div className={\"panel-collapse collapse in \" + (ShowForm?\"show\":\"\")} id=\"collapseOne\">\r\n              <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">\r\n                  <i className=\"fa fa-edit\"></i> Thêm mới địa chỉ\r\n              </div>\r\n                <div className=\"panel-body\">\r\n                  <form className=\" form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Họ tên <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={NameRef}\r\n                            value={Name}\r\n                            {...bindName}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            SĐT <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className={\"form-control \" + phoneReg}\r\n                            ref={PhoneRef}\r\n                            value={Phone}\r\n                            {...bindPhone}\r\n                            min=\"0\"\r\n                            onBlur={(e) => RegPhone(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Số nhà / đường <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={StreetRef}\r\n                            value={Street}\r\n                            {...bindStreet}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Tỉnh thành <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectCity\r\n                            onActive={City}\r\n                            onSelected={(item) => {\r\n                              onChooseProvince(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Quận/huyện <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectDistrict\r\n                            onActive={District}\r\n                            ParentID={City}\r\n                            onSelected={(item) => {\r\n                              onChooseDistrict(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Phường/xã <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectWard\r\n                            onActive={Ward}\r\n                            ParentID={District}\r\n                            onSelected={(item) => {\r\n                              onSelectWard(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-default\"\r\n                          onClick={ClearForm}\r\n                        >\r\n                          <i className=\"material-icons\">undo</i> Hủy\r\n                      </button>{\" \"}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          disabled={disable}\r\n                          onClick={APIC_spCustomerSenderAddress_SaveJson}\r\n                        >\r\n                          <i className=\"material-icons\">create</i> Xác nhận\r\n                      </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"panel panel-success\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-list\"></i> Danh sách địa chỉ\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <div className=\"table-responsive\">\r\n                  <DataTable data={AddressList} columns={columns} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\CustomerRecipientComponent.js",["1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  PaginationTable,\r\n  ValidPhone,\r\n  GetLatLngGoogle\r\n} from \"../../Utils\";\r\n\r\nimport { Location } from \"../../Redux/Actions/Category\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\n/* Load CSS */\r\nexport const CustomerRecipientComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [AddressList, setAddressList] = useState([]);\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const [AddressId,setAddressId]=useState(0);\r\n  const [City, setCity] = useState(0);\r\n  const [District, setDistrict] = useState(0);\r\n  const [Ward, setWard] = useState(0);\r\n  const [CityMeno, setCityMeno] = useState(\"\");\r\n  const [DistrictMeno, setDistrictMeno] = useState(\"\");\r\n  const [WardMeno, setWardMeno] = useState(\"\");\r\n\r\n  const [Name, bindName, setName] = useInput(\"\");\r\n  const NameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n  const PhoneRef = useRef();\r\n\r\n  const [Street, bindStreet, setStreet] = useInput(\"\");\r\n  const StreetRef = useRef();\r\n\r\n  const [Code, bindCode, setCode] = useInput(\"\");\r\n  const CodeRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(\"\");\r\n  const CompanyRef = useRef();\r\n\r\n  const [AddressOld,setAddressOld]=useState();\r\n  const [Lat,setLat]=useState(0);\r\n  const [Lng,setLng]=useState(0);\r\n\r\n  const [NoResultMessage, setNoResultMessage] = useState(\r\n    \"Không tìm thấy dữ liệu\"\r\n  );\r\n\r\n  const [ShowForm, setShowForm] = useState(false);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n    APIC_spCustomerRecipientLoad();\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCity(item.value);\r\n    setCityMeno(item.label);\r\n    setDistrict(0);\r\n    setDistrictMeno(\"\");\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrict(item.value);\r\n    setDistrictMeno(item.label);\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const [StreetList, setStreetList] = useState([]);\r\n  const onSelectWard = async(item) => {\r\n    setWard(item.value);\r\n    setWardMeno(item.label);\r\n\r\n    //Gọi api nạp danh sách địa chỉ cho khách lựa chọn\r\n    const params = {\r\n      Json: \"[{\\\"WardId\\\":\\\"\" + item.value + \"\\\"}]\",\r\n      func: \"APIC_spCustomerRecipientGetByLocation\",\r\n      API_key: APIKey,\r\n    };\r\n    // call redux saga\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    setStreetList(result);\r\n  };\r\n\r\n  const changeStreet = (e) => {\r\n    debugger\r\n    setStreet(e);\r\n    if (e === \"\") {\r\n      setLng(0);\r\n      setLat(0);\r\n    }\r\n    else {\r\n      let check = StreetList.find(p => p.Street.toUpperCase() === e.toUpperCase());\r\n      if(check !== undefined){\r\n        setLat(check.Lat);\r\n        setLng(check.Lng);\r\n      }\r\n      else{\r\n        setLat(0);\r\n        setLng(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerRecipientLoad = async () => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + Customer.CustomerID + \"}\",\r\n      func: \"APIC_spCustomerRecipientLoad\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    if (data !== null) setNoResultMessage(\"\");\r\n    else setNoResultMessage(\"Không tìm thấy dữ liệu\");\r\n    setAddressList(data);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const Edit = (item) => {\r\n    debugger\r\n    setAddressId(item._original.Id);\r\n    setName(item._original.Name);\r\n    setPhone(item._original.Phone);\r\n    setStreet(item._original.Street);\r\n    setCity(item._original.CityId);\r\n    setDistrict(item._original.DistrictId);\r\n    setWard(item._original.WardId);\r\n    setCityMeno(item._original.City);\r\n    setDistrictMeno(item._original.District);\r\n    setWardMeno(item._original.Ward);\r\n    setCompany(item._original.Company);\r\n    setAddressOld(item._original.Street+\", \"+item._original.Ward +\", \"+item._original.District + \", \"+item._original.City);\r\n    setLat(item._original.Lat);\r\n    setLng(item._original.Lng);\r\n    setShowForm(true);\r\n  }\r\n\r\n  const Delete = async (item) => {\r\n    debugger\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      AddressId: item._original.Id,\r\n    };\r\n    const data = await CustomerAction.APIC_spCustomerRecipientRemove(\r\n      params,\r\n      dispatch\r\n    );\r\n    if (data.resultCode == 0) {\r\n      setAddressList(AddressList.filter(p => p.Id !== item._original.Id));\r\n      Alertsuccess(data.localMessage);\r\n    } else Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerRecipientSave = async () => {\r\n    setDisable(true);\r\n    let GetLat=Lat,GetLng=Lng,Address=Street + \", \" + WardMeno + \", \" + DistrictMeno + \", \" + CityMeno;\r\n    if (Name === \"\")\r\n      Alerterror(\"Nhập họ tên\");\r\n    else if (Phone === \"\")\r\n      Alerterror(\"Nhập số điện thoại\");\r\n    else if (ValidPhone(Phone) === \"form-error\")\r\n      Alerterror(\"Số điện thoại không đúng định dạng !\");\r\n    else if (City === undefined || City == 0)\r\n      Alerterror(\"Chọn tỉnh thành\");\r\n    else if (District === undefined || District == 0)\r\n      Alerterror(\"Chọn quận huyện\");\r\n    else if (Ward === undefined || Ward == 0)\r\n      Alerterror(\"Chọn phường xã\");\r\n    else if (Street === \"\")\r\n      Alerterror(\"Nhập số nhà, đường\");\r\n    else {\r\n      debugger\r\n      if (Lat === 0 || Lng === 0 || Lat === \"\" || Lng === \"\" || Lat === \"0\" || Lng === \"0\"\r\n      || Lat===undefined || Lng===undefined || Lat===null || Lng===null) {\r\n        const res = await GetLatLngGoogle(Address);\r\n        if (res) {\r\n          GetLat = res[0].lat\r\n          GetLng = res[0].lng\r\n        }\r\n      }\r\n\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n        CustomerID: CustomerID,\r\n        AddressId:AddressId,\r\n        Code: Phone,\r\n        Name: Name,\r\n        Phone: Phone,\r\n        CityId: City,\r\n        City: CityMeno,\r\n        DistrictId: District,\r\n        District: DistrictMeno,\r\n        WardId: Ward,\r\n        Ward: WardMeno,\r\n        Street: Street,\r\n        Company: Company,\r\n        Address:\r\n          Street +\r\n          \", \" +\r\n          WardMeno +\r\n          \", \" +\r\n          DistrictMeno +\r\n          \", \" +\r\n          CityMeno,\r\n        Lat: GetLat,\r\n        Lng: GetLng,\r\n      };\r\n      const pr = {\r\n        API_key: APIKey,\r\n        json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerRecipientSaveJson\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      Alertsuccess(data.localMessage);\r\n      APIC_spCustomerRecipientLoad();\r\n      setDisable(false);\r\n      PaginationTable();\r\n      ClearForm();\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const RegPhone = (e) => {\r\n    debugger;\r\n    setPhone(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPhone(e);\r\n      setPhoneReg(result);\r\n      if (result === \"form-error\")\r\n        Alerterror(\"Số điện thoại không đúng định dạng\");\r\n    }\r\n  };\r\n\r\n  const GoToCreateLading = (item) => {\r\n    let draft = {\r\n      AddressToId: item._original.Id,\r\n      AddressTo: item._original.Address,\r\n      objTo: item._original\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draft));\r\n    debugger\r\n    history.push(\"tao-nhanh-van-don\");\r\n  }\r\n\r\n  const ClearForm = () => {\r\n    setCity(0);\r\n    setDistrict(0);\r\n    setWard(0);\r\n    setCityMeno(\"\");\r\n    setDistrictMeno(\"\");\r\n    setWardMeno(\"\");\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setStreet(\"\");\r\n    setCode(\"\");\r\n    setCompany(\"\");\r\n    setAddressOld(\"\");\r\n    setAddressId(0);\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-edit green button\"\r\n            onClick={() => GoToCreateLading(row)}\r\n            title=\"Tạo đơn hàng\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-cog yellow button\"\r\n            onClick={() => Edit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa địa chỉ ?\") &&\r\n              Delete(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n        </span>\r\n      ),\r\n      width: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tên\",\r\n      accessor: \"Name\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo tên ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"Phone\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo số điện thoại ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Địa chỉ\",\r\n      accessor: \"Address\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo địa chỉ ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Công ty\",\r\n      accessor: \"Company\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo công ty ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">ĐỊA CHỈ NHẬN THƯỜNG XUYÊN\r\n            <button type=\"button\" className=\"btn btn-danger pull-right btn-sm\" onClick={(e) => setShowForm(!ShowForm)}>\r\n              <i className=\"fa fa-plus\"></i> Thêm mới\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className={\"panel-collapse collapse in \" + (ShowForm ? \"show\" : \"\")} id=\"collapseOne\">\r\n              <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading\">\r\n                  <i className=\"fa fa-edit\"></i> Thêm mới địa chỉ\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <form className=\" form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Họ tên <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={NameRef}\r\n                            value={Name}\r\n                            {...bindName}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            SĐT <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className={\"form-control \" + phoneReg}\r\n                            ref={PhoneRef}\r\n                            value={Phone}\r\n                            {...bindPhone}\r\n                            min=\"0\"\r\n                            onBlur={(e) => RegPhone(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>Công ty</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={CompanyRef}\r\n                            value={Company}\r\n                            {...bindCompany}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Tỉnh thành <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectCity\r\n                            onActive={City}\r\n                            onSelected={(item) => {\r\n                              onChooseProvince(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Quận/huyện <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectDistrict\r\n                            onActive={District}\r\n                            ParentID={City}\r\n                            onSelected={(item) => {\r\n                              onChooseDistrict(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"mb5\">\r\n                            Phường/xã <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectWard\r\n                            onActive={Ward}\r\n                            ParentID={District}\r\n                            onSelected={(item) => {\r\n                              onSelectWard(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Số nhà, đường <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={StreetRef}\r\n                            value={Street}\r\n                            {...bindStreet}\r\n                            minLength=\"0\"\r\n                            maxLength=\"500\"\r\n                            onBlur={(e) => {\r\n                              changeStreet(e.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-default\"\r\n                          onClick={ClearForm}\r\n                        >\r\n                          <i className=\"material-icons\">undo</i> Hủy\r\n                        </button>{\" \"}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          disabled={disable}\r\n                          onClick={APIC_spCustomerRecipientSave}\r\n                        >\r\n                          <i className=\"material-icons\">create</i> Xác nhận\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"panel panel-success\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-list\"></i> Danh sách địa chỉ\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <div className=\"table-responsive\">\r\n                  <DataTable data={AddressList} columns={columns} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\LoginComponent.js",["1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alertsuccess, Alerterror, EncodeString } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, TOKEN_DEVICE, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\n\r\nexport const LoginComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Username, bindUserName, setUsername] = useInput(\"\");\r\n  const UsernameRef = useRef();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [LoginMessage, setLoginMessage] = useState(\"\");\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [UserActive, setUserActive] = useState(\"\");\r\n  const [PassActive, setPassActive] = useState(\"\");\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Customer_LoginData\", \"\");\r\n    let currentDate = new Date();\r\n    if (currentDate.getHours() < 12)\r\n      setLoginMessage(\"Chào buổi sáng. Chúc bạn ngày mới tràn đầy năng lượng\");\r\n    else if (currentDate.getHours() > 12 && currentDate.getHours() < 18)\r\n      setLoginMessage(\"Buổi chiều của bạn thế nào ?\");\r\n    else setLoginMessage(\"Hôm nay có gì mới ?\");\r\n  }, []);\r\n\r\n  const onClickLogin = async () => {\r\n    setDisable(true);\r\n    setUserActive(\"\");\r\n    setPassActive(\"\");\r\n    if (Username === \"\") {\r\n      Alerterror(\"Thông tin đăng nhập không được để trống\");\r\n      setUserActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else if (Password === \"\") {\r\n      Alerterror(\"Mật khẩu không được để trống\");\r\n      setUserActive(\"\");\r\n      setPassActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else {\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        Username: Username,\r\n        Password: Password,\r\n      };\r\n      const data = await CustomerAction.APIC_spCustomerCheckLogin(\r\n        params,\r\n        dispatch\r\n      );\r\n      if (data.resultCode === 0 && data.data !== \"\") {\r\n        let _customer = JSON.parse(data.data);\r\n        let objCustomer = {\r\n          CustomerID: _customer.CustomerID,\r\n          CustomerCode: _customer.CustomerCode,\r\n          CustomerName: _customer.CustomerName,\r\n          Phone: _customer.Phone,\r\n          Email: _customer.Email,\r\n          Address: _customer.Address,\r\n          Company: _customer.CustomerCompany,\r\n          City: _customer.City,\r\n          District: _customer.District,\r\n          Ward: _customer.Ward,\r\n          CityName: _customer.CityName,\r\n          DistrictName: _customer.DistrictName,\r\n          WardName: _customer.WardName,\r\n          Verification: _customer.Verification,\r\n          CustomerGroupId: _customer.CustomerGroupId,\r\n          PostOfficeId: _customer.PostOfficeId,\r\n          Officer_ServiceId: _customer.Officer_ServiceId,\r\n          GroupId: _customer.CustomerGroupId,\r\n          LinkAvatar: _customer.LinkAvatar,\r\n          TypeCustomer: _customer.Type,\r\n          GoogleId: _customer.GoogleId,\r\n          FacebookId: _customer.FacebookId\r\n        };\r\n        localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n        debugger\r\n        window.location.href = \"/home\";\r\n      } else {\r\n        Alerterror(data.localMessage);\r\n      }\r\n    }\r\n\r\n    //[{\"CustomerID\":34232,\"CustomerCode\":\"E0918769843\",\"CustomerName\":\"IT Test\",\"Phone\":\"0918769843\",\"Email\":\"yennhi@yahoo.com.vn\",\"Password\":\"ld\\/iCIdWzciLz1tLO0MoJA==\",\"Address\":\"IT Test\",\"CustomerCompany\":\"\",\"Ward\":11627,\"District\":630,\"City\":50,\"BankNumber\":\"\",\"BankNumberName\":\"\",\"BankName\":\"\",\"BankBranch\":\"\",\"Officer_ServiceId\":128,\"Verification\":1,\"PostOfficeId\":11,\"LinkAvatar\":\"https:\\/\\/erp.vps.vn\\/Content\\/Avatar\\/avt-customer2021-03-01-03-35-55.jpg\",\"ImageFaceReality\":\"https:\\/\\/erp.vps.vn\\/Content\\/Avatar\\/faceid-customer2021-02-27-09-48-29.jpg\",\"CustomerGroupId\":0}]\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const responseFacebook = async (response) => {\r\n    debugger\r\n    console.log(response);\r\n    if (response.status !== \"unknown\") {\r\n      let pr = {\r\n        SocialID: response.authResponse.userID,\r\n        SocialType: \"Facebook\",\r\n        SocialLoginObj: response\r\n      }\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(pr),\r\n        func: \"APIC_spCustomerSocialLoginV2\",\r\n      };\r\n      const list = await mainAction.API_spCallServer(params, dispatch);\r\n      if (list.length > 0) {\r\n        let _customer = list[0];\r\n        let objCustomer = {\r\n          CustomerID: _customer.CustomerID,\r\n          CustomerCode: _customer.CustomerCode,\r\n          CustomerName: _customer.CustomerName,\r\n          Phone: _customer.Phone,\r\n          Email: _customer.Email,\r\n          Address: _customer.Address,\r\n          Company: _customer.CustomerCompany,\r\n          City: _customer.City,\r\n          District: _customer.District,\r\n          Ward: _customer.Ward,\r\n          CityName: _customer.CityName,\r\n          DistrictName: _customer.DistrictName,\r\n          WardName: _customer.WardName,\r\n          Verification: _customer.Verification,\r\n          CustomerGroupId: _customer.CustomerGroupId,\r\n          PostOfficeId: _customer.PostOfficeId,\r\n          Officer_ServiceId: _customer.Officer_ServiceId,\r\n          GroupId: _customer.CustomerGroupId,\r\n          LinkAvatar: _customer.LinkAvatar,\r\n          TypeCustomer: _customer.Type,\r\n          GoogleId: _customer.GoogleId,\r\n          FacebookId: _customer.FacebookId\r\n        };\r\n        localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n        window.location.href = \"/home\";\r\n      }\r\n      else {\r\n        if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản facebook của bạn. Đến trang đăng ký\")) {\r\n          let obj = new Object();\r\n          obj.Name = response.profileObj.name;\r\n          obj.Email = response.profileObj.email;\r\n          obj.GoogleId = response.profileObj.googleId;\r\n          obj.FacebookId = \"\";\r\n          obj.profileObj = response.profileObj;\r\n          localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n          window.location.href = \"/register\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: JSON.stringify({\r\n        GoogleId: response.profileObj.googleId,\r\n        SocialLoginObj: response.profileObj\r\n      }),\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    if (list.length > 0) {\r\n      let _customer = list[0];\r\n      let objCustomer = {\r\n        CustomerID: _customer.CustomerID,\r\n        CustomerCode: _customer.CustomerCode,\r\n        CustomerName: _customer.CustomerName,\r\n        Phone: _customer.Phone,\r\n        Email: _customer.Email,\r\n        Address: _customer.Address,\r\n        Company: _customer.CustomerCompany,\r\n        City: _customer.City,\r\n        District: _customer.District,\r\n        Ward: _customer.Ward,\r\n        CityName: _customer.CityName,\r\n        DistrictName: _customer.DistrictName,\r\n        WardName: _customer.WardName,\r\n        Verification: _customer.Verification,\r\n        CustomerGroupId: _customer.CustomerGroupId,\r\n        PostOfficeId: _customer.PostOfficeId,\r\n        Officer_ServiceId: _customer.Officer_ServiceId,\r\n        GroupId: _customer.CustomerGroupId,\r\n        LinkAvatar: _customer.LinkAvatar,\r\n        TypeCustomer: _customer.Type,\r\n        GoogleId: _customer.GoogleId,\r\n        FacebookId: _customer.FacebookId\r\n      };\r\n      localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n      window.location.href = \"/home\";\r\n    }\r\n    else {\r\n      if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản google của bạn. Đến trang đăng ký\")) {\r\n        debugger\r\n        let obj = new Object();\r\n        obj.Name = response.profileObj.name;\r\n        obj.Email = response.profileObj.email;\r\n        obj.GoogleId = response.profileObj.googleId;\r\n        obj.FacebookId = \"\";\r\n        obj.profileObj = response.profileObj;\r\n        localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n        window.location.href = \"/register\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-center mb10\">\r\n            <Img src=\"../../assets/img/LogoNetco.png\" className=\"logocustom\" width=\"200\" className=\"margin-left-5\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 hide-sm\">\r\n            <h3 className=\"bold\">\r\n              <span className=\"red\">NETCO</span> CÓ GÌ HOT ?\r\n            </h3>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển an toàn </h4>\r\n                <div className=\"italic sm\"> Hàng hóa của khách hàng được bảo đảm an toàn tới tay người nhận </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Hỗ trợ tư vấn linh hoạt </h4>\r\n                <div className=\"italic sm\"> Khách hàng luôn được chăm sóc chu đáo - nhiệt tình ở mọi thời điểm </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" />{\" \"} Thanh toán dễ dàng </h4>\r\n                <div className=\"italic sm\"> Phương thức thanh toán linh hoạt, tiện lợi mà vẫn giữ được sự an toàn </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển đúng giờ </h4>\r\n                <div className=\"italic sm\"> Luôn luôn đúng giờ là một ưu điểm tuyệt vời mà NETCO có được </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"><Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Nhân viên nhiệt tình</h4>\r\n                <div className=\"italic sm\"> Nhân viên giao hàng nhiệt tình, luôn lắng nghe mọi ý kiến từ khách hàng </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <form method=\"#\" action=\"#\">\r\n              <h3 className=\"bold text-center mb10\"> <span className=\"red\">ĐĂNG NHẬP</span> HỆ THỐNG </h3>\r\n              <div className=\"italic text-center mb30\">{LoginMessage}</div>\r\n              <div className=\"form-group\">\r\n                <label for=\"exampleEmail\">Nhập email hoặc số điện thoại </label>\r\n                <input type=\"text\" class={\"form-control \" + UserActive} id=\"exampleEmail\" ref={UsernameRef} value={Username} {...bindUserName} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"examplePass\">Mật khẩu</label>\r\n                <div className=\"input-group\">\r\n                  <input type={PassHide} class={\"form-control \" + PassActive} id=\"examplePass\" ref={PasswordRef} value={Password} {...bindPassword} />\r\n                  <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Link className=\"red italic\" to=\"/forgot\">Quên mật khẩu ?</Link>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button type=\"button\" className=\"btn btn-fill login-button\" onClick={onClickLogin}>\r\n                  Đăng nhập<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group text-center bold\">\r\n                Bạn chưa có tài khoản\r\n                <Link className=\"red\" to=\"/register\"> Đăng ký ngay</Link>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                {/* <FacebookLogin\r\n                  appId={FACEBOOK_LOGIN_APPID}\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  cssClass=\"btn btn-info btnFacebook\"\r\n                  textButton=\"Login with Facebook\"\r\n                /> */}\r\n                <GoogleLogin\r\n                  clientId={GOOGLE_LOGIN_CLIENTID}\r\n                  buttonText=\"Đăng nhập nhanh với Google\"\r\n                  onSuccess={responseGoogle}\r\n                  icon=\"fa-google\"\r\n                  cssClass=\"btn btn-success btnGoogle\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ForgotPasswordComponent.js",["1366","1367"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alertsuccess, Alerterror } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey } from \"../../Services/Api\";\r\n\r\nexport const ForgotPasswordComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, bindEmail, setEmail] = useInput(\"\");\r\n  const EmailRef = useRef();\r\n\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  /* run after render */\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const APIC_CustomerSendEmailForgot = async () => {\r\n    setDisable(false);\r\n    let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if (Email === \"\") {\r\n      Alerterror(\"Vui lòng nhập Email\");\r\n      return;\r\n    } else if (!pattern.test(Email)) {\r\n      Alerterror(\"Email không đúng định dạng\");\r\n      return;\r\n    }\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      Email: Email,\r\n    };\r\n    const data = await CustomerAction.APIC_CustomerSendEmailForgot(params, dispatch);\r\n    if (data.resultCode === 0) {\r\n      setDisable(true);\r\n      Alertsuccess(data.localMessage);\r\n    }\r\n    else\r\n      Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const HandleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      APIC_CustomerSendEmailForgot();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Img\r\n              src=\"../../assets/img/LogoNetco.png\"\r\n              className=\"logocustom\"\r\n              width=\"200\"\r\n              className=\"margin-left-5\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold text-center\">\r\n              YÊU CẦU THAY ĐỔI <span className=\"red\">MẬT KHẨU</span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  Email <span className=\"red\">(*)</span>\r\n                </label>\r\n                <div className=\"col-sm-8\"><input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  ref={EmailRef}\r\n                  value={Email}\r\n                  {...bindEmail}\r\n                  disabled={disable}\r\n                  onKeyDown={(e)=>HandleKeyDown(e)}\r\n                /></div>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fill login-button\"\r\n                  disabled={disable}\r\n                  onClick={APIC_CustomerSendEmailForgot}\r\n                >\r\n                  GỬI YÊU CẦU<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group text-center bold\">\r\n                Đến trang{\" \"}\r\n                <Link className=\"red\" to=\"/login\">\r\n                  Đăng nhập\r\n                </Link>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ProfiveComponent.js",["1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { Img } from \"react-image\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {\r\n  SelectCity,\r\n  SelectDistrict,\r\n  SelectWard,\r\n  Avarta,\r\n} from \"../../Common\";\r\nimport { Alertsuccess, Alerterror, DecodeString } from \"../../Utils\";\r\n\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { APIKey, TOKEN_DEVICE, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\n\r\n/* Load CSS */\r\n\r\nexport const ProfiveComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [CustomerName, bindCustomerName, setCustomerName] = useInput(Customer.CustomerName);\r\n  const CustomerNameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(Customer.Phone);\r\n  const PhoneRef = useRef();\r\n\r\n  const [Email, bindEmail, setEmail] = useInput(Customer.Email);\r\n  const EmailRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(Customer.Company);\r\n  const CompanyRef = useRef();\r\n\r\n  const [Address, bindAddress, setAddress] = useInput(Customer.Address);\r\n  const AddressRef = useRef();\r\n\r\n  const [BankNumber, bindBankNumber, setBankNumber] = useInput(Customer.BankNumber);\r\n  const BankNumberRef = useRef();\r\n\r\n  const [BankNumberName, bindBankNumberName, setBankNumberName] = useInput(Customer.BankNumberName);\r\n  const BankNumberNameRef = useRef();\r\n\r\n  const [BankName, bindBankName, setBankName] = useInput(Customer.BankName);\r\n  const BankNameRef = useRef();\r\n\r\n  const [BankBranch, bindBankBranch, setBankBranch] = useInput(Customer.BankBranch);\r\n  const BankBranchRef = useRef();\r\n\r\n  const [City, setCity] = useState(0);\r\n\r\n  const [District, setDistrict] = useState(Customer.District);\r\n\r\n  const [Ward, setWard] = useState(Customer.Ward);\r\n\r\n  const [Avatar, setAvatar] = useState(Customer.LinkAvatar !== \"https://erp.vps.vn\"? Customer.LinkAvatar: \"/assets/img/noimage.jpg\");\r\n  const [FileUpload, setFileUpload] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n    setCity(Customer.City);\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    //setCityMeno(item);\r\n    setCity(item.value);\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    //setDistrictMeno(item);\r\n    setDistrict(item.value);\r\n  };\r\n\r\n  const onSelectWard = (item) => {\r\n    //setWardMeno(item);\r\n    setWard(item.value);\r\n  };\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerUpdateInfo = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (CustomerName === \"\") {\r\n      Alerterror(\"Vui lòng nhập họ tên\");\r\n      return;\r\n    }\r\n    else if (Phone === \"\") {\r\n      Alerterror(\"Vui lòng nhập SDT\");\r\n      return;\r\n    } else if (Email === \"\") {\r\n      Alerterror(\"Vui lòng nhập Email\");\r\n      return;\r\n    } else if (Address === \"\") {\r\n      /*  else if (ValidEmail(Email) !== \"\") {\r\n        Alerterror(\"Email không đúng định dạng\");\r\n        return;\r\n      }  */\r\n      Alerterror(\"Vui lòng nhập Địa chỉ\");\r\n      return;\r\n    } else if (City === 0) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành\");\r\n      return;\r\n    } else if (District === 0) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện\");\r\n      return;\r\n    } else if (Ward === 0) {\r\n      Alerterror(\"Vui lòng chọn Phường xã\");\r\n      return;\r\n    } else {\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n        CustomerID: CustomerID,\r\n        CustomerName: CustomerName,\r\n        CompanyName: Company == null ? \"\" : Company,\r\n        UserName: \"\",\r\n        Password: \"\",\r\n        Phone: Phone,\r\n        Email: Email,\r\n        Address: Address,\r\n        City: City,\r\n        District: District,\r\n        Ward: Ward,\r\n        BankNumber: BankNumber == null ? \"\" : BankNumber,\r\n        BankNumberName: BankNumberName == null ? \"\" : BankNumberName,\r\n        BankName: BankName == null ? \"\" : BankName,\r\n        BankBranch: BankBranch == null ? \"\" : BankBranch\r\n      };\r\n      debugger\r\n      const data = await CustomerAction.APIC_spCustomerUpdateInfo(\r\n        params,\r\n        dispatch\r\n      );\r\n      if (data.resultCode === 0)\r\n        Alertsuccess(data.localMessage);\r\n      else\r\n        Alerterror(data.localMessage);\r\n      //Cập nhật lại cookie\r\n      Customer.CustomerName=CustomerName;\r\n      Customer.Address=Address;\r\n      Customer.City=City;\r\n      Customer.District=District;\r\n      Customer.Ward=Ward;\r\n      Customer.BankNumber=BankNumber;\r\n      Customer.BankNumberName=BankNumberName;\r\n      Customer.BankName=BankName;\r\n      Customer.setBankBranch=BankBranch;\r\n      Customer.Company = Company;\r\n      localStorage.setItem(\"Customer_LoginData\", JSON.stringify(Customer));\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [OldAvatar, setOldAvatar] = useState(\"/assets/img/noimage.jpg\");\r\n  const [ShowChooseAvatar, setShowChooseAvatar] = useState(\"\");\r\n  const [ShowSaveAvatar, setShowSaveAvatar] = useState(\"display-none\");\r\n\r\n  const onCancelChangeAvatar = (event) => {\r\n    setShowChooseAvatar(\"\");\r\n    setShowSaveAvatar(\"display-none\");\r\n    setAvatar(OldAvatar);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    setFileUpload(event.target.files[0]);\r\n    setShowChooseAvatar(\"display-none\");\r\n    setShowSaveAvatar(\"\");\r\n    setOldAvatar(Avatar);\r\n    setAvatar(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"CustomerID\", CustomerID);\r\n    formData.append(\"AppAPIKey\", APIKey);\r\n    formData.append(\"TokenDevice\", \"website\");\r\n    formData.append(\"Avatar\", \"\");\r\n    formData.append(\"myFile\", FileUpload, FileUpload.name);\r\n\r\n    const data = await CustomerAction.APIC_spCustomerChangeAvatar(\r\n      formData,\r\n      dispatch\r\n    );\r\n    debugger\r\n    if (data.resultCode === 0) {\r\n      setAvatar(\"https://erp.vps.vn\" + data.localMessage);\r\n      setShowChooseAvatar(\"\");\r\n      setShowSaveAvatar(\"display-none\");\r\n    }\r\n    let objCustomer = Customer;\r\n    objCustomer.Avatar=\"https://erp.vps.vn\" + data.localMessage;\r\n    localStorage.setItem(\"Customer_LoginData\",JSON.stringify(objCustomer));\r\n    setCustomer(objCustomer);\r\n    Alertsuccess(\"Cập nhật ảnh đại diện thành công !\");\r\n  };\r\n  \r\n  const responseFacebook = (response) => {\r\n    console.log(response);\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    let pr = {\r\n      CustomerId:Customer.CustomerID,\r\n      GoogleId: response.profileObj.googleId,\r\n      SocialLoginObj: response.profileObj\r\n    }\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: JSON.stringify(pr),\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    if (list.length > 0) {\r\n      let _customer = list[0];\r\n      let objCustomer = {\r\n        CustomerID: _customer.CustomerID,\r\n        CustomerCode: _customer.CustomerCode,\r\n        CustomerName: _customer.CustomerName,\r\n        Phone: _customer.Phone,\r\n        Email: _customer.Email,\r\n        Address: _customer.Address,\r\n        Company: _customer.CustomerCompany,\r\n        City: _customer.City,\r\n        District: _customer.District,\r\n        Ward: _customer.Ward,\r\n        CityName: _customer.CityName,\r\n        DistrictName: _customer.DistrictName,\r\n        WardName: _customer.WardName,\r\n        Verification: _customer.Verification,\r\n        CustomerGroupId: _customer.CustomerGroupId,\r\n        PostOfficeId: _customer.PostOfficeId,\r\n        Officer_ServiceId: _customer.Officer_ServiceId,\r\n        GroupId: _customer.CustomerGroupId,\r\n        LinkAvatar: _customer.LinkAvatar,\r\n        TypeCustomer: _customer.Type,\r\n        GoogleId:_customer.GoogleId,\r\n        FacebookId:_customer.FacebookId\r\n      };\r\n      localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n      setCustomer(objCustomer);\r\n      Alertsuccess(\"Liên kết tài khoản với Google thành công !\");\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i className=\"material-icons\">bubble_chart</i> THÔNG TIN TÀI KHOẢN</div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <img src={Avatar} className=\"avatarCustomer\" />\r\n              </div>\r\n              <div\r\n                className={\r\n                  ShowChooseAvatar + \" col-md-12 text-center\"\r\n                }\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"fileUpload\"\r\n                  onChange={onFileChange}\r\n                  accept=\"image/*\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-sm\"\r\n                  disabled={disable}\r\n                >\r\n                  <i className=\"material-icons\">camera</i> ĐỔI ẢNH ĐẠI\r\n                            DIỆN\r\n                          </button>\r\n              </div>\r\n              <div\r\n                className={ShowSaveAvatar + \" col-md-12 text-center\"}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger btn-sm width150\"\r\n                  disabled={disable}\r\n                  onClick={onFileUpload}\r\n                >\r\n                  <i className=\"material-icons\">save</i> cập nhật\r\n                          </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default btn-sm width150\"\r\n                  disabled={disable}\r\n                  onClick={onCancelChangeAvatar}\r\n                >\r\n                  <i className=\"material-icons\">undo</i> Hủy\r\n                          </button>\r\n              </div>\r\n              <div className=\"col-md-12 text-center\">\r\n                <FacebookLogin\r\n                  appId={FACEBOOK_LOGIN_APPID}\r\n                  textButton=\"Kết nối với Facebook\"\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  cssClass=\"btn btn-info btnFacebook\"\r\n                />\r\n                <br />\r\n                {Customer.GoogleId===undefined || Customer.GoogleId===\"\"?(\r\n                  <GoogleLogin\r\n                  clientId={GOOGLE_LOGIN_CLIENTID}\r\n                  buttonText=\"Kết nối tài khoản với Google\"\r\n                  onSuccess={responseGoogle}\r\n                  icon=\"fa-google\"\r\n                  cssClass=\"btn btn-success btnGoogle\"\r\n                />\r\n                ):(<></>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 mt25\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Họ tên <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={CustomerNameRef}\r\n                    value={CustomerName}\r\n                    {...bindCustomerName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Số điện thoại <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={PhoneRef}\r\n                    value={Phone}\r\n                    {...bindPhone}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Email <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    ref={EmailRef}\r\n                    value={Email}\r\n                    {...bindEmail}\r\n                    value={Email}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Công ty</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={CompanyRef}\r\n                    value={Company}\r\n                    {...bindCompany}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Địa chỉ <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={AddressRef}\r\n                    value={Address}\r\n                    {...bindAddress}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>STK ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={BankNumberRef}\r\n                    value={BankNumber}\r\n                    {...bindBankNumber}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên TK ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={BankNumberNameRef}\r\n                    value={BankNumberName}\r\n                    {...bindBankNumberName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={BankNameRef}\r\n                    value={BankName}\r\n                    {...bindBankName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên chi nhánh</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={BankBranchRef}\r\n                    value={BankBranch}\r\n                    {...bindBankBranch}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"mb0\">Tỉnh thành <span className=\"red\">(*)</span></label>\r\n                  <SelectCity\r\n                    onActive={City}\r\n                    onSelected={(item) => {\r\n                      onChooseProvince(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"mb0\">Quận/huyện <span className=\"red\">(*)</span></label>\r\n                  <SelectDistrict\r\n                    onActive={District}\r\n                    ParentID={City}\r\n                    onSelected={(item) => {\r\n                      onChooseDistrict(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"mb0\">Phường/xã <span className=\"red\">(*)</span></label>\r\n                  <SelectWard\r\n                    onActive={Ward}\r\n                    ParentID={District}\r\n                    onSelected={(item) => {\r\n                      onSelectWard(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger btn-sm pull-right\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerUpdateInfo}\r\n                >\r\n                  <i className=\"material-icons\">edit</i> CẬP NHẬT\r\n                            THÔNG TIN\r\n                          </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\RegisterComponent.js",["1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398"],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\ResetPasswordComponent.js",["1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Select from \"react-select\";\r\nimport { SelectCity, FormSearch } from \"../../Common\";\r\nimport { Alertsuccess, Alerterror, PaginationTable, Alertwarning } from \"../../Utils\";\r\nimport Script from \"react-load-script\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { EncodeString, DecodeString } from \"../../Utils\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n\r\nexport const ResetPasswordComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, bindEmail, setEmail] = useInput(\"\");\r\n  const EmailRef = useRef();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [PasswordConfirm, bindPasswordConfirm, setPasswordConfirm] = useInput(\"\");\r\n  const PasswordConfirmRef = useRef();\r\n\r\n  const [Message, setMessage] = useState(\"\");\r\n  const [KeyChangePass, setKeyChangePass] = useState(\"\");\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n  const [PassConfirmHide, setPassConfirmHide] = useState(\"password\");\r\n  const [PassConfirmEye, setPassConfirmEye] = useState(\"\");\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    APIC_CustomerCheckResetPass();\r\n  }, []);\r\n\r\n  const APIC_CustomerCheckResetPass = async () => {\r\n    setDisable(false);\r\n\r\n    let sPageURL = window.location.href;\r\n    let _key = sPageURL.split(\"key=\");\r\n    setKeyChangePass(_key[1]);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      Key: _key[1],\r\n    };\r\n    const data = await CustomerAction.APIC_CustomerCheckResetPass(\r\n      params,\r\n      dispatch\r\n    );\r\n    if (data.resultCode !== 0) {\r\n      setMessage(data.localMessage);\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerResetPass = async () => {\r\n    debugger\r\n    setDisable(false);\r\n    if(Password !== PasswordConfirm){\r\n      Alertwarning(\"Mật khẩu mới và mật khẩu xác nhận không trùng nhau. Vui lòng kiểm tra lại\");\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      Key: KeyChangePass,\r\n      Password: Password,\r\n    };\r\n    if(KeyChangePass!==''){\r\n      const data = await CustomerAction.APIC_spCustomerResetPass(\r\n        params,\r\n        dispatch\r\n      );\r\n      if (data.resultCode === 0 && data.data !== \"[]\") {\r\n        Alertsuccess(\"Đổi mật khẩu thành công!\");\r\n        localStorage.setItem(\"Customer_LoginData\", \"\");\r\n        history.push(\"/login\");\r\n      }\r\n      else\r\n      Alerterror(data.localMessage);\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Img\r\n              src=\"../../assets/img/LogoNetco.png\"\r\n              className=\"logocustom\"\r\n              width=\"200\"\r\n              className=\"margin-left-5\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold text-center\">\r\n              YÊU CẦU THAY ĐỔI <span className=\"red\">MẬT KHẨU</span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <form method=\"#\" action=\"#\">\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\">Mật khẩu mới <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-8\">\r\n                  <div className=\"input-group\">\r\n                    <input type={PassHide} className=\"form-control\"\r\n                    ref={PasswordRef}\r\n                    value={Password}\r\n                    {...bindPassword}\r\n                    />\r\n                    <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  Nhập lại mật khẩu <span className=\"red\">(*)</span>\r\n                </label>\r\n                <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                  <input className=\"form-control\" type={PassConfirmHide}\r\n                  ref={PasswordConfirmRef}\r\n                  value={PasswordConfirm}\r\n                  {...bindPasswordConfirm}\r\n                   />\r\n                   <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassConfirmEye} onClick={(e) => { setPassConfirmHide(PassConfirmEye === \"\" ? \"text\" : \"password\"); setPassConfirmEye(PassConfirmEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n              </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fill login-button\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerResetPass}\r\n                >\r\n                  đổi mật khẩu<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                  {Message + \" \"}\r\n                  <Link className=\"green italic\" to=\"/forgot\">\r\n                    Gửi lại yêu cầu đổi mật khẩu\r\n                  </Link>\r\n                </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\VerificationComponent.js",["1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Select from \"react-select\";\r\nimport { SelectCity, FormSearch } from \"../../Common\";\r\nimport { Alertsuccess, Alerterror, PaginationTable } from \"../../Utils\";\r\nimport Script from \"react-load-script\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { EncodeString, DecodeString } from \"../../Utils\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n\r\nexport const VerificationComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [Phone, setPhone] = useState(Customer.Phone);\r\n  const [SMSOTP, bindSMSOTP, setSMSOTP] = useInput(\"\");\r\n  const SMSOTPRef = useRef();\r\n\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const APIC_SendSMSOTP = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await CustomerAction.APIC_SendSMSOTP(params, dispatch);\r\n    if (data.message === \"Success\") Alertsuccess(data.localMessage);\r\n    else Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerVerification = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      SMSOTP: SMSOTP,\r\n    };\r\n    debugger;\r\n    if (SMSOTP === \"\") {\r\n      Alerterror(\"Nhập mã xác thực !\");\r\n      return;\r\n    } else {\r\n      const data = await CustomerAction.APIC_spCustomerVerification(\r\n        params,\r\n        dispatch\r\n      );\r\n      if (data.resultCode === 0) {\r\n        Alertsuccess(\"Xác thực thành công\");\r\n        Customer.Vertification = 1;\r\n        localStorage.setItem(\"Customer_LoginData\", JSON.parse(Customer));\r\n        history.push(\"/tao-nhanh-van-don\");\r\n      } else {\r\n        Alerterror(data.localMessage);\r\n      }\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i className=\"material-icons\">bubble_chart</i> XÁC THỰC TÀI KHOẢN</div>\r\n          <div className=\"col-md-12 mt10\">\r\n            <form method=\"#\" action=\"#\">\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4\" style={{marginTop:\"-10px\"}}>Số điện thoại <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-6\">\r\n                  <div class=\"input-group\">\r\n                    <input\r\n                      type=\"phone\"\r\n                      className=\"form-control\"\r\n                      value={Phone}\r\n                      readOnly=\"true\"\r\n                      aria-label=\"Small\"\r\n                      aria-describedby=\"inputGroup-sizing-sm\"\r\n                    />\r\n                    <div class=\"input-group-append\">\r\n                      <button\r\n                        id=\"inputGroup-sizing-sm\"\r\n                        type=\"button\"\r\n                        className=\"btn btn-warning btn-sm input-group-button\"\r\n                        disabled={disable}\r\n                        onClick={APIC_SendSMSOTP}\r\n                        style={{height:\"35px\", marginTop:\"0\"}}\r\n                      >\r\n                        Gửi mã xác thực\r\n                            <div className=\"ripple-container\"></div>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\" style={{marginTop:\"-10px\"}}>Nhập mã xác thực <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-6\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    ref={SMSOTPRef}\r\n                    value={SMSOTP}\r\n                    {...bindSMSOTP}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerVerification}\r\n                >\r\n                  Xác nhận<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingExcelComponent.js",["1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  Alertwarning,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatMoney,\r\n  ExportExcel,\r\n} from \"../../Utils\";\r\nimport XLSX from \"xlsx\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\nexport const LadingExcelComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n  const history = useHistory();\r\n\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowForm, setShowForm] = useState(\"\");\r\n  const [FileUpload, setFileUpload] = useState({ file: {} });\r\n  const [UploadError, setUploadError] = useState(\"\");\r\n  const [LadingList, setLadingList] = useState([]);\r\n\r\n  const [ShowUploadFile, setShowUploadFile] = useState(\"\");\r\n  const [ShowListFile, setShowListFile] = useState(\"display-none\");\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const onFileChange = (event) => {\r\n    if (event.target.files !== null) {\r\n      setFileUpload({ file: event.target.files[0] });\r\n      setShowUploadFile(\"display-none\");\r\n      setShowListFile(\"\");\r\n    }\r\n  };\r\n\r\n  //#region COPY FORM UPLOAD EXCEL FROM CPN\r\n  let BreakException = {};\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = async () => {\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: true }, dispatch);\r\n\r\n    if (FileUpload.file.name === undefined) {\r\n      Alertwarning(\"Vui lòng chọn file\");\r\n      return;\r\n    } else {\r\n      const reader = new FileReader();\r\n      const rABS = !!reader.readAsBinaryString;\r\n      reader.onload = (e) => {\r\n        /* Parse data */\r\n        const bstr = e.target.result;\r\n        const wb = XLSX.read(bstr, {\r\n          type: rABS ? \"binary\" : \"array\",\r\n          bookVBA: true,\r\n        });\r\n        /* Get first worksheet */\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n        let ListArr = [];\r\n        let tmp = new Object();\r\n        try {\r\n          let _rowIndex = 1;\r\n          data.forEach((element, index) => {\r\n            if (index >= 2) {\r\n              if (\r\n                element.__EMPTY_2 === undefined ||\r\n                element.__EMPTY_2.trim() === \"\"\r\n              ) {\r\n                throw BreakException;\r\n              } else {\r\n                tmp = {\r\n                  STT: _rowIndex,\r\n                  Code: \"D\", // Mã vận đơn\r\n                  PartnerCode: element.__EMPTY, // Mã đối tác\r\n                  CustomerCode: Customer.CustomerCode, // Mã khách hàng\r\n                  RecipientAddress: element.__EMPTY_1, // Địa chỉ\r\n                  CityRecipientNameTo: element.__EMPTY_2, // Tên tỉnh đến\r\n                  DistrictNameTo: element.__EMPTY_3, // Tên huyện đến\r\n                  WardsNameTo: element.__EMPTY_4, // Tên phường xã đến\r\n                  RecipientName: element.__EMPTY_5, // Tên người nhận\r\n                  RecipientPhone: element.__EMPTY_6, // SĐT NG nhận\r\n                  RecipientCompany: element.__EMPTY_7, // Cty Người nhận\r\n                  ServiceCode: element.__EMPTY_8, // Mã dịch vụ\r\n                  PaymentType: element.__EMPTY_9, // Hình thức thanh toán\r\n                  Weight: element.__EMPTY_10, // Trọng lượng\r\n                  Number: element.__EMPTY_11, // Số kiện\r\n                  Mass: element.__EMPTY_12, // Số khối\r\n                  Length: element.__EMPTY_13, // Dài\r\n                  Width: element.__EMPTY_14, // Rộng\r\n                  Height: element.__EMPTY_15, // Cao\r\n                  THBB: element.__EMPTY_16, // THBB\r\n                  BP: element.__EMPTY_17, // BP\r\n                  Pack: element.__EMPTY_18, // Đóng gói\r\n                  HD: element.__EMPTY_19, // Số lượng hóa đơn\r\n                  COD: element.__EMPTY_20, // Tiền COD\r\n                  HHKG: element.__EMPTY_21, // Tiền HHKG\r\n                  NPDK: element.__EMPTY_22, // Số lượng nhập phát đồng kiểm\r\n                  PTT: element.__EMPTY_23, // Phát tận tay\r\n                  HQK: element.__EMPTY_24, // Hàng quá khổ\r\n                  PST: element.__EMPTY_25, // Phát siêu thị\r\n                  PDPQ: element.__EMPTY_26, // Phát đảo phú quốc\r\n                  OnSiteDeliveryPrice: element.__EMPTY_27, // phần trăm phát tận nơi\r\n                  Discount: 0, // phần trăm giảm giá\r\n                  CustomerName_Reality: element.__EMPTY_28, // Tên người gửi thực tế\r\n                  CustomerAddress_Reality: element.__EMPTY_29, // Đ/C người gửi thực tế\r\n                  CustomerPhone_Reality: element.__EMPTY_30, // SĐT người gửi thực tế\r\n                  ProductName: element.__EMPTY_31, // Tên sản phẩm\r\n                  ProductCode: element.__EMPTY_32, // Mã sản phẩm\r\n                  ProductDescription: element.__EMPTY_33, // Mổ tả sản phẩm\r\n                  Quanlity: element.__EMPTY_34, // Số lượng sản phẩm\r\n                  Description: element.__EMPTY_35, // Nội dung\r\n                  Noted: element.__EMPTY_36, // Ghi chú\r\n                  TypeLading: 10,\r\n                };\r\n                _rowIndex++;\r\n                ListArr.push(tmp);\r\n              }\r\n            }\r\n          });\r\n        } catch (e) { }\r\n        if (ListArr === []) {\r\n          Alertwarning(\"File không có dữ liệu !\");\r\n          return;\r\n        } else {\r\n          //debugger\r\n          CPN_spLading_CreateCode(ListArr);\r\n        }\r\n      };\r\n      if (rABS) {\r\n        reader.readAsBinaryString(FileUpload.file);\r\n      } else {\r\n        reader.readAsArrayBuffer(FileUpload.file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const CPN_spLading_CreateCode = async (obj) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      json: JSON.stringify(obj),\r\n      func: \"CPN_spLading_CreateCode\",\r\n    };\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    if (result[0].ListJsonOke === \"{}\") {\r\n      setDisable(true);\r\n    } else {\r\n      CPN_spLading_Upload_Excel(result[0].ListJsonOke);\r\n    }\r\n\r\n    if (result[0].ListJsonNotOke != \"{}\") {\r\n      ExportExcel(JSON.parse(result[0].ListJsonNotOke), \"Vận đơn không hợp lệ\");\r\n    }\r\n  };\r\n\r\n  const [TotalBill, setTotalBill] = useState(0);\r\n  const CPN_spLading_Upload_Excel = async (obj) => {\r\n    console.log(obj);\r\n    const params = {\r\n      API_key: APIKey,\r\n      json: obj,\r\n      func: \"CPN_spLading_Upload_Excel\",\r\n    };\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    setTotalBill(result.length);\r\n    setLadingList(result);\r\n    setShowList(\"\");\r\n    setShowForm(\"display-none\");\r\n    setDisable(true);\r\n    if (result.length === 0) {\r\n      Alertwarning(\"File không có dữ liệu !\");\r\n    }\r\n  };\r\n  //#endregion COPY FORM UPLOAD EXCEL FROM CPN\r\n\r\n  const onCancelSave = () => {\r\n    setLadingList([]);\r\n    setShowList(\"display-none\");\r\n    setShowUploadFile(\"\");\r\n    setShowListFile(\"display-none\");\r\n    setShowForm(\"\");\r\n    setFileUpload({ file: {} });\r\n    setUploadError(\"\");\r\n  };\r\n\r\n  //#region Lưu vân đơn\r\n  const CPN_spLading_Save = async () => {\r\n    const params = {\r\n      Json: JSON.stringify(LadingList),\r\n      func: \"CPN_spLading_Save\",\r\n    };\r\n    try {\r\n      setDisable(true); // disable button\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      setDisable(false); // disable button\r\n      Alertsuccess(result.Status);\r\n      setShowList(\"display-none\");\r\n      setShowForm(\"\");\r\n      setShowUploadFile(\"\");\r\n      setShowListFile(\"display-none\");\r\n\r\n      //Gọi send notify\r\n      const NotifiParam = {\r\n        Json: JSON.stringify({\r\n          CustomerId: parseInt(CustomerID),\r\n          FuncSend: \"LadingCreate\",\r\n          SendFrom: \"WEB CUSTOMER EXCEL\",\r\n          JsonData: [\r\n            {\r\n              LadingCode: \"\",\r\n              TotalLading: result.TotalLading,\r\n            },\r\n          ],\r\n        }),\r\n        func: \"APIC_spSendNotification\",\r\n        API_key: APIKey,\r\n      };\r\n      const resultNotify = await mainAction.API_spCallServer(\r\n        NotifiParam,\r\n        dispatch\r\n      );\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceCode\",\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} g</span>,\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Khối lượng\",\r\n      accessor: \"Mass\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} cbm</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước trắng\",\r\n      accessor: \"PriceMain\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Báo phát\",\r\n      accessor: \"DeliveryMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước đóng gói\",\r\n      accessor: \"PackPrice\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"HHKG\",\r\n      accessor: \"Insured\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước HHKG\",\r\n      accessor: \"InsuredMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"COD\",\r\n      accessor: \"COD\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước COD\",\r\n      accessor: \"CODMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Nội dung hàng hóa\",\r\n      accessor: \"Description\",\r\n    },\r\n    {\r\n      Header: \"Ghi chú\",\r\n      accessor: \"Noted\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">\r\n            <i className=\"material-icons\">bubble_chart</i> UPLOAD EXCEL ĐƠN HÀNG\r\n            </div>\r\n          <div className=\"col-md-4\">\r\n\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className={ShowUploadFile + \" input-group no-border\"}>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                onChange={onFileChange}\r\n                onClick={(e) => {\r\n                  e.target.value = null;\r\n                }}\r\n                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                placeholder=\"Chọn file tải lên (Mauvandonexcel2021.xlsx)\"\r\n              />\r\n              {/* <div className=\"input-group-append\">\r\n                <button type=\"button\" class=\"btn btn-default input-group-button btn-sm\" onClick={onFileUpload} style={{ height: \"36px\", marginTop: \"0\" }}>\r\n                  <i class=\"fa fa-upload\"></i> Đẩy dữ liệu\r\n              </button> \r\n              </div>*/}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\"></div>\r\n          <div className=\"col-md-4\"></div>\r\n          <div className={ShowListFile + \" col-md-4\"}>\r\n            <div\r\n              className={\r\n                FileUpload.file !== {}\r\n                  ? \"fileNameUpload\"\r\n                  : \"fileNameUpload display-none\"\r\n              }\r\n            >\r\n              <span className=\"fileNameUpload\">\r\n                {FileUpload.file !== {} && FileUpload.file !== []\r\n                  ? FileUpload.file.name\r\n                  : \"\"}\r\n              </span>\r\n              <i\r\n                className=\"material-icons pull-right pointer\"\r\n                title=\"Xóa file\"\r\n                onClick={(e) => {\r\n                  setFileUpload({ file: {} });\r\n                  setShowUploadFile(\"\");\r\n                  setShowListFile(\"display-none\");\r\n                  setUploadError(\"\");\r\n                }}\r\n              >\r\n                delete\r\n                        </i>\r\n              <span className=\"pull-right\">\r\n                {\"(\" +\r\n                  (FileUpload.file.size / 1024).toFixed(2) +\r\n                  \"KB)\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm\"\r\n                onClick={onFileUpload}\r\n              >\r\n                <i className=\"material-icons\">cloud_upload</i> Đẩy dữ liệu\r\n                        </button>\r\n            </div>\r\n            <div className=\"errorUpload\">{UploadError}</div>\r\n          </div>\r\n          <div className=\"col-md-4\"></div>\r\n          <div className=\"col-md-12 text-center mt10\"><span className=\"red bold\">Vui lòng tải file mẫu tại đây: </span>\r\n            <Link\r\n              className=\"btn btn-sm btn-success\"\r\n              download\r\n              target=\"_blank\"\r\n              to=\"/assets/exceltemp/MauVanDonExcel-19-04-2021.xlsx\"\r\n            >\r\n              <i className=\"material-icons\">download</i> Tải file mẫu\r\n                  </Link>\r\n          </div>\r\n          <div className={ShowList + \" col-md-12 30\"}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger pull-right btn-sm\"\r\n              disabled={!disable}\r\n              onClick={CPN_spLading_Save}\r\n            >\r\n              <i className=\"material-icons\">check</i> Tạo đơn\r\n                    </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-default pull-right btn-sm\"\r\n              disabled={!disable}\r\n              onClick={onCancelSave}\r\n            >\r\n              <i className=\"material-icons\">undo</i> Hủy\r\n                    </button>\r\n          </div>\r\n          <div className={ShowList + \" col-md-12 30\"}>\r\n            <DataTable data={LadingList} columns={columns} />\r\n          </div>\r\n          {/* <div className={ShowList + \" col-md-12 mt30\"}>\r\n         <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <div className=\"pull-left\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> Upload excel\r\n                    vận đơn\r\n                  </h4>\r\n                </div>\r\n                <div className=\"pull-right\">\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"text-center red\">\r\n                  Kể từ <b>16h ngày 19/04/2021</b>, NETCO sử dụng file mẫu\r\n                  upload vận đơn mới. <b>Vui lòng tải file mẫu</b> để sử dụng\r\n                  chức năng này ! <br />\r\n                  Nếu đã sử dụng file mẫu mới, vui lòng bỏ qua thông báo này !\r\n                </div>\r\n                <form className=\"form-horizontal\">\r\n                  <div className={ShowForm + \" row\"}>\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className={ShowUploadFile + \" col-md-6\"}>\r\n                      <div className=\"uploadFileContainer text-center\">\r\n                        <span>\r\n                          <i className=\"material-icons size40\">cloud_upload</i>\r\n                        </span>\r\n                        <span>Upload a File</span>\r\n                        <span className=\"font-normal\">Choose a file</span>\r\n                        <input\r\n                          type=\"file\"\r\n                          className=\"fileUploadHidden\"\r\n                          onChange={onFileChange}\r\n                          onClick={(e) => {\r\n                            e.target.value = null;\r\n                          }}\r\n                          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className={ShowListFile + \" col-md-6\"}>\r\n                      <div\r\n                        className={\r\n                          FileUpload.file !== {}\r\n                            ? \"fileNameUpload\"\r\n                            : \"fileNameUpload display-none\"\r\n                        }\r\n                      >\r\n                        <span className=\"fileNameUpload\">\r\n                          {FileUpload.file !== {} && FileUpload.file !== []\r\n                            ? FileUpload.file.name\r\n                            : \"\"}\r\n                        </span>\r\n                        <i\r\n                          className=\"material-icons pull-right pointer\"\r\n                          title=\"Xóa file\"\r\n                          onClick={(e) => {\r\n                            setFileUpload({ file: {} });\r\n                            setShowUploadFile(\"\");\r\n                            setShowListFile(\"display-none\");\r\n                            setUploadError(\"\");\r\n                          }}\r\n                        >\r\n                          delete\r\n                        </i>\r\n                        <span className=\"pull-right\">\r\n                          {\"(\" +\r\n                            (FileUpload.file.size / 1024).toFixed(2) +\r\n                            \"KB)\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          disabled={!disable}\r\n                          onClick={onFileUpload}\r\n                        >\r\n                          <i className=\"material-icons\">cloud_upload</i> TẢI LÊN\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"errorUpload\">{UploadError}</div>\r\n                    </div>\r\n                    <div className=\"col-md-3\"></div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n                <div className={ShowList + \" row\"}>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger pull-right\"\r\n                      disabled={!disable}\r\n                      onClick={CPN_spLading_Save}\r\n                    >\r\n                      <i className=\"material-icons\">check</i> Xác nhận\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-default pull-right\"\r\n                      disabled={!disable}\r\n                      onClick={onCancelSave}\r\n                    >\r\n                      <i className=\"material-icons\">undo</i> Hủy\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-md-12 mt30\">\r\n                    <DataTable data={LadingList} columns={columns} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LadingGetPriceComponent.js",["1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard, Avarta } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  GetCookieValue,\r\n} from \"../../Utils\";\r\n\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Location, Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n//import { format } from 'date-fns'\r\n\r\n/* Load CSS */\r\nexport const LadingGetPriceComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [Prices, setPrices] = useState([]);\r\n  const [IsShowList, setIsShowList] = useState(\"display-none\");\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(Customer.CustomerID);\r\n\r\n  const [CityFromMeno, setCityFromMeno] = useState(0);\r\n  const [DistrictFromMeno, setDistrictFromMeno] = useState(0);\r\n  const [CityFromMenoName, setCityFromMenoName] = useState(\"\");\r\n  const [DistrictFromMenoName, setDistrictFromMenoName] = useState(\"\");\r\n\r\n  const [CityMeno, setCityMeno] = useState(0);\r\n  const [DistrictMeno, setDistrictMeno] = useState(0);\r\n  const [WardMeno, setWardMeno] = useState(0);\r\n  const [CityMenoName, setCityMenoName] = useState(\"\");\r\n  const [DistrictMenoName, setDistrictMenoName] = useState(\"\");\r\n  const [WardMenoName, setWardMenoName] = useState(\"\");\r\n\r\n  const [Weight, bindWeight, setWeight] = useInput(\"\");\r\n  const WeightRef = useRef();\r\n\r\n  const [COD, bindCOD, setCOD] = useInput(0);\r\n  const CODRef = useRef();\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer ==={})\r\n      history.push(\"/login\");\r\n  }, []);\r\n\r\n  const onChooseProvinceFrom = (item) => {\r\n    setCityFromMeno(item.value);\r\n    setCityFromMenoName(item.label);\r\n    setDistrictFromMeno(0);\r\n    setDistrictFromMenoName(\"\");\r\n  };\r\n\r\n  const onChooseDistrictFrom = (item) => {\r\n    setDistrictFromMeno(item.value);\r\n    setDistrictFromMenoName(item.label);\r\n  };\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCityMeno(item.value);\r\n    setCityMenoName(item.label);\r\n    setDistrictMeno(0);\r\n    setDistrictMenoName(\"\");\r\n    setWardMeno(0);\r\n    setWardMenoName(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrictMeno(item.value);\r\n    setDistrictMenoName(item.label);\r\n    setWardMeno(0);\r\n    setWardMenoName(\"\");\r\n  };\r\n\r\n  const onChooseWard = (item) => {\r\n    setWardMeno(item.value);\r\n    setWardMenoName(item.label);\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n  const ClearForm = () => {\r\n    setCityFromMeno(0);\r\n    setDistrictFromMeno(0);\r\n    setCityMeno(0);\r\n    setDistrictMeno(0);\r\n    setWardMeno(0);\r\n    setWeight(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const APIC_spLadingGetPriceMany = async () => {\r\n    //ScrollTop();\r\n    if (CityFromMeno === 0 || CityFromMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành gửi\");\r\n      return;\r\n    } else if (\r\n      DistrictFromMeno === 0 ||\r\n      DistrictFromMeno === undefined\r\n    ) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện gửi\");\r\n      return;\r\n    } else if (Weight === \"\") {\r\n      Alerterror(\"Vui lòng nhập trọng lượng\");\r\n      return;\r\n    } else if (CityMeno === 0 || CityMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành nhận\");\r\n      return;\r\n    } else if (DistrictMeno === 0 || DistrictMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện nhận\");\r\n      return;\r\n    } else if (WardMeno === 0 || WardMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Phường xã nhận\");\r\n      return;\r\n    }\r\n    setDisable(false);\r\n    let pr = {\r\n      //AppAPIKey: APIKey,\r\n      CustomerId: Customer.CustomerID,\r\n      CityGoId: CityFromMeno,\r\n      CityToId: CityMeno,\r\n      DistrictTo: DistrictMeno,\r\n      WardToId: WardMeno,\r\n      Weight: parseFloat(Weight),\r\n      PostOffice_Id: Customer.PostOfficeId,\r\n    };\r\n    const params = {\r\n      API_key: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLading_EstimatesPrice\",\r\n    };\r\n    try {\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      //const data = await Lading.APIC_spLadingGetPriceMany(params, dispatch);\r\n      setPrices(data);\r\n      //ClearForm();\r\n      //Alertsuccess(data.localMessage);\r\n      setIsShowList(\"\");\r\n      setDisable(false); // disable button\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  const GotoCreate = (_Service) => {\r\n    let draff = {\r\n      ServiceID: _Service.ServiceID,\r\n      ServiceName: _Service.ServiceName,\r\n      Weight: Weight,\r\n      CityFrom: CityFromMeno,\r\n      CityFromName: CityFromMenoName,\r\n      DistrictFrom: DistrictFromMeno,\r\n      DistrictFromName: DistrictFromMenoName,\r\n      CityTo: CityMeno,\r\n      CityToName: CityMenoName,\r\n      DistrictTo: DistrictMeno,\r\n      DistrictToName: DistrictMenoName,\r\n      WardTo: WardMeno,\r\n      WardToName: WardMenoName\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draff));\r\n    history.push(\"tao-nhanh-van-don\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\">\r\n            <i className=\"fa fa-list\"></i> ƯỚC TÍNH CƯỚC PHÍ\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"panel panel-default\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-info-circle\"></i> THÔNG TIN GỬI\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Tỉnh thành <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <SelectCity\r\n                      onActive={CityFromMeno}\r\n                      onSelected={(item) => {\r\n                        onChooseProvinceFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Quận/huyện <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <SelectDistrict\r\n                      onActive={DistrictFromMeno}\r\n                      ParentID={CityFromMeno}\r\n                      onSelected={(item) => {\r\n                        onChooseDistrictFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Trọng lượng <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <div className=\"input-group mb-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        ref={WeightRef}\r\n                        value={Weight}\r\n                        {...bindWeight}\r\n                      />\r\n                      <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">gram</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"panel panel-default\">\r\n              <div className=\"panel-heading\">\r\n                <i className=\"fa fa-info-circle\"></i> THÔNG TIN NHẬN\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Tỉnh thành <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <SelectCity\r\n                      onActive={CityMeno}\r\n                      onSelected={(item) => {\r\n                        onChooseProvince(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Quận/huyện <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <SelectDistrict\r\n                      onActive={DistrictMeno}\r\n                      ParentID={CityMeno}\r\n                      onSelected={(item) => {\r\n                        onChooseDistrict(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb5\">\r\n                  <label className=\"col-md-3 mt10\">\r\n                    Phường/xã <span className=\"red\">(*)</span>\r\n                  </label>\r\n                  <div className=\"col-md-9\">\r\n                    <SelectWard\r\n                      onActive={WardMeno}\r\n                      ParentID={DistrictMeno}\r\n                      onSelected={(item) => {\r\n                        onChooseWard(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 text-center mb10\">\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-default\"\r\n              onClick={ClearForm}\r\n            >\r\n              <i className=\"material-icons\">undo</i> Hủy\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              disabled={disable}\r\n              onClick={APIC_spLadingGetPriceMany}\r\n            >\r\n              <i className=\"material-icons\">search</i> TRA CỨU CƯỚC PHÍ\r\n            </button>\r\n          </div>\r\n          <div className={IsShowList + \"col-md-12\"}>\r\n            <div className=\"row\">\r\n              {/* <div className=\"col-md-12 main-title\">THÔNG TIN CƯỚC PHÍ</div> */}\r\n              {Prices.map((item, index) => {\r\n                return (\r\n                  <div className=\"col-md-6 table-border\">\r\n                    <table cellSpacing=\"5\" cellPadding=\"10\">\r\n                      <tr>\r\n                        <td className=\"bold\">{item.ServiceName}</td>\r\n                        <td className=\"text-right\">\r\n                          {/* <Link\r\n                                  to=\"/tao-nhanh-van-don\"\r\n                                  className=\"btn btn-success pull-right\"\r\n                                >\r\n                                  <i className=\"material-icons\">widgets</i> Tạo\r\n                                  đơn hàng\r\n                                </Link> */}\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={(e) => GotoCreate(item)}\r\n                            className=\"btn btn-success pull-right\"\r\n                          >\r\n                            <i className=\"material-icons\">widgets</i> Tạo đơn\r\n                            hàng\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Cước chính</td>\r\n                        <td className=\"text-right\">\r\n                          {/* undefined, {maximumFractionDigits:0} */}\r\n                          {item.Amount !== null\r\n                            ? FormatMoney(item.Amount) + \"đ\"\r\n                            : \"0đ\"}\r\n                        </td>\r\n                      </tr>\r\n                      {/*  <tr>\r\n                              <td>Phí COD</td>\r\n                              <td className=\"text-right\">\r\n                                {item.CODMone ?? 0}\r\n                              </td>\r\n                            </tr> */}\r\n                      <tr>\r\n                        <td>Ngày giao dự kiến</td>\r\n                        <td className=\"text-right\">\r\n                          {item.DealineTime === \"/Date(-62135596800000)/\"\r\n                            ? \"N/A\"\r\n                            : FormatDateJson(item.DealineTime, \"d-k-y\") ??\r\n                            \"Liên hệ để được tư vấn\"}\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"clearfix\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\LookupLading.js",["1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488"],"import {\r\n  Alerterror,\r\n  FormatDate,\r\n  FormatMoney,\r\n} from \"../../Utils\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {LadingDetail} from \"../../Common\";\r\n\r\nexport const LookupLading = (SearchCode) => {\r\n  const dispatch = useDispatch();\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const [HistoryLading, setHistoryLading] = useState([]);\r\n  const [Images, setImages] = useState(\"/assets/img/noimage.jpg\");\r\n  const location = useLocation();\r\n\r\n  //#region\r\n\r\n  const [reasonStr, setreasonStr] = useState();\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  //const [LadingDetail, setLadingDetail] = useState({});\r\n\r\n  const [LadingCode,setLadingCode]= useState(\"\");\r\n  //#endregion\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={}) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (location.search !== \"\" && location.search.indexOf(\"code=\") !== -1) {\r\n      let _params = location.search\r\n        .replace(\"?\", \"\")\r\n        .split(\"&\")\r\n        .find((p) => p.indexOf(\"code=\") !== -1);\r\n        setLadingCode(_params.split(\"code=\")[1]);\r\n    }\r\n    //APIC_spLadingGet();\r\n  }, []);\r\n  const APIC_spLadingGet = async () => {\r\n    /* if (location.search !== \"\" && location.search.indexOf(\"code=\") !== -1) {\r\n      let _params = location.search\r\n        .replace(\"?\", \"\")\r\n        .split(\"&\")\r\n        .find((p) => p.indexOf(\"code=\") !== -1);\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n        CustomerID: Customer.CustomerID,\r\n        LadingCode: _params.split(\"code=\")[1],\r\n      };\r\n      try {\r\n        debugger\r\n        const data = await Lading.APIC_spLadingGet(params, dispatch);\r\n        setLadingDetail(JSON.parse(data.data));\r\n        console.log(\"lading detail *****************\", data);\r\n        if (data.data === \"[]\") {\r\n          setShowDetail(\"display-none\");\r\n          Alerterror(\"Không tìm thấy vận đơn này\");\r\n        } else {\r\n          const _data = JSON.parse(data.data);\r\n          if (_data.ImageDelivery !== null) setImages(_data.ImageDelivery);\r\n          setHistoryLading(JSON.parse(_data.HistoryLading));\r\n          setreasonStr(_data.ReasonName);\r\n          setShowDetail(\"\");\r\n        }\r\n      } catch (err) {\r\n        Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      }\r\n    } else {\r\n      setShowDetail(\"display-none\");\r\n      Alerterror(\"Không tìm thấy vận đơn\");\r\n    } */\r\n  };\r\n\r\n  /* const ImageList = Images.split(\";\")\r\n    .filter((p) => p !== \"\")\r\n    .map((item) => {\r\n      return item === \"/assets/img/noimage.jpg\" ? (\r\n        <img src=\"/assets/img/noimage.jpg\" height=\"200\" />\r\n      ) : (\r\n          <img\r\n            src={\"https://mediaimages.vps.vn/DeliverySignImages/\" + item}\r\n            height=\"200\"\r\n          />\r\n        );\r\n    }); */\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> TRA CỨU VẬN ĐƠN\r\n                </h4>\r\n              </div>\r\n              <LadingDetail LadingCode={LadingCode} LadingId=\"0\" />\r\n              {/* {LadingDetail === {} ? (<div>Không tìm thấy vận đơn</div>) : (\r\n                <div>\r\n                  <div className={ShowDetail + \" card-body\"}>\r\n                    <form className=\"form-horizontal row\">\r\n                      <div className=\"col-md-12 mb30\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12 borderbottom\">\r\n                            <i className=\"material-icons\">lens_blur</i> THÔNG TIN\r\n                          VẬN ĐƠN\r\n                        </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-barcode iwidth\"></i>\r\n                            <span className=\"colortext\"> Mã vận đơn: </span>\r\n                            <span className=\"code bold\">{LadingDetail.Code}</span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-flag iwidth\"></i>\r\n                            <span className=\"colortext\"> Trạng thái: </span>\r\n                            <span className=\"noted bold\">\r\n                              {LadingDetail.StatusName}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-barcode iwidth\"></i>\r\n                            <span className=\"colortext\"> Mã đối tác: </span>\r\n                            <span className=\"partner-code\">\r\n                              {LadingDetail.PartnerCode}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-clock-o iwidth\"></i>\r\n                            <span className=\"colortext\"> Thời gian tạo: </span>\r\n                            <span className=\"create-date\">\r\n                              {FormatDate(LadingDetail.CreateDate, \"d/k/y h:m b\")}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-clock-o iwidth\"></i>\r\n                            <span className=\"colortext\">\r\n                              {\" \"}\r\n                            Thời gian dự kiến giao:{\" \"}\r\n                            </span>\r\n                            <span className=\"noted\">\r\n                              {FormatDate(LadingDetail.DealineTime, \"d/k/y h:m b\")}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-briefcase iwidth\"></i>\r\n                            <span className=\"colortext\"> Dịch vụ: </span>\r\n                            <span className=\"number-item\">\r\n                              {LadingDetail.ServiceName}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-sitemap iwidth\"></i>\r\n                            <span className=\"colortext\"> Trọng lượng (gram): </span>\r\n                            <span className=\"weight\">\r\n                              {FormatMoney(LadingDetail.Weight)}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-square-o iwidth\"></i>\r\n                            <span className=\"colortext\"> Số kiện: </span>\r\n                            <span className=\"number-item\">\r\n                              {FormatMoney(LadingDetail.Number)}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-tags iwidth\"></i>\r\n                            <span className=\"colortext\"> Số khối: </span>\r\n                            <span className=\"number-item\">\r\n                              {FormatMoney(LadingDetail.Mass)}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <i class=\"fa fa-credit-card iwidth\"></i>\r\n                            <span className=\"colortext\">\r\n                              {\" \"}\r\n                            Hình thức thanh toán:{\" \"}\r\n                            </span>\r\n                            <span className=\"noted\">\r\n                              {LadingDetail.PaymentType}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <i class=\"fa fa-pencil-square iwidth\"></i>\r\n                            <span className=\"colortext\"> Nội dung: </span>\r\n                            <span className=\"noted\">\r\n                              {LadingDetail.Description}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <i class=\"fa fa-file-text iwidth\"></i>\r\n                            <span className=\"colortext\"> Ghi chú: </span>\r\n                            <span className=\"noted\">{LadingDetail.Noted}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"col-md-12 borderbottom row\">\r\n                          <i className=\"material-icons\">bubble_chart</i> THÔNG TIN\r\n                        NGƯỜI GỬI\r\n                      </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-user iwidth\"></i>\r\n                          <span className=\"colortext\">Tên khách hàng: </span>\r\n                          <span className=\"sender-name\">\r\n                            {LadingDetail.CustomerName}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-phone iwidth\"></i>\r\n                          <span className=\"colortext\">Số ĐT: </span>\r\n                          <span className=\"sender-phone\">\r\n                            {LadingDetail.CustomerPhone}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\">Tỉnh đi: </span>\r\n                          <span className=\"recipient-company\">\r\n                            {LadingDetail.CitySendCode}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Huyện đi: </span>\r\n                          <span className=\"sender-address\">\r\n                            {LadingDetail.DistrictSendName}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Địa chỉ khách hàng: </span>\r\n                          <span className=\"sender-address\">\r\n                            {LadingDetail.CustomerAddress}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-user iwidth\"></i>\r\n                          <span className=\"colortext\">Người gửi thực tế: </span>\r\n                          <span className=\"sender-name\">\r\n                            {LadingDetail.CustomerName_Reality}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-phone iwidth\"></i>\r\n                          <span className=\"colortext\">\r\n                            {\" \"}\r\n                          SĐT người gửi thực tế:{\" \"}\r\n                          </span>\r\n                          <span className=\"sender-phone\">\r\n                            {LadingDetail.CustomerPhone_Reality}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i className=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Địa chỉ gửi thực tế: </span>\r\n                          <span className=\"sender-address\">\r\n                            {LadingDetail.CustomerAddress_Reality}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"col-md-12 borderbottom row\">\r\n                          <i className=\"material-icons\">bubble_chart</i> THÔNG TIN\r\n                        NGƯỜI NHẬN\r\n                      </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-user iwidth\"></i>\r\n                          <span className=\"colortext\"> Tên người nhận: </span>\r\n                          <span className=\"recipient-name\">\r\n                            {LadingDetail.RecipientName}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-phone iwidth\"></i>\r\n                          <span className=\"colortext\"> Số điện thoại: </span>\r\n                          <span className=\"recipient-phone\">\r\n                            {LadingDetail.RecipientPhone}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-flag iwidth\"></i>\r\n                          <span className=\"colortext\"> Công ty: </span>\r\n                          <span className=\"recipient-company\">\r\n                            {LadingDetail.RecipientCompany}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Tỉnh đến: </span>\r\n                          <span className=\"recipient-company\">\r\n                            {LadingDetail.CityRecipientCode}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Huyện đến: </span>\r\n                          <span className=\"recipient-company\">\r\n                            {LadingDetail.District}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Phường xã đến: </span>\r\n                          <span className=\"recipient-company\">\r\n                            {LadingDetail.Wards}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-map-marker iwidth\"></i>\r\n                          <span className=\"colortext\"> Địa chỉ: </span>\r\n                          <span className=\"recipient-address\">\r\n                            {LadingDetail.RecipientAddress}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div className={ShowDetail + \" card-body\"}>\r\n                    <form className=\"form-horizontal row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"col-md-12 borderbottom row\">\r\n                          <i className=\"material-icons\">content_paste</i> THÔNG TIN\r\n                        ĐƠN HÀNG\r\n                      </div>\r\n                        <div className=\"extend-body\" style={{ width: \"100%\" }}>\r\n                          <table\r\n                            style={{ width: \"90%\" }}\r\n                            className=\"margin-left-20\"\r\n                          >\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext bold\"> Tổng cước:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"length bold\">\r\n                                  {FormatMoney(LadingDetail.Amount) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Cước trắng:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"length\">\r\n                                  {FormatMoney(LadingDetail.PriceMain) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Số tiền COD:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.COD) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Cước phí COD:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.CODPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Số tiền HHKG:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.Insured) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Cước phí HHKG:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.InsuredPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> PPXD:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"number-item\">\r\n                                  {FormatMoney(LadingDetail.PPXDMoney) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> VAT:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"weight\">\r\n                                  {FormatMoney(LadingDetail.VATMoney) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> BP:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.BPPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> THBB:</span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.THBBPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phí phát tận tay:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PTTPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phí hàng quá khổ:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.HQKPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phát hàng siêu thị:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PSTPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phí hàng đảo phú quốc:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PDPQPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Tổng Hóa đơn: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PercentHD)}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phí hóa đơn: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.HDPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Tổng đồng kiểm: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PercentPDK)}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phí N/P đồng kiểm:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.NPDKPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phí lắp đặt: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.LDPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phí gửi xe: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.DrPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phụ cấp: </span>{\" \"}\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"length textalign\">\r\n                                  {FormatMoney(LadingDetail.Allowance) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phụ cấp NT: </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.OnSiteDeliveryPrice) +\r\n                                    \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\"> Phụ cấp NT(%): </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(\r\n                                    LadingDetail.OnSiteDeliveryPriceMoney\r\n                                  ) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                            <tr className=\"linebottom row\">\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"colortext\">\r\n                                  {\" \"}\r\n                                Phụ cấp đóng gói:{\" \"}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"col-md-4\">\r\n                                <span className=\"noted\">\r\n                                  {FormatMoney(LadingDetail.PackPrice) + \" đ\"}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"col-md-12 borderbottom row\">\r\n                          <i className=\"material-icons\">image_aspect_ratio</i> HÌNH\r\n                        ẢNH BÁO PHÁT\r\n                      </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-user iwidth\"></i>\r\n                          <span className=\"colortext\">\r\n                            {\" \"}\r\n                          Tên người nhận thực tế:{\" \"}\r\n                          </span>\r\n                          <span className=\"code\">{LadingDetail.ReasonName}</span>\r\n                        </div>\r\n                        <div className=\"col-xs-12\">\r\n                          <i class=\"fa fa-clock-o iwidth\"></i>\r\n                          <span className=\"colortext\"> Ngày hoàn thành: </span>\r\n                          <span className=\"code\">\r\n                            {FormatDate(LadingDetail.FinishDate, \"d/k/y h:m b\")}\r\n                          </span>\r\n                        </div>\r\n                        <div\r\n                          className={\r\n                            LadingDetail.StatusName === 7\r\n                              ? \"col-xs-12\"\r\n                              : \"col-xs-12 display-none\"\r\n                          }\r\n                        >\r\n                          <i class=\"fa fa-pencil-square iwidth\"></i>\r\n                          <span className=\"colortext\"> Lý do phát lại: </span>\r\n                          <span className=\"code\">{reasonStr}</span>\r\n                        </div>\r\n                        <div\r\n                          className=\"col-xs-12\"\r\n                          style={{ textAlign: \"center\", width: \"100%\" }}\r\n                        >\r\n                          <span className=\"colortext\"> Hình ảnh báo phát </span>\r\n                          <br />\r\n                          {ImageList}\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <div className={ShowDetail + \" card-body\"}>\r\n                    <form className=\"form-horizontal row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card height730\">\r\n                          <div className=\"card-header card-header-primary\">\r\n                            <h4 className=\"card-title\">\r\n                              <i className=\"material-icons\">library_books</i> HÀNH\r\n                            TRÌNH VẬN ĐƠN\r\n                          </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"table-responsive\">\r\n                              <table id=\"dataTable\" className=\"table\">\r\n                                <thead className=\"text-primary\">\r\n                                  <tr>\r\n                                    <th>Ngày giờ</th>\r\n                                    <th>Nhân viên</th>\r\n                                    <th>SĐT</th>\r\n                                    <th>Tình trạng</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {HistoryLading.map((item, index) => {\r\n                                    return (\r\n                                      <tr key={index}>\r\n                                        <td>\r\n                                          {FormatDate(item.DateTime, \"d/k/y h:m b\")}\r\n                                        </td>\r\n                                        <td>{item.OfficerName}</td>\r\n                                        <td>{item.Mobile}</td>\r\n                                        <td>{item.StatusName}</td>\r\n                                      </tr>\r\n                                    );\r\n                                  })}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\Main\\SearchLading.js",["1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport Barcode from \"react-barcode\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport {LadingDetail} from \"../../Common\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  FormatDate,\r\n  DecodeString,\r\n  FormatMoney,\r\n  FormatNumber,\r\n  FormatDateJson,\r\n} from \"../../Utils\";\r\n\r\nexport const SearchLading = () => {\r\n  //#region Khai báo biến\r\n  const config = {\r\n    background: \"white\",\r\n    marginTop: \"1px\",\r\n    marginBottom: \"5px\",\r\n    fontOptions: \"italic\",\r\n    width: 1,\r\n    height: 40,\r\n  };\r\n  const [ModalImg, setModalImg] = useState(\"\");\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [Fromdate, setFromdate] = useState(new Date());\r\n  const [Todate, setTodate] = useState(new Date());\r\n  const [dataLading, setdataLading] = useState([]);\r\n  const [Status, setStatus] = useState(9);\r\n  const [StatusName, setStatusName] = useState(`Vận đơn mới tạo`);\r\n  const [Disable, setDisable] = useState(false);\r\n  const [Checked, setChecked] = useState(false);\r\n  const [DataPrint, setDataPrint] = useState([]);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [sheetprint, bindsheetprint, setsheetprint] = useInput(2);\r\n  const sheetprintRef = useRef();\r\n  const [State, setState] = useState([]);\r\n  const [Ladingcode, bindLadingcode, setLadingcode] = useInput(\"\");\r\n  const LadingcodeRef = useRef();\r\n  //#endregion Khai báo biến\r\n\r\n  useEffect(() => {\r\n    if (Customer === null || Customer ==={}) {\r\n      history.push(\"/login\");\r\n    }\r\n    APIC_spLadingGetMany(Status);\r\n  }, []);\r\n\r\n  //#region Form tìm kiếm vận đơn\r\n\r\n  //#region Trạng thái vận đơn\r\n  const [Status1, setStatus1] = useState(0);\r\n  const [Status2, setStatus2] = useState(0);\r\n  const [Status3, setStatus3] = useState(0);\r\n  const [Status4, setStatus4] = useState(0);\r\n  const [Status5, setStatus5] = useState(0);\r\n  const [Status6, setStatus6] = useState(0);\r\n  const [Status7, setStatus7] = useState(0);\r\n  const [Status8, setStatus8] = useState(0);\r\n  const [Status9, setStatus9] = useState(0);\r\n  const [Status50, setStatus50] = useState(0);\r\n  //#endregion Trạng thái vận đơn\r\n\r\n  const FromDate = (item) => {\r\n    setFromdate(item);\r\n  };\r\n\r\n  const ToDate = (item) => {\r\n    setTodate(item);\r\n  };\r\n\r\n  const ExportToExcel = () => {\r\n    if (dataLading.length > 0) {\r\n      let dataExcel = dataLading.map((item, index) => {\r\n        let row = new Object();\r\n        row.Ma_Van_Don = item.Code;\r\n        row.Trang_Thai = item.StatusName;\r\n        row.Trong_Luong = FormatMoney(item.Weight);\r\n        //row.SoKien = item.Number;\r\n        row.COD = FormatMoney(item.COD);\r\n        row.Tong_Cuoc_Phi = FormatMoney(item.Amount);\r\n        row.Thoi_Gian_Tao = FormatDateJson(item.CreateDate);\r\n        row.Ngay_Phat_Thanh_Cong = item.FinishDate===undefined?\"\":FormatDateJson(item.FinishDate);\r\n        row.Hinh_Thuc_Thanh_Toan = item.PaymentString;\r\n        row.Tinh_Di = item.CitySendCode;\r\n        row.Tinh_Den = item.CityRecipientCode;\r\n        row.Dich_Vu = item.ServiceName;\r\n        row.Nguoi_Nhan = item.RecipientName;\r\n        row.SDT_Nguoi_Nhan = item.RecipientPhone;\r\n        row.Cong_Ty_Nhan = item.RecipientCompany;\r\n        row.Dia_Chi_Nguoi_Nhan = item.RecipientAddress;\r\n        return row;\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách \" +\r\n        StatusName +\r\n        \" từ ngày \" +\r\n        FormatDateJson(Fromdate, 1) +\r\n        \" đến ngày \" +\r\n        FormatDateJson(Todate, 1)\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  const ExportAllToExcel = async () => {\r\n    setdataLading([]);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: Ladingcode,\r\n      FromDate: Fromdate.toISOString(),\r\n      ToDate: Todate.toISOString(),\r\n      CustomerID: Customer.CustomerID,\r\n      CustomerCode: Customer.CustomerCode,\r\n      Status: 0,\r\n      Skip: 0,\r\n      Take: 15000,\r\n    };\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spLadingGetManyJsonAuto\",\r\n      API_key: APIKey,\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger;\r\n    if (data.length > 0) {\r\n      let dataExcel = data.map((item, index) => {\r\n        let row = new Object();\r\n        row.Ma_Van_Don = item.Code;\r\n        row.Trang_Thai = item.StatusName;\r\n        row.Trong_Luong = FormatMoney(item.Weight);\r\n        //row.SoKien = item.Number;\r\n        row.COD = FormatMoney(item.COD);\r\n        row.Tong_Cuoc_Phi = FormatMoney(item.Amount);\r\n        row.Thoi_Gian_Tao = FormatDateJson(item.CreateDate);\r\n        row.Ngay_Phat_Thanh_Cong = item.FinishDate===undefined?\"\":FormatDateJson(item.FinishDate);\r\n        row.Hinh_Thuc_Thanh_Toan = item.PaymentString;\r\n        row.Tinh_Di = item.CitySendCode;\r\n        row.Tinh_Den = item.CityRecipientCode;\r\n        row.Dich_Vu = item.ServiceName;\r\n        row.Nguoi_Nhan = item.RecipientName;\r\n        row.SDT_Nguoi_Nhan = item.RecipientPhone;\r\n        row.Cong_Ty_Nhan = item.RecipientCompany;\r\n        row.Dia_Chi_Nguoi_Nhan = item.RecipientAddress;\r\n        return row;\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách vận đơn từ ngày \" +\r\n        FormatDateJson(Fromdate, 1) +\r\n        \" đến ngày \" +\r\n        FormatDateJson(Todate, 1)\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  const GoToComplain = (item) => {\r\n    window.location.href = \"/ho-tro-don-hang?code=\" + item.Code;\r\n  };\r\n\r\n  //#region HÀM XÓA VẬN ĐƠN\r\n\r\n  const APIC_spLadingRemove = async (item) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      LadingId: parseInt(item._original.Id),\r\n      CustomerId: Customer.CustomerID,\r\n      Notes: \"KHÁCH HÀNG HỦY BILL TRÊN WEBSITE CUSTOMER\",\r\n    };\r\n    try {\r\n      if (item._original.Status === 9) {\r\n      }\r\n      const data = await Lading.APIC_spLadingRemove(params, dispatch);\r\n      setdataLading(dataLading.filter((p) => p.Id !== item._original.Id));\r\n      Alertsuccess(data);\r\n      //APIC_spLadingGetMany();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM XÓA VẬN ĐƠN\r\n\r\n  const [ViewDetail, setViewDetail] = useState(null);\r\n  const [DetailId,setDetailId] = useState(0);\r\n  const GoToDetail = async (item) => {\r\n    //window.location.href = \"/tra-cuu-van-don?code=\" + item.Code;\r\n    let LadingDetail = item._original;\r\n    setDetailId(item._original.Id);\r\n  };\r\n\r\n  const APIC_spLadingGetMany = async (stt) => {\r\n    setIsChecked(false);\r\n    setChecked(false);\r\n    setdataLading([]);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: Ladingcode,\r\n      FromDate: Fromdate.toISOString(),\r\n      ToDate: Todate.toISOString(),\r\n      CustomerID: Customer.CustomerID,\r\n      CustomerCode: Customer.CustomerCode,\r\n      Status: stt,\r\n      Skip: 0,\r\n      Take: 5000,\r\n    };\r\n    setStatus(stt);\r\n    setDisable(true); // disable button\r\n    try {\r\n      //#region Set status name cho tiêu đề\r\n\r\n      if (stt === 9) setStatusName(`Vận đơn mới tạo`);\r\n      else if (stt === 1) setStatusName(`Vận đơn đang lấy hàng`);\r\n      else if (stt === 2) setStatusName(`Vận đơn đã lấy hàng`);\r\n      else if (stt === 3) setStatusName(`Vận đơn đang trung chuyển`);\r\n      else if (stt === 4) setStatusName(`Vận đơn nhận tại chi nhánh phát`);\r\n      else if (stt === 5) setStatusName(`Vận đơn đang phát`);\r\n      else if (stt === 50) setStatusName(`Vận đơn đang phát lại`);\r\n      else if (stt === 6) setStatusName(`Vận đơn phát thành công`);\r\n      else if (stt === 7) setStatusName(`Vận đơn khai thác lại`);\r\n      else if (stt === 8) setStatusName(`Vận đơn hoàn gốc`);\r\n      else setStatusName(\"Danh sách vận đơn\");\r\n\r\n      //#endregion Set status name cho tiêu đề\r\n\r\n      //#region Đếm vận đơn theo Status\r\n      let pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLading_SumByStatus\",\r\n        API_key: APIKey,\r\n      };\r\n      const _count = await mainAction.API_spCallServer(pr, dispatch);\r\n      debugger;\r\n      _count.map((item, index) => {\r\n        if (item.Status === 1) setStatus1(item.Total);\r\n        if (item.Status === 2) setStatus2(item.Total);\r\n        if (item.Status === 3) setStatus3(item.Total);\r\n        if (item.Status === 4) setStatus4(item.Total);\r\n        if (item.Status === 5) setStatus5(item.Total);\r\n        if (item.Status === 6) setStatus6(item.Total);\r\n        if (item.Status === 7) setStatus7(item.Total);\r\n        if (item.Status === 8) setStatus8(item.Total);\r\n        if (item.Status === 9) setStatus9(item.Total);\r\n        if (item.Status === 50) setStatus50(item.Total);\r\n      });\r\n\r\n      //#endregion Đếm vận đơn theo Status\r\n\r\n      //#region Get danh sách vận đơn\r\n      let prList = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLadingGetManyJsonAuto\",\r\n        API_key: APIKey,\r\n      };\r\n      const data = await mainAction.API_spCallServer(prList, dispatch);\r\n      setdataLading(data);\r\n      setDataPrint([]);\r\n      setViewDetail(null);\r\n      setModalImg(\"\");\r\n      setDisable(false); // disable button\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n      //#endregion Get danh sách vận đơn\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion Form tìm kiếm vận đơn\r\n\r\n  //#region In vận đơn\r\n\r\n  const [pageprint, setpageprint] = useState([0, 1]);\r\n  const [HtmlPrint, setHtmlPrint] = useState(null);\r\n  const APIC_spLadingGetDataPrint = async () => {\r\n    if (DataPrint.length === 0) {\r\n      Alerterror(\"Vui lòng chọn vận đơn cần in\");\r\n      return;\r\n    }\r\n    debugger\r\n    //#region SET HTML PRINT\r\n    await setHtmlPrint(\r\n      DataPrint.map((item, index) => {\r\n        return (\r\n          <div>\r\n            {pageprint.map((detail, idele) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"bill\"\r\n                  style={{\r\n                    width: \"710px\",\r\n                    height: \"1050px\",\r\n                    pageBreakBefore: \"always\",\r\n                    border: \"2px solid #000\",\r\n                  }}\r\n                >\r\n                  {item.PaymentType === 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"20vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(70deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD-TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType !== 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType === 1 && item.COD === 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontWeight: \"600\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                        <img\r\n                          src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\"\r\n                          style={{ width: \"180px\", height: \"70px\" }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            position: \"relative\",\r\n                            display: \"inline-block\",\r\n                            height: \"40px\",\r\n                            marginBottom: \"5px\",\r\n                          }}\r\n                        >\r\n                          <div>\r\n                            <Barcode value={item.Code} height=\"35\" />\r\n                          </div>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <p>\r\n                          BIÊN BẢN BÀN GIAO\r\n                          <br />\r\n                          (DELIVERY RECEIPTS)\r\n                        </p>\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          width: \"160px\",\r\n                          verticalAlign: \"top\",\r\n                          marginRight: \"1px\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n                          style={{ width: \"160px\", height: \"70px\" }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tr>\r\n                      <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\" }}>\r\n                        <div\r\n                          style={{\r\n                            marginLeft: \"--20px\",\r\n                            writingMode: \"tb-rl\",\r\n                          }}\r\n                        >\r\n                          <b>INFORMATION</b>\r\n                        </div>\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          borderBottom: \"2px solid #ddd\",\r\n                          width: \"350px\",\r\n                          borderRight: \"1px solid #ddd\",\r\n                        }}\r\n                      >\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            Ngày gửi hàng <i>(Date)</i>\r\n                          </b>\r\n                        </b>{\": \"}\r\n                         {FormatDateJson(item.CreateDate,1)}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            Số kiện <i>(Package)</i>\r\n                          </b>\r\n                        </b>{\": \"}\r\n                         {FormatMoney(item.Number)}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            Nội dung hàng hóa <i>(Document,Goods)</i>\r\n                          </b>\r\n                        </b>\r\n                        {\": \"}\r\n                        {item.Description !== undefined ? item.Description : \"\"}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            Dịch vụ bưu chính <i>((Postal services)</i>\r\n                          </b>\r\n                        </b>\r\n                        : <span>{item.ServiceName}</span>\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            Dịch vụ cộng thêm <i>(Extra services)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        {item.ServiceGTGTName !== undefined\r\n                          ? item.ServiceGTGTName\r\n                          : \"\"}\r\n                        <br />\r\n                      </td>\r\n                      <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                        <lbl\r\n                          style={{ display: \"inline-block\", width: \"225px\" }}\r\n                        >\r\n                          {(item.Mass === 0 || item.Mass===undefined) ? \"Trọng lượng\" : \"Khối lượng\"}{\" \"}\r\n                          <i>{(item.Mass === 0 || item.Mass===undefined) ? \"(Weight)\" : \"(Mass)\"}</i>\r\n                        </lbl>\r\n                        :{\" \"}\r\n                        <b>\r\n                          {(item.Mass === 0 || item.Mass===undefined)\r\n                            ? FormatMoney(item.Weight)\r\n                            : FormatMoney(item.Mass)}{\" \"}\r\n                          {(item.Mass === 0 || item.Mass===undefined) ? \"(gram)\" : \"(CBM)\"}\r\n                        </b>\r\n                        <br />\r\n                        <lbl\r\n                          style={{ display: \"inline-block\", width: \"225px\" }}\r\n                        >\r\n                          HT thanh toán <i>(Payment)</i>\r\n                        </lbl>\r\n                        :{\" \"}\r\n                        <b>\r\n                          {item.PaymentString !== undefined\r\n                            ? item.PaymentString\r\n                            : \"Khác\"}\r\n                        </b>\r\n                        <br />\r\n                        <lbl\r\n                          style={{ display: \"inline-block\", width: \"225px\" }}\r\n                        >\r\n                          COD\r\n                        </lbl>\r\n                        : <b>{FormatMoney(item.COD)} đ</b>\r\n                        <br />\r\n                        <lbl\r\n                          style={{ display: \"inline-block\", width: \"225px\" }}\r\n                        >\r\n                          Số tiền phải thu <i>(Total receivables)</i>\r\n                        </lbl>\r\n                        :{\" \"}\r\n                        <b>\r\n                          {FormatMoney(\r\n                            item.PaymentType == 1 ? item.Amount : item.COD\r\n                          )}{\" \"}\r\n                          đ\r\n                        </b>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                        <b>\r\n                          THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i>\r\n                        </b>\r\n                        : <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Mã sản phẩm <i>(Product Code)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.ProductCode ?? \"\"}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Tên sản phẩm <i>((Product Name)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.ProductName ?? \"\"}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Số lượng <i>(Number)</i>\r\n                          </b>\r\n                        </b>{\" \"}\r\n                        : {item.ProductQuanlity ?? \"\"}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Seri sản phẩm <i>(Product Seri)</i>\r\n                          </b>\r\n                        </b>\r\n                        : <span>{item.ProductDes ?? \"\"}</span>\r\n                        <br />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colspan=\"4\">\r\n                        <u>\r\n                          <b>* LƯU Ý GIAO (DELIVERY NOTE):</b>\r\n                        </u>{\" \"}\r\n                        <span>\r\n                          {item.Noted !== undefined ? item.Noted : \"\"}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tr>\r\n                      <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                        <div\r\n                          style={{\r\n                            marginLeft: \"--20px\",\r\n                            writingMode: \"tb-rl\",\r\n                          }}\r\n                        >\r\n                          <b>SENDER</b>\r\n                        </div>\r\n                      </td>\r\n                      <td style={{ position: \"relative\" }}>\r\n                        <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Mã khách hàng <i>(Customer code)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.CustomerCode}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Người gửi <i>(Sender's name)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        {item.CustomerName_Reality !== undefined\r\n                          ? item.CustomerName_Reality\r\n                          : item.CustomerName}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        <span>\r\n                          {item.CustomerPhone_Reality !== undefined\r\n                            ? item.CustomerPhone_Reality\r\n                            : item.CustomerPhone}\r\n                        </span>\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Địa chỉ <i>(Address)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        {item.CustomerAddress_Reality !== undefined\r\n                          ? item.CustomerAddress_Reality\r\n                          : item.CustomerAddress}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.CitySendCode}\r\n                        <br />\r\n                        <span\r\n                          style={{\r\n                            padding: \"2px 10px\",\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"45px\",\r\n                            borderTop: \"2px solid #000\",\r\n                            borderBottom: \"2px solid #000\",\r\n                            borderLeft: \"2px solid #000\",\r\n                            top: \"-2px\",\r\n                            right: 0,\r\n                            position: \"absolute\",\r\n                          }}\r\n                        >\r\n                          {item.POCodeFrom}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tr>\r\n                      <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                        <div\r\n                          style={{\r\n                            marginLeft: \"--20px\",\r\n                            writingMode: \"tb-rl\",\r\n                          }}\r\n                        >\r\n                          <b>RECEIVER</b>\r\n                        </div>\r\n                      </td>\r\n                      <td style={{ position: \"relative\" }}>\r\n                        <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>:{\" \"}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Người nhận <i>(Recipient’s name)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.RecipientName}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.RecipientPhone}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Công ty nhận <i>(Recipient’s company)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        <span>\r\n                          {item.RecipientCompany !== undefined\r\n                            ? item.RecipientCompany\r\n                            : \"\"}\r\n                        </span>\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Số nhà, đường <i>(No., Street)</i>\r\n                          </b>\r\n                        </b>\r\n                        :{\" \"}\r\n                        {item.Street !== undefined\r\n                          ? item.Street\r\n                          : item.RecipientAddress}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Phường/Xã <i>(Ward/Commune)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.Wards}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                          <b>\r\n                            - Quận/Huyện <i>(District)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.District}\r\n                        <br />\r\n                        <b style={{ display: \"inline-block\", width: \"255px\" }}>\r\n                          <b>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                        </b>\r\n                        : {item.CityRecipientCode}\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                  <table style={{\r\n                    width: \"100%\", borderBottom: \"2px solid #ddd\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\", fontSize: \"45px\",\r\n                  }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\">\r\n                    <tr><td>{item.LocationTo}</td></tr>\r\n                  </table>\r\n                  <table\r\n                    style={{ width: \"100%\" }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tr>\r\n                      <td colspan=\"2\">\r\n                        Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên\r\n                        nhận hàng đúng, đủ nội dung như trên/\r\n                        <br />\r\n                        The consigneee confirms that the Delivery company has\r\n                        delivered to the consignee the correct and sufficient\r\n                        content as above.\r\n                        <br />\r\n                        Bên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá\r\n                        trị như nhau/\r\n                        <br />\r\n                        The Delivery record are made into 02 copies, each party\r\n                        keeps 01 copy with the same value.\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                        <br />\r\n                        <b>BÊN GIAO HÀNG</b> <br />\r\n                        <i>(Delivery Company)</i>\r\n                      </td>\r\n                      <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                        Ngày (Date) ..... / ..... / 20.....\r\n                        <br />\r\n                        <b>BÊN NHẬN HÀNG</b>\r\n                        <br />\r\n                        <i>(Consignee)</i>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n    //#endregion SET HTML PRINT\r\n\r\n    //#region Khởi tạo form in\r\n    let _timeout = 1000;\r\n    if (DataPrint.length > 100 && DataPrint.length < 200) _timeout = 2000;\r\n    else if (DataPrint.length > 200) _timeout = 3000;\r\n    let html = $(\"#barcodeTarget\").html();\r\n    html += `<script type=\"text/javascript\">window.focus();setTimeout(function(){window.print();window.close();},${_timeout});</script>`;\r\n    var myWindow = window.open(\"\", \"_blank\");\r\n    myWindow.document.write(\r\n      '<html><head></head><body style=\"margin:0\">' + html + \"</body></html>\"\r\n    );\r\n    //#endregion Khởi tạo form in\r\n  };\r\n\r\n  const ChangeSheetPrint = (event) => {\r\n    const sheetNumber = event.target.value;\r\n    let db = [];\r\n    setpageprint([]);\r\n    if (sheetNumber !== \"\" && sheetNumber !== \"0\") {\r\n      //setshowpage(sheetNumber);\r\n      setsheetprint(sheetNumber);\r\n      for (var i = 0; i < parseInt(sheetNumber); i++) {\r\n        db.push(i);\r\n      }\r\n      setpageprint(db);\r\n    }\r\n  };\r\n\r\n  const handleChange = (row) => {\r\n    dataLading.find((p) => p.Id == row.original.Id).Checked =\r\n      row.original.Checked == false ? true : false;\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  const handleCheckAll = (e) => {\r\n    let allChecked = IsChecked;\r\n    setIsChecked(!IsChecked);\r\n    dataLading.forEach((item) => {\r\n      item.Checked = e.target.checked;\r\n    });\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  //#endregion In vận đơn\r\n\r\n  //#region Danh sách vận đơn\r\n  const GoToEdit = async (item) => {\r\n    let LadingDetail = item._original;\r\n    localStorage.setItem(\"LadingEdit\", JSON.stringify(LadingDetail));\r\n    history.push(\"/tao-nhanh-van-don\");\r\n  };\r\n  const columns = [\r\n    {\r\n      Cell: (row) => (\r\n        <div className=\"form-check\" style={{ padding: \"0 15px\" }}>\r\n          <label className=\"form-check-label\" style={{ position: \"unset\" }}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={row.original.Id}\r\n              value={row.original.Id}\r\n              checked={row.original.Checked}\r\n              onChange={(e) => handleChange(row)}\r\n            />\r\n            <span className=\"form-check-sign\" htmlFor={row.original.Id}>\r\n              <span className=\"check\"></span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      ),\r\n      maxWidth: 40,\r\n      textAlign: \"center\",\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i className=\"fa fa-eye green\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modalDetail\"\r\n            onClick={() => GoToDetail(row)}\r\n            title=\"Chi tiết\"></i>{\" \"}\r\n          {row._original.Status === 9 ? (\r\n            <>\r\n              <i className=\"fa fa-edit orange button\"\r\n              onClick={() => GoToEdit(row)}\r\n              title=\"Sửa\"\r\n            ></i>\r\n              <i\r\n                className=\"fa fa-trash red button\"\r\n                onClick={() =>\r\n                  window.confirm(\"Xác nhận xóa vận đơn \" + row.Code + \"?\") &&\r\n                  APIC_spLadingRemove(row)\r\n                }\r\n                title=\"Xóa\"\r\n              ></i>\r\n            </>\r\n          ) : (\r\n              <i className=\"material-icons fontsizeicon14 orange\"\r\n                onClick={() => GoToComplain(row)}\r\n                title=\"Khiếu nại\"\r\n              >description</i>\r\n            )}\r\n        </span>\r\n      ),\r\n      minWidth: 80,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Hình báo phát\",\r\n      accessor: \"ImageDeliveryList\",\r\n      minWidth: 50,\r\n      Cell: (item) => (\r\n        <div>\r\n          {item.value !== undefined && item.value !== \"\" && item.value !== null\r\n            ? JSON.parse(item.value).map((img, index) => {\r\n              return (\r\n                <a\r\n                  className=\"cursor\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#modalImg\"\r\n                  onClick={(e) => { setModalImg(img.Img) }}\r\n                  title=\"Click để xem hình lớn\"\r\n                >\r\n                  <img src={img.Img} width=\"50\" />\r\n                </a>\r\n              );\r\n            })\r\n            : null}{\" \"}\r\n        </div>\r\n      ),\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 150,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value,1)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tình trạng\",\r\n      accessor: \"StatusName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)} (gram)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thu hộ\",\r\n      accessor: \"COD\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Khai giá\",\r\n      accessor: \"Insured\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Hình thức thanh toán\",\r\n      accessor: \"PaymentString\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thông tin nhận\",\r\n      accessor: \"ReasonName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //#endregion Danh sách vận đơn\r\n\r\n  //#region Hình báo phát\r\n\r\n  const ViewImg = (\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"modalImg\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"modalImg\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Hình ảnh báo phát</h5>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <img src={ModalImg} width=\"100%\" />\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-default btn-sm\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              <i className=\"fa fa-close\"></i> Đóng\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //#endregion Hình báo phát\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 main-title\"><i class=\"fa fa-list\"></i> DANH SÁCH VẬN ĐƠN</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group\">\r\n              <label>Từ ngày </label>\r\n              <DateTimePicker\r\n                className=\"form-control\"\r\n                onChange={(date) => FromDate(date)}\r\n                value={Fromdate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"form-group\">\r\n              <label>Đến ngày </label>\r\n              <DateTimePicker\r\n                className=\"form-control\"\r\n                onChange={(date) => ToDate(date)}\r\n                value={Todate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\" style={{ marginTop: \"8px\" }}>\r\n            <div className=\"\">\r\n              <label>Mã vận đơn</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={LadingcodeRef}\r\n                {...bindLadingcode}\r\n                value={Ladingcode}\r\n                placeholder=\"Nhập mã vận đơn ...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 text-center\">\r\n            <button\r\n              disabled={Disable}\r\n              onClick={() => {\r\n                APIC_spLadingGetMany(Status);\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn btn-danger btn-sm\"\r\n            >\r\n              <i className=\"material-icons\">search</i>\r\n                Tìm kiếm\r\n              </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={ExportAllToExcel}\r\n              className=\"btn btn-sm btn-success\"\r\n              style={{ margin: \"0 5px\" }}\r\n            >\r\n              <i class=\"material-icons\">get_app</i>\r\n                Xuất excel tất cả vận đơn\r\n              </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-center\">\r\n            <select\r\n              className=\"form-control hide-md\"\r\n              onChange={(e) => {\r\n                APIC_spLadingGetMany(parseInt(e.target.value));\r\n              }}\r\n            >\r\n              <option value=\"9\">Mới tạo ({Status9})</option>\r\n              <option value=\"1\">Đang lấy hàng ({Status1})</option>\r\n              <option value=\"2\">Đã lấy hàng ({Status2})</option>\r\n              <option value=\"3\">Đang trung chuyển ({Status3})</option>\r\n              <option value=\"4\">Nhận tại CN phát ({Status4})</option>\r\n              <option value=\"5\">Đang phát ({Status5})</option>\r\n              <option value=\"50\">Đang phát lại ({Status50})</option>\r\n              <option value=\"6\">Phát thành công ({Status6})</option>\r\n              <option value=\"7\">Khai thác lại ({Status7})</option>\r\n              <option value=\"8\">Hoàn gốc ({Status8})</option>\r\n            </select>\r\n            <ul className=\"nav nav-pills nav-pills-warning hide-sm mt10\" style={{display:\"inline-flex\"}}>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link active show\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link1\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(9);\r\n                  }}\r\n                >\r\n                  Mới tạo&nbsp; ({Status9})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link2\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(1);\r\n                  }}\r\n                >\r\n                  Đang lấy hàng&nbsp; ({Status1})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(2);\r\n                  }}\r\n                >\r\n                  Đã lấy hàng&nbsp; ({Status2})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(3);\r\n                  }}\r\n                >\r\n                  Đang trung chuyển&nbsp; ({Status3})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(4);\r\n                  }}\r\n                >\r\n                  Nhận tại CN phát&nbsp; ({Status4})\r\n                  </a>\r\n              </li>\r\n              {/* </ul>\r\n              <ul className=\"nav nav-pills nav-pills-warning hide-sm\"> */}\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(5);\r\n                  }}\r\n                >\r\n                  Đang phát&nbsp; ({Status5})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(50);\r\n                  }}\r\n                >\r\n                  Đang phát lại&nbsp; ({Status50})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link nav-linkpadding \"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(6);\r\n                  }}\r\n                >\r\n                  Phát thành công&nbsp; ({Status6})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(7);\r\n                  }}\r\n                >\r\n                  Khai thác lại&nbsp; ({Status7})\r\n                  </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(8);\r\n                  }}\r\n                >\r\n                  Hoàn gốc&nbsp; ({Status8})\r\n                  </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"main-title-border\">\r\n            <i class=\"fa fa-list\"></i> {StatusName}\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"pull-left\">\r\n              <div className=\"form-check top0\">\r\n                <label className=\"form-check-label\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value=\"checkAll\"\r\n                    checked={IsChecked}\r\n                    onChange={handleCheckAll}\r\n                  />\r\n                  <span className=\"form-check-sign\">\r\n                    <span className=\"check\"> </span>\r\n                  </span>\r\n                    Chọn tất cả\r\n                  </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"pull-right\">\r\n              <div className=\"input-group text-right mt10\">\r\n                <div\r\n                  class=\"input-group-prepend\"\r\n                  style={{ marginRight: \"5px\", marginTop: \"5px\" }}\r\n                >\r\n                  Số liên cần in{\" \"}\r\n                </div>\r\n                <input\r\n                  type=\"number\"\r\n                  value={sheetprint}\r\n                  ref={sheetprintRef}\r\n                  {...bindsheetprint}\r\n                  onChange={(event) => ChangeSheetPrint(event)}\r\n                  min=\"1\"\r\n                  max=\"10\"\r\n                  className=\"form-control maxwidth100\"\r\n                  placeholder=\"Số liên in\"\r\n                  style={{ height: \"30px\" }}\r\n                />\r\n                <div className=\"form-group-append\">\r\n                  <button\r\n                    onClick={() => {\r\n                      APIC_spLadingGetDataPrint();\r\n                    }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-info btn-sm\"\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    <i className=\"material-icons\">print</i>\r\n                      &nbsp; In\r\n                    </button>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={ExportToExcel}\r\n                  className=\"btn btn-sm btn-success\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                >\r\n                  <i class=\"material-icons\">get_app</i>\r\n                    Xuất excel\r\n                  </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable data={dataLading} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/LogoNetco.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      {ViewImg}\r\n      <div\r\n        class=\"modal\"\r\n        id=\"modalDetail\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modalDetail\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Chi tiết vận đơn</h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body scroller\">\r\n              {/* {ViewDetail} */}\r\n              <LadingDetail LadingCode=\"\" LadingId={DetailId} />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-default btn-sm\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                <i className=\"fa fa-close\"></i> Đóng\r\n                </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"barcodeTarget\" style={{ display: \"none\" }}>\r\n        {HtmlPrint}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectSender.js",["1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DecodeString } from \"../Utils\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\n\r\nconst SelectSenderComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  onLoad = 0, //reload select box\r\n  defaultLabel=\"\"\r\n}, ref) => {\r\n  //const [cookies, setCookie] = useCookies([\"customerLoginWeb\"], \"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(0);\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [_default, setDefault] = useState({\r\n    value: 0,\r\n    label: defaultLabel===\"\"?(Customer.CustomerName + \" - \" + Customer.Phone + \" - \" + Customer.Address + \", \"+ Customer.WardName + \", \"+ Customer.DistrictName + \", \"+ Customer.CityName):defaultLabel,\r\n    obj: {\r\n      CityId: Customer.City,\r\n      DistrictiId: Customer.District,\r\n      WarId: Customer.Ward,\r\n      CityName: Customer.CityName,\r\n      DistrictyName: Customer.DistrictName,\r\n      WarName: Customer.WardName,\r\n      NameSend: Customer.CustomerName,\r\n      PhoneSend: Customer.Phone,\r\n      AddressFull: Customer.Address  + \", \" + Customer.WardName + \", \"+ Customer.DistrictName + \", \"+ Customer.CityName,\r\n      Street_Number: Customer.Address,\r\n      State: 0\r\n    }\r\n  });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (Customer === null || Customer === {}) {\r\n      history.push(\"/login\");\r\n    }\r\n    onGetCustomerSenderAddress();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  useEffect(() => {\r\n    if(onLoad===1)\r\n    {\r\n      onGetCustomerSenderAddress();\r\n      onLoad=0;\r\n    }\r\n  }, [onLoad]);\r\n\r\n  useEffect(() => {\r\n    let a = _default;\r\n    a.label = defaultLabel;\r\n    setDefault(a);\r\n    onGetCustomerSenderAddress();\r\n    setValueS(_default);\r\n  }, [defaultLabel]);\r\n\r\n  const onGetCustomerSenderAddress = async () => {\r\n    //let arr = DecodeString(cookies.customerLogin).split(\"|\");\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + Customer.CustomerID + '}',\r\n      func: \"APIC_spCustomerSenderAddressList\",\r\n    };\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = {\r\n        value: element.CustomerAddressSenderId,\r\n        label: element.NameSend + \" - \" + element.PhoneSend + \" - \" + element.AddressFull,\r\n        obj: element,\r\n      };\r\n      index === 0 ? setValueS(option) : setValueS(null);\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    //if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    //}\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectSender = React.memo(SelectSenderComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\SelectRecipient.js",["1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DecodeString } from \"../Utils\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\n\r\nconst SelectRecipientComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  onLoad = 0, //reload select box\r\n  defaultLabel = {}\r\n}, ref) => {\r\n  //const [cookies, setCookie] = useCookies([\"customerLoginWeb\"], \"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(0);\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [_default, setDefault] = useState({\r\n    value: 0,\r\n    label: \"Chọn địa chỉ\",\r\n    obj: {\r\n      Name: \"\",\r\n      Phone: \"\",\r\n      CityId: 0,\r\n      City: \"Chọn tỉnh thành\",\r\n      DistrictId: 0,\r\n      District: \"Chọn quận huyện\",\r\n      WardId: 0,\r\n      Ward: \"Chọn phường xã\",\r\n      Street: \"\",\r\n      Address: \"\",\r\n      Company: \"\",\r\n      Lat:0,\r\n      Lng:0\r\n    }\r\n  });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.length === 0)\r\n      onGetData();\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  useEffect(() => {\r\n    if (onLoad === 1) {\r\n      onGetData();\r\n      onLoad = 0;\r\n    }\r\n  }, [onLoad]);\r\n\r\n  const onGetData = async () => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + Customer.CustomerID + '}',\r\n      func: \"APIC_spCustomerRecipientLoad\",\r\n    };\r\n\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = {\r\n        value: element.Id,\r\n        label: element.Name + \" - \" + element.Phone + \" - \" + element.Address,\r\n        obj: element,\r\n      };\r\n      dataOptions.push(option);\r\n      if(element.Id===onActive)\r\n        IsActive=1;\r\n    });\r\n    setData(dataOptions);\r\n    if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    } else setValueS(_default);\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectRecipient = React.memo(SelectRecipientComp);\r\n","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\LadingDetail.js",["1538","1539","1540","1541","1542","1543","1544"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport { Lading } from \"../Redux/Actions/Category\";\r\nimport {\r\n  FormatDate,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n} from \"../Utils\";\r\nconst LadingDetailComp = ({\r\n  LadingId = () => 0,\r\n  LadingCode = () => \"\"\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [Customer, setCustomer] = useState(JSON.parse(localStorage.getItem(\"Customer_LoginData\")));\r\n  const [Detail, setDetail] = useState({});\r\n  const [History, setHistory] = useState([]);\r\n  const [Images, setImages] = useState([]);\r\n  useEffect(() => {\r\n    if (LadingCode !== \"\" || LadingId != 0)\r\n      GetLadingDetail();\r\n  }, [LadingCode, LadingId]);\r\n\r\n  const GetLadingDetail = async () => {\r\n    if (LadingCode !== \"\" || LadingId !== \"0\") {\r\n      try {\r\n        //Lấy thông tin vận đơn\r\n        let pr = {\r\n          Json: \"{\\\"Code\\\":\\\"\" + LadingCode + \"\\\",\\\"LadingId\\\":\" + LadingId + \",\\\"CustomerID\\\":\" + Customer.CustomerID + \"}\",\r\n          func: \"APIC_spLading_Find\",\r\n          API_key: APIKey,\r\n          TokenDevices: TOKEN_DEVICE,\r\n        };\r\n        const data = await mainAction.API_spCallServer(pr, dispatch);\r\n        debugger\r\n        setDetail(data.Detail[0]);\r\n        setHistory(data.History);\r\n        setImages(data.Detail[0].ImageDelivery !== undefined ? data.Detail[0].ImageDelivery : []);\r\n      } catch (err) {\r\n        console.log(\"Eror\", err);\r\n        setDetail({});\r\n      }\r\n    }\r\n  }\r\n\r\n  return Detail === {} ? (<div>Không tìm thấy vận đơn này</div>) : (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 borderbottom\"><i className=\"fa fa-info\"></i> THÔNG TIN VẬN ĐƠN</div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-barcode iwidth\"></i>\r\n              <span className=\"colortext\"> Mã vận đơn: </span>\r\n              <span className=\"code bold\">{Detail.Code}</span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-flag iwidth\"></i>\r\n              <span className=\"colortext\"> Trạng thái: </span>\r\n              <span className=\"noted bold\">\r\n                {Detail.StatusName}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-barcode iwidth\"></i>\r\n              <span className=\"colortext\"> Mã đối tác: </span>\r\n              <span className=\"partner-code\">\r\n                {Detail.PartnerCode}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-clock-o iwidth\"></i>\r\n              <span className=\"colortext\"> Thời gian tạo: </span>\r\n              <span className=\"create-date\">\r\n                {FormatDateJson(\r\n                  Detail.CreateDate\r\n                )}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-clock-o iwidth\"></i>\r\n              <span className=\"colortext\">\r\n                {\" \"}\r\n                          Thời gian dự kiến giao:{\" \"}\r\n              </span>\r\n              <span className=\"noted\"> Từ 8h - 17:30 ngày {\" \"}\r\n                {FormatDateJson(\r\n                  Detail.DealineTime,1\r\n                )} <br /><span className=\"red italic\">(Do tình hình dịch Covid 19, thời gian giao hàng có thể khác so với dự kiến.)</span>\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-briefcase iwidth\"></i>\r\n              <span className=\"colortext\"> Dịch vụ: </span>\r\n              <span className=\"number-item\">\r\n                {Detail.ServiceName}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-sitemap iwidth\"></i>\r\n              <span className=\"colortext\"> Trọng lượng (gram): </span>\r\n              <span className=\"weight\">\r\n                {FormatMoney(Detail.Weight)}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-square-o iwidth\"></i>\r\n              <span className=\"colortext\"> Số kiện: </span>\r\n              <span className=\"number-item\">\r\n                {FormatMoney(Detail.Number)}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-tags iwidth\"></i>\r\n              <span className=\"colortext\"> Số khối: </span>\r\n              <span className=\"number-item\">\r\n                {FormatMoney(Detail.Mass)}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <i className=\"fa fa-credit-card iwidth\"></i>\r\n              <span className=\"colortext\">\r\n                {\" \"}\r\n                          Hình thức thanh toán:{\" \"}\r\n              </span>\r\n              <span className=\"noted\">\r\n                {Detail.PaymentString}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <i className=\"fa fa-pencil-square iwidth\"></i>\r\n              <span className=\"colortext\"> Nội dung: </span>\r\n              <span className=\"noted\">\r\n                {Detail.Description}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <i className=\"fa fa-file-text iwidth\"></i>\r\n              <span className=\"colortext\"> Ghi chú: </span>\r\n              <span className=\"noted\">{Detail.Noted}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 mt30\">\r\n          <div className=\"col-md-12 borderbottom row\">\r\n            <i className=\"material-icons\">bubble_chart</i> THÔNG TIN NGƯỜI GỬI</div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-user iwidth\"></i>\r\n            <span className=\"colortext\">Tên khách hàng: </span>\r\n            <span className=\"sender-name\">\r\n              {Detail.CustomerName}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-phone iwidth\"></i>\r\n            <span className=\"colortext\">Số ĐT: </span>\r\n            <span className=\"sender-phone\">\r\n              {Detail.CustomerPhone}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\">Tỉnh đi: </span>\r\n            <span className=\"recipient-company\">\r\n              {Detail.CitySendCode}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Huyện đi: </span>\r\n            <span className=\"sender-address\">\r\n              {Detail.DistrictName_From}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Địa chỉ khách hàng: </span>\r\n            <span className=\"sender-address\">\r\n              {Detail.CustomerAddress}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-user iwidth\"></i>\r\n            <span className=\"colortext\">Người gửi thực tế: </span>\r\n            <span className=\"sender-name\">\r\n              {Detail.CustomerName_Reality}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-phone iwidth\"></i>\r\n            <span className=\"colortext\">\r\n              {\" \"}\r\n                        SĐT người gửi thực tế:{\" \"}\r\n            </span>\r\n            <span className=\"sender-phone\">\r\n              {Detail.CustomerPhone_Reality}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Địa chỉ gửi thực tế: </span>\r\n            <span className=\"sender-address\">\r\n              {Detail.CustomerAddress_Reality}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 mt30\">\r\n          <div className=\"col-md-12 borderbottom row\">\r\n            <i className=\"material-icons\">bubble_chart</i> THÔNG TIN\r\n                      NGƯỜI NHẬN\r\n                    </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-user iwidth\"></i>\r\n            <span className=\"colortext\"> Tên người nhận: </span>\r\n            <span className=\"recipient-name\">\r\n              {Detail.RecipientName}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-phone iwidth\"></i>\r\n            <span className=\"colortext\"> Số điện thoại: </span>\r\n            <span className=\"recipient-phone\">\r\n              {Detail.RecipientPhone}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-flag iwidth\"></i>\r\n            <span className=\"colortext\"> Công ty: </span>\r\n            <span className=\"recipient-company\">\r\n              {Detail.RecipientCompany}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Tỉnh đến: </span>\r\n            <span className=\"recipient-company\">\r\n              {Detail.CityRecipientCode}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Huyện đến: </span>\r\n            <span className=\"recipient-company\">\r\n              {Detail.District}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Phường xã đến: </span>\r\n            <span className=\"recipient-company\">\r\n              {Detail.Wards}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-12\">\r\n            <i className=\"fa fa-map-marker iwidth\"></i>\r\n            <span className=\"colortext\"> Địa chỉ: </span>\r\n            <span className=\"recipient-address\">\r\n              {Detail.RecipientAddress}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt30\">\r\n        <div className=\"col-md-12 borderbottom\"><i className=\"material-icons\">content_paste</i> THÔNG TIN ĐƠN HÀNG</div>\r\n        <div className=\"col-md-12\">\r\n          <table style={{ width: \"100%\" }} className=\"margin-left-20\">\r\n            <tbody>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext bold\"> Tổng cước:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"length bold\">\r\n                  {FormatMoney(Detail.Amount) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Cước trắng:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"length\">\r\n                  {FormatMoney(Detail.PriceMain) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Tiền thu hộ:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.COD) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Cước phí thu hộ:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.CODPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Tiền khai giá:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.Insured) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Cước phí khai giá:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.InsuredPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> PPXD:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"number-item\">\r\n                  {FormatMoney(Detail.PPXDMoney) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> VAT:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"weight\">\r\n                  {FormatMoney(Detail.VATMoney) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> BP:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.BPPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> THBB:</span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.THBBPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Phí phát tận tay: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PTTPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Phí hàng quá khổ: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.HQKPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\">\r\n                  {\" \"}\r\n                            Phát hàng siêu thị:{\" \"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PSTPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\">\r\n                  {\" \"}\r\n                            Phí hàng đảo phú quốc:{\" \"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PDPQPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Tổng Hóa đơn: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PercentHD)}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Phí hóa đơn: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.HDPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Tổng đồng kiểm: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PercentPDK)}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\">\r\n                  {\" \"}\r\n                            Phí N/P đồng kiểm:{\" \"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.NPDKPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Phí lắp đặt: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.LDPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Phí gửi xe: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.DrPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Phụ cấp: </span>{\" \"}\r\n              </td>\r\n              <td>\r\n                <span className=\"length textalign\">\r\n                  {FormatMoney(Detail.Allowance) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"colortext\"> Phụ cấp NT: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.OnSiteDeliveryPrice) +\r\n                    \" đ\"}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n            <tr className=\"linebottom\">\r\n              <td>\r\n                <span className=\"colortext\"> Phụ cấp đóng gói: </span>\r\n              </td>\r\n              <td>\r\n                <span className=\"noted\">\r\n                  {FormatMoney(Detail.PackPrice) + \" đ\"}\r\n                </span>\r\n              </td>\r\n              <td colSpan=\"2\"></td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className={\"row mt30 \" + (Detail.ProductName===undefined?\"display-none\":\"\")}>\r\n        <div className=\"col-md-12 borderbottom\"><i className=\"material-icons\">lens_blur</i> THÔNG TIN SẢN PHẨM</div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-info iwidth\"></i>\r\n          <span className=\"colortext\">Mã sản phẩm: </span>\r\n          <span className=\"sender-phone\">\r\n            {Detail.ProductCode}\r\n          </span>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-info iwidth\"></i>\r\n          <span className=\"colortext\">Tên sản phẩm: </span>\r\n          <span className=\"sender-phone\">\r\n            {Detail.ProductName}\r\n          </span>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-info iwidth\"></i>\r\n          <span className=\"colortext\">Số lượng sản phẩm: </span>\r\n          <span className=\"sender-phone\">\r\n            {Detail.ProductQuanlity}\r\n          </span>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-info iwidth\"></i>\r\n          <span className=\"colortext\">Series sản phẩm: </span>\r\n          <span className=\"sender-phone\">\r\n            {Detail.ProductDes}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={\"row mt30\" + (Detail.Status!==6?\" display-none\":\"\")}>\r\n        <div className=\"col-md-12 borderbottom\">\r\n          <i className=\"material-icons\">image_aspect_ratio</i> HÌNH\r\n                    ẢNH BÁO PHÁT\r\n                  </div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-user iwidth\"></i>\r\n          <span className=\"colortext\"> Tên người nhận thực tế: </span>\r\n          <span className=\"code\">{Detail.Recipient_reality}</span>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <i className=\"fa fa-clock-o iwidth\"></i>\r\n          <span className=\"colortext\"> Ngày hoàn thành: </span>\r\n          <span className=\"code\">\r\n            {Detail.FinishDate === undefined ? \"\" : FormatDateJson(Detail.FinishDate)}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className={\r\n            Detail.StatusName === 7\r\n              ? \"col-md-12\"\r\n              : \"col-md-12 display-none\"\r\n          }\r\n        >\r\n          <i className=\"fa fa-pencil-square iwidth\"></i>\r\n          <span className=\"colortext\"> Lý do phát lại: </span>\r\n          <span className=\"code\">{Detail.ReasonName}</span>\r\n        </div>\r\n        <div\r\n          className=\"col-md-12\"\r\n          style={{ textAlign: \"center\", width: \"100%\" }}\r\n        >\r\n          {Detail.ImageDeliveryList !== undefined &&\r\n            Detail.ImageDeliveryList !== \"\" &&\r\n            Detail.ImageDeliveryList !== null\r\n            ? JSON.parse(Detail.ImageDeliveryList).map(\r\n              (img, index) => {\r\n                return (\r\n                  <img\r\n                    src={img.Img}\r\n                    style={{ width: \"100%\", display: \"block\" }}\r\n                  />\r\n                );\r\n              }\r\n            )\r\n            : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt30\">\r\n        <div className=\"col-md-12 borderbottom\"><i className=\"material-icons\">lens_blur</i> HÀNH TRÌNH VẬN ĐƠN</div>\r\n        <div className=\"col-md-12 mt5\">\r\n          <div className=\"table-responsive\">\r\n            <table id=\"dataTable\" className=\"table\">\r\n              <thead className=\"text-primary\">\r\n                <tr>\r\n                  <th>Ngày giờ</th>\r\n                  <th>Nhân viên</th>\r\n                  <th>SĐT</th>\r\n                  <th>Tình trạng</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {History.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{FormatDateJson(item.DateTime)}</td>\r\n                      <td>{item.OfficerName}</td>\r\n                      <td>{item.Phone}</td>\r\n                      <td>{item.StatusName}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport const LadingDetail = React.memo(LadingDetailComp)","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Component\\System\\TestChart.js",["1545"],"import { CanvasChart } from '../../Common';\r\n\r\nexport const TestChart = () => {\r\n  let data = [{\r\n    type: \"column\",\r\n    name: \"Proven Oil Reserves (bn)\",\r\n    legendText: \"Đang phát\",\r\n    showInLegend: true,\r\n    dataPoints: [\r\n      { label: \"Saudi\", y: 266.21 },\r\n      { label: \"Venezuela\", y: 302.25 },\r\n      { label: \"Iran\", y: 157.20 },\r\n      { label: \"Iraq\", y: 148.77 },\r\n      { label: \"Kuwait\", y: 101.50 },\r\n      { label: \"UAE\", y: 97.8 }\r\n    ]\r\n  },\r\n  {\r\n    type: \"column\",\r\n    name: \"Oil Production (million/day)\",\r\n    legendText: \"Phát thành công\",\r\n    axisYType: \"secondary\",\r\n    showInLegend: true,\r\n    dataPoints: [\r\n      { label: \"Saudi\", y: 10.46 },\r\n      { label: \"Venezuela\", y: 2.27 },\r\n      { label: \"Iran\", y: 3.99 },\r\n      { label: \"Iraq\", y: 4.45 },\r\n      { label: \"Kuwait\", y: 2.92 },\r\n      { label: \"UAE\", y: 3.1 }\r\n    ]\r\n  }]\r\n  {/* <div className=\"col-md-6\">\r\n    <ChartTemp type=\"bar\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"line\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"bubble\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"area\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <Barcode value=\"a123456789\" {...config} />\r\n  </div> */}\r\n\r\n  return (\r\n    <CanvasChart data={data} />\r\n  )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Common\\CanvasChart.js",[],"D:\\REACTJS\\REACTJS\\NETCO_POST_REACTJS\\src\\Utils\\GetLatLngGoogle.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\index.js",[],["1546","1547"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Store\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Router\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Router\\Routers.js",["1548"],"import { Route, Switch, BrowserRouter, useLocation } from \"react-router-dom\";\r\n\r\nimport { FooterMenu, HeaderMenu, LeftMenu, TopMenu } from \"../Component/Template\";\r\nimport { Home, Contacts, Carreers, AboutUs, News, Partners, Services, Login, Register,Branch, ServiceDetail } from \"../Component/Main\";\r\n\r\nexport const Routers = () => {\r\n  const location = useLocation();\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" component={HeaderMenu} />\r\n      {location.pathname !== \"/dang-nhap\" && location.pathname !== \"dang-ky\" ? (<Route path=\"/\" component={TopMenu} />) : null}\r\n      <Switch>\r\n        <Route exact path=\"/lien-he\" component={Contacts} />\r\n        <Route exact path=\"/tuyen-dung\" component={Carreers} />\r\n        <Route exact path=\"/gioi-thieu\" component={AboutUs} />\r\n        <Route exact path=\"/thong-tin-cong-ty\" component={AboutUs} />\r\n        <Route exact path=\"/chinh-sach\" component={AboutUs} />\r\n        <Route exact path=\"/tro-giup\" component={AboutUs} />\r\n        <Route exact path=\"/quy-dinh-chung\" component={AboutUs} />\r\n        <Route exact path=\"/tin-tuc\" component={News} />\r\n        <Route exact path=\"/doi-tac\" component={Partners} />\r\n        <Route exact path=\"/da-dang-dich-vu\" component={Services} />\r\n        <Route exact path=\"/dich-vu\" component={ServiceDetail} />\r\n        <Route exact path=\"/dang-nhap\" component={Login} />\r\n        <Route exact path=\"/dang-ky\" component={Register} />\r\n        <Route exact path=\"/diem-gui-hang\" component={Branch} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch>\r\n      <Route path=\"/\" component={FooterMenu} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\LoadingAlert.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Common\\DataTable.js",["1549","1550","1551"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Reducers\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Sagas\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Services\\Api.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Reducers\\MainAction.js",["1552"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Sagas\\MainAction.js",["1553","1554","1555","1556"],"import { put, takeEvery, take, cancel, delay } from 'redux-saga/effects';\r\nimport { mainTypes } from \"../Actions\";\r\n\r\nimport { API_MAIN, APIKey, API_SYSTEM, APIKeySystem } from \"../../Services\";\r\nimport { apiMain, apiSystem } from \"../../Services/Api\";\r\n\r\nexport function* LOADING(action) {\r\n    try {\r\n        delay(300);\r\n        const IsLoading = action && action.params.IsLoading;\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: IsLoading });\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* API_spCallServer(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n\r\n        //params received\r\n        const params = action && action.params\r\n        params.API_key = APIKey;\r\n        let FuncApi = \"API_spCallServer\";\r\n        /// catch api die\r\n        yield delay(300);\r\n        //Check select data redis\r\n        switch (params.func) {\r\n            case \"CPN_spLocationCheckCustomer\":\r\n                FuncApi = \"CPN_spLocationCheckCustomer\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        //End check select data redis\r\n\r\n        // call api\r\n        let respone = yield apiMain.post(API_MAIN + \"/API_spCallServer/\" + FuncApi, params)\r\n\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            respone.data === \"\" ? action.resolve([]) : action.resolve(JSON.parse(respone.data))\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n\r\n    }\r\n}\r\n\r\nexport function* API_spCallServerSystem(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n\r\n        //params received\r\n        const params = action && action.params\r\n        params.API_key = APIKeySystem;\r\n        let FuncApi = \"API_spCallServer\";\r\n        /// catch api die\r\n        yield delay(300);\r\n        //Check select data redis\r\n        switch (params.func) {\r\n            case \"APIC_GetEncoding\":\r\n                FuncApi = \"APIC_GetEncoding\"\r\n                break;\r\n            default:\r\n                FuncApi = \"API_spCallServer\"\r\n                break;\r\n        }\r\n        //End check select data redis\r\n\r\n        // call api\r\n        let respone = yield apiSystem.post(API_SYSTEM + \"/\" + FuncApi, params)\r\n\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            respone.data === \"\" ? action.resolve([]) : action.resolve(JSON.parse(respone.data))\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n\r\n    }\r\n}\r\n\r\nexport default function* watchMainActionSagas() {\r\n    ///Watcher watch Sagas\r\n\r\n    yield takeEvery(mainTypes.LOADING, LOADING);\r\n    yield takeEvery(mainTypes.API_spCallServer, API_spCallServer);\r\n    yield takeEvery(mainTypes.API_spCallServerSystem, API_spCallServerSystem);\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\MainTypes.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Redux\\Actions\\MainAction.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\Storage.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\Notification.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\PaginationTable.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ScrollTop.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ExportExcel.js",["1557"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\DecodeString.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\EncodeString.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidEmail.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\PaginationTable2.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidPhone.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidPassword.js",["1558","1559","1560"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\GetCookieValue.js",["1561","1562"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\ValidNumber.js",["1563","1564","1565"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatNumber.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatMoney.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\GetLatLngGoogle.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatDate.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Utils\\FormatDateJson.js",["1566"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Services\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\LeftMenu.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\HeaderMenu.js",["1567","1568","1569","1570","1571"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror,GetCookieValue } from \"../../Utils\";\r\nimport I18n from '../../Language';\r\n\r\nexport const HeaderMenu = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Name, setName] = useState(\"\");\r\n  const [Logo,setLogo] = useState({});\r\n\r\n  useEffect(() => {\r\n    onGetData();\r\n    setName(GetCookieValue(\"CustomerName\"));\r\n  }, []);\r\n\r\n  const onGetData = async () => {\r\n    const params = {\r\n      ApiKey: APIKey,\r\n      Json: '[{\"Type\":\"Logo\"}]',\r\n      func: \"WS_spGetInformation\",\r\n    };\r\n\r\n    try {\r\n      const list = await mainAction.API_spCallServer(params, dispatch);\r\n      setLogo(list[0]);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2 logo\">\r\n            <Link to=\"/\"><img src={Logo.ImgThumb} /></Link>\r\n          </div>\r\n          <div class=\"col-md-6 title-info\">\r\n            <ul>\r\n              <li><span>{I18n.t('Header.WorkTime')}: <span class=\"text-green\">{Logo.ImgFull}</span></span></li>\r\n              <li class=\"hide-xs\"> | </li>\r\n              <li><span>{I18n.t('Header.Hotline')}: <span class=\"text-green\"><phone>{Logo.ShortDesc}</phone> - <phone>{Logo.LongDesc}</phone></span></span></li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-md-4 title-select\">\r\n            <ul>\r\n              {Name === null || Name === \"\" ? (\r\n                <>\r\n                  <li><Link to=\"/dang-nhap\" class=\"btn btn-login\"><i class=\"fa fa-user-circle\"></i> {I18n.t('Header.Login')}</Link></li>\r\n                  <li><Link to=\"/dang-ky\" class=\"btn btn-register\"><i class=\"fa fa-user-plus\"></i> {I18n.t('Header.Register')}</Link></li>\r\n                </>\r\n              ) : (\r\n                <li class=\"pd10\"><a class=\"text-green\" target=\"_blank\" onClick={(e) => { localStorage.setItem(\"login\", \"\"); setName(\"\"); }}>{I18n.t('Header.Hello')} {Name}</a></li>\r\n              )}\r\n\r\n              <li class=\"pd10\">\r\n                <span>Tiếng Việt <img src=\"/assets/img/vn.png\" width=\"30\" height=\"20\" /></span>\r\n                {/* <span>Tiếng Anh <img src=\"/assets/img/en.png\" width=\"30\" height=\"20\" /></span> */}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </header>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\FooterMenu.js",["1572","1573","1574","1575","1576","1577","1578","1579","1580"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror } from \"../../Utils\";\r\nimport I18n from '../../Language';\r\n\r\nexport const FooterMenu = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [About, setAbout] = useState([]);\r\n  const [Helper, setHelper] = useState([]);\r\n  const [Policy, setPolicy] = useState([]);\r\n  const [Rules, setRules] = useState([]);\r\n  const [Company, setCompany] = useState([]);\r\n  const [ContactInfo, setContactInfo] = useState([]);\r\n  const [Social, setSocial] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onGetData();\r\n  }, []);\r\n\r\n  const onGetData = async () => {\r\n    const params = {\r\n      ApiKey: APIKey,\r\n      Json: '[{\"Type\":\"About\"},{\"Type\":\"Helper\"},{\"Type\":\"Rules\"},{\"Type\":\"Policy\"},{\"Type\":\"Company\"},{\"Type\":\"ContactInfo\"},{\"Type\":\"Social\"}]',\r\n      func: \"WS_spGetInformation\",\r\n    };\r\n\r\n    try {\r\n      const list = await mainAction.API_spCallServer(params, dispatch);\r\n      setAbout(list.filter(p => p.Type === \"About\"));\r\n      setHelper(list.filter(p => p.Type === \"Helper\"));\r\n      setPolicy(list.filter(p => p.Type === \"Policy\"));\r\n      setRules(list.filter(p => p.Type === \"Rules\"));\r\n      setCompany(list.filter(p => p.Type === \"Company\"));\r\n      setContactInfo(list.filter(p => p.Type === \"ContactInfo\"));\r\n      setSocial(list.filter(p => p.Type === \"Social\"));\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <footer>\r\n      <div class=\"mask\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.AboutCompany')}</h4>\r\n              {\r\n                About.map((item, index) => {\r\n                  return (<div class=\"text\" key={index}><Link to={\"/thong-tin-cong-ty?title=\" + item.Url}><i class=\"fa fa-chevron-right\"></i> {item.Title}</Link></div>)\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.Policy')}</h4>\r\n              {\r\n                Policy.map((item, index) => {\r\n                  return (<div class=\"text\" key={index}><Link to={\"/chinh-sach?title=\" + item.Url}><i class=\"fa fa-chevron-right\"></i> {item.Title}</Link></div>)\r\n                })\r\n              }\r\n            </div>\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.Helper')}</h4>\r\n              {\r\n                Helper.map((item, index) => {\r\n                  return (<div class=\"text\" key={index}><Link to={\"/tro-giup?title=\" + item.Url}><i class=\"fa fa-chevron-right\"></i> {item.Title}</Link></div>)\r\n                })\r\n              }\r\n            </div>\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.Rules')}</h4>\r\n              {\r\n                Rules.map((item, index) => {\r\n                  return (<div class=\"text\" key={index}><Link to={\"/quy-dinh-chung?title=\" + item.Url}><i class=\"fa fa-chevron-right\"></i> {item.Title}</Link></div>)\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n          <div class=\"row mt50\">\r\n            <div class=\"col-md-6 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.CompanyName')}</h4>\r\n              {\r\n                Company.map((item, index) => {\r\n                  return (<div class=\"box-text\" key={index}><div class=\"text-bold\"><img src={item.ImgThumb} /> {item.Title}</div><div class=\"text\">{item.ShortDesc}</div></div>)\r\n                })\r\n              }\r\n            </div>\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.Hotline')}</h4>\r\n              {\r\n                ContactInfo.map((item, index) => {\r\n                  return (<div class=\"box-text\" key={index}><div class=\"text\"><img src={item.ImgThumb} /> {item.Title}</div><div class=\"ml30\">{item.ShortDesc}</div></div>)\r\n                })\r\n              }\r\n            </div>\r\n            <div class=\"col-md-3 box-menu\">\r\n              <h4 className=\"text-lg-bold text-green\">{I18n.t('Footer.ConnectWithUs')}</h4>\r\n              {\r\n                Social.map((item, index) => {\r\n                  return (item.Keys == 1 ? (<a key={index} href={item.Url} class=\"box-img\" target=\"_blank\"><img height=\"40\" src={item.ImgThumb} /></a>) : (<div class=\"text mt20\" key={index}><a href={item.Url} target=\"_blank\"><img height=\"80\" src={item.ImgThumb} /></a></div>))\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Hooks\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Hooks\\useInput.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Home.js",["1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactHtml from 'raw-html-react';\r\n\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror, Alertwarning, Alertsuccess } from \"../../Utils\";\r\nimport I18n from '../../Language';\r\n\r\nexport const Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [LogoPartner, setLogoPartner] = useState([]);\r\n    const [DomesticService, setDomesticService] = useState([]);\r\n    const [InternationalService, setInternationalService] = useState([]);\r\n    const [Apps, setApps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        onGetData();\r\n        //getBranch();\r\n    }, []);\r\n\r\n    const onGetData = async () => {\r\n        const params = {\r\n            ApiKey: APIKey,\r\n            Json: '[{\"Type\":\"Partner\"},{\"Type\":\"Service\",\"Enabled\":1},{\"Type\":\"Rules\"},{\"Type\":\"Policy\"},{\"Type\":\"Apps\"}]',\r\n            func: \"WS_spGetInformation\",\r\n        };\r\n\r\n        try {\r\n            const list = await mainAction.API_spCallServer(params, dispatch);\r\n            setLogoPartner(list.filter(p => p.Type === \"Partner\"));\r\n            setDomesticService(list.filter(p => p.Type === \"Service\" && p.Keys === 'Domestic'));\r\n            setInternationalService(list.filter(p => p.Type === \"Service\" && p.Keys === 'International'));\r\n            setApps(list.filter(p => p.Type === \"Apps\"));\r\n            //setRules(list.filter(p => p.Type === \"Policy\"));\r\n        } catch (err) {\r\n            Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n            console.log(\"Eror\", err);\r\n        }\r\n    };\r\n\r\n    //#region BannerHtml\r\n\r\n    const BannerHtml = (\r\n        <section class=\"banner\">\r\n            <div id=\"carouselExampleCaptions\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div class=\"carousel-indicators\">\r\n                    <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"0\" class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\r\n                    <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\r\n                    <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\r\n                </div>\r\n                <div class=\"carousel-inner\">\r\n                    <div class=\"carousel-item active\">\r\n                        <img src=\"/assets/img/bg.png\" class=\"d-block w-100\" alt=\"...\" />\r\n                        <div class=\"carousel-caption d-none d-md-block\">\r\n                            <h5 class=\"h1\">FAST, TRUSTED & <br /> FLEXIBLE <span class=\"text-light-green\">SOLUTIONS</span></h5>\r\n                            <p>Some representative placeholder content for the first slide.</p>\r\n                            <Link to=\"/\" class=\"btn btn-action\">Xem chi tiết</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                        <img src=\"/assets/img/bg.png\" class=\"d-block w-100\" alt=\"...\" />\r\n                        <div class=\"carousel-caption d-none d-md-block\">\r\n                            <h5 class=\"h1\">FAST, TRUSTED & <br /> FLEXIBLE <span class=\"text-light-green\">SOLUTIONS</span></h5>\r\n                            <p>Some representative placeholder content for the first slide.</p>\r\n                            <Link to=\"/\" class=\"btn btn-action\">Xem chi tiết</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                        <img src=\"/assets/img/bg.png\" class=\"d-block w-100\" alt=\"...\" />\r\n                        <div class=\"carousel-caption d-none d-md-block\">\r\n                            <h5 class=\"h1\">FAST, TRUSTED & <br /> FLEXIBLE <span class=\"text-light-green\">SOLUTIONS</span></h5>\r\n                            <p>Some representative placeholder content for the first slide.</p>\r\n                            <Link to=\"/\" class=\"btn btn-action\">Xem chi tiết</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    //#endregion\r\n\r\n    //#region AbsoluteHtml\r\n\r\n    const [KeyAbsolute, setKeyAbsolute] = useState(1);\r\n    const [ShowPrice, setShowPrice] = useState(0);\r\n    const [ServiceId, setServiceId] = useState([]);\r\n    const [Weight, setWeight] = useState(0);\r\n    const [COD, setCOD] = useState(0);\r\n    const [Insured, setInsured] = useState();\r\n\r\n    const AbsoluteHtml = (\r\n        <section class=\"box-absolute\">\r\n            <div class=\"container\">\r\n                <div class=\"shadow\">\r\n                    <div class=\"box-title\">\r\n                        <ul>\r\n                            <li class={KeyAbsolute === 1 ? \"active\" : \"\"} onClick={(e) => setKeyAbsolute(1)}><img height=\"32\" src={KeyAbsolute === 1 ? \"/assets/img/icon32/search-active.png\" : \"/assets/img/icon32/search.png\"} /> {I18n.t('Banner.TrackingBill')}</li>\r\n                            <li class={KeyAbsolute === 2 ? \"active\" : \"\"} onClick={(e) => setKeyAbsolute(2)}><img height=\"32\" src={KeyAbsolute === 2 ? \"/assets/img/icon32/checklist-active.png\" : \"/assets/img/icon32/checklist.png\"} /> {I18n.t('Banner.CreateLading')} / {I18n.t('Banner.EstimatedPrice')}</li>\r\n                            <li class={KeyAbsolute === 3 ? \"active\" : \"\"}><Link to=\"diem-gui-hang\"><img src=\"/assets/img/icon32/Location.png\" height=\"32\" /> {I18n.t('Banner.PostOffice')}</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"box-content\">\r\n                        {KeyAbsolute === 1 ? (\r\n                            <form method=\"get\" action=\"/tra-cuu-don-hang\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-10\"><input type=\"text\" name=\"code\" class=\"form-control\" placeholder={I18n.t('Banner.InputLadingCode')} /></div>\r\n                                    <div class=\"col-md-2\"><button type=\"submit\" class=\"btn btn-success w-100\">{I18n.t('Banner.Search')}</button></div>\r\n                                </div>\r\n                            </form>\r\n                        ) : (<></>)}\r\n                        {KeyAbsolute === 2 ? (\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.ShippingRange')}</label>\r\n                                        <select class=\"form-control\">\r\n                                            <option value=\"0\">{I18n.t('TrackingPrice.Domestic')}</option>\r\n                                            <option value=\"1\">{I18n.t('TrackingPrice.International')}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.NumberPacked')}</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.InputNumberPacked')} />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.CityFrom')}</label>\r\n                                        <select class=\"form-control\">\r\n                                            <option value=\"0\">Trong nước</option>\r\n                                            <option value=\"1\">Trong nước</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.DistrictFrom')}</label>\r\n                                        <select class=\"form-control\">\r\n                                            <option value=\"0\">Trong nước</option>\r\n                                            <option value=\"1\">Trong nước</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.CityTo')}</label>\r\n                                        <select class=\"form-control\">\r\n                                            <option value=\"0\">Trong nước</option>\r\n                                            <option value=\"1\">Trong nước</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.DistrictTo')}</label>\r\n                                        <select class=\"form-control\">\r\n                                            <option value=\"0\">Trong nước</option>\r\n                                            <option value=\"1\">Trong nước</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.Weight')}</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.InputWeight')} />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.COD')}</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.InputCOD')} />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"frm-label\">{I18n.t('TrackingPrice.Insured')}</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.InputInsured')} />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label class=\"frm-label\">{I18n.t('TrackingPrice.Size')} ({I18n.t('TrackingPrice.Length')} x {I18n.t('TrackingPrice.Width')} x {I18n.t('TrackingPrice.Height')})</label>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.Length')} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.Width')} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <input type=\"text\" class=\"form-control\" placeholder={I18n.t('TrackingPrice.Height')} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-12 text-center\">\r\n                                    <button type=\"button\" class=\"btn btn-outline\">{I18n.t('TrackingPrice.RegulationsAndGoods')}</button>\r\n                                    <button type=\"button\" class=\"btn btn-success\">{I18n.t('TrackingPrice.TrackingPrice')}</button>\r\n                                </div>\r\n                                {\r\n                                    ShowPrice === 1 ?\r\n                                        (\r\n                                            <div class=\"col-md-12\">\r\n                                                <div class=\"h3 text-green\">{I18n.t('TrackingPrice.TheRightServiceForYou')}</div>\r\n                                            </div>\r\n                                        ) : (<></>)\r\n                                }\r\n                            </div>\r\n                        ) : (<></>)}\r\n                        {KeyAbsolute === 3 ? (\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\"></div>\r\n                                <div class=\"col-md-6\"></div>\r\n                            </div>\r\n                        ) : (<></>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    //#endregion\r\n\r\n    //#region ServicesHtml\r\n\r\n    const [TypeService, setTypeService] = useState(1);\r\n\r\n    const ServicesHtml = (\r\n        <section class=\"services\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-5 hide-xs\">\r\n                        <img class=\"left-img\" src=\"/assets/img/shipper.png\" />\r\n                    </div>\r\n                    <div class=\"col-md-7 text-center box-service\">\r\n                        <h2><span class=\"text-green\">Đa dạng</span> dịch vụ vận chuyển</h2>\r\n                        <div class=\"text-lg-bold\"><span class={TypeService === 1 ? \"active cursor\" : \"cursor\"} onClick={(e) => setTypeService(1)}>Trong nước</span> | <span class={TypeService === 2 ? \"active cursor\" : \"cursor\"} onClick={(e) => setTypeService(2)}>Quốc tế</span></div>\r\n                        {\r\n                            TypeService === 1 ? (\r\n                                <div class=\"row box-service\">\r\n                                    {\r\n                                        DomesticService.map((item, index) => {\r\n                                            return (\r\n                                                <div class=\"col-md-3\" key={index}>\r\n                                                    <div class=\"box-item\">\r\n                                                        <Link to={\"/dich-vu?title=\" + item.Url}>\r\n                                                            <img class=\"img-normal\" src={item.ImgThumb} />\r\n                                                            <img class=\"img-hover\" src={item.ImgFull} />\r\n                                                            <div class=\"text\">{item.Title}</div>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            ) : (\r\n                                <div class=\"row box-service\">\r\n                                    {\r\n                                        InternationalService.map((item, index) => {\r\n                                            return (\r\n                                                <div class=\"col-md-3\" key={index}>\r\n                                                    <div class=\"box-item\">\r\n                                                        <Link to={\"/dich-vu?title=\" + item.Url}>\r\n                                                            <img class=\"img-normal\" src={item.ImgThumb} />\r\n                                                            <img class=\"img-hover\" src={item.ImgFull} />\r\n                                                            <div class=\"text\">{item.Title}</div>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region BranchHtml\r\n\r\n    const BranchHtml = (\r\n        <section class=\"postoffices\">\r\n            <div class=\"container\">\r\n                <h2>{I18n.t('HomePage.BranchSearch')}</h2>\r\n                <div class=\"text\"><ReactHtml html={I18n.t('HomePage.BranchSearchDesc')} componentMap={{ Home }} /></div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region SloganHtml\r\n\r\n    const SloganHtml = (\r\n        <section class=\"slogan\">\r\n            <div class=\"container\">\r\n                <h1>NETCO POST</h1>\r\n                <h3><ReactHtml html={I18n.t('HomePage.SloganDesc')} componentMap={{ Home }} /></h3>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region ProfiveHtml\r\n\r\n    const ProfiveHtml = (\r\n        <section class=\"profive\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-3 text-right\">\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">63</div>\r\n                            <div class=\"text-desc\">TỈNH THÀNH</div>\r\n                            <div class=\"text-sm\">Giao nhận toàn bộ<br />63 tỉnh thành</div>\r\n                        </div>\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">63</div>\r\n                            <div class=\"text-desc\">CHI NHÁNH</div>\r\n                            <div class=\"text-sm\">45 chi nhánh và bưu cục<br />toàn quốc</div>\r\n                        </div>\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">47</div>\r\n                            <div class=\"text-desc\">POD</div>\r\n                            <div class=\"text-sm\">47 điểm phát hàng (POD)<br />toàn quốc</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <img src=\"/assets/img/profive.png\" />\r\n                    </div>\r\n                    <div class=\"col-md-3 text-left\">\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">4</div>\r\n                            <div class=\"text-desc\">TRUNG TÂM</div>\r\n                            <div class=\"text-sm\">4 Trung tâm điều hành,<br />kho hàng</div>\r\n                        </div>\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">2400+</div>\r\n                            <div class=\"text-desc\">NHÂN SỰ</div>\r\n                            <div class=\"text-sm\">2400+ nhân sự sẵn sàng<br />phục vụ</div>\r\n                        </div>\r\n                        <div class=\"box-item\">\r\n                            <div class=\"text-title\">1400+</div>\r\n                            <div class=\"text-desc\">PHƯƠNG TIỆN</div>\r\n                            <div class=\"text-sm\">1400+ phương tiện trên<br />mọi cung đường</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region PartnersHtml\r\n\r\n    const PartnersHtml = (\r\n        <section className=\"partners\">\r\n            <div class=\"container\">\r\n                <h2><ReactHtml html={I18n.t('HomePage.PartnerTitle')} componentMap={Home} /></h2>\r\n                <div class=\"text\"><ReactHtml html={I18n.t('HomePage.PartnerDesc')} componentMap={Home} /></div>\r\n                <div class=\"slider\">\r\n                    {\r\n                        LogoPartner.map((item, index) => {\r\n                            return (<div><a key={index} href={item.Url} target=\"_blank\"><img src={'https://netco.com.vn/' + item.ImgFull} /></a></div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region ContactsHtml\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [Name, bindName, setName] = useInput(\"\");\r\n    const [Email, bindEmail, setEmail] = useInput(\"\");\r\n    const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n    const [Content, bindContent, setContent] = useInput(\"\");\r\n\r\n    const NameRef = useRef();\r\n    const EmailRef = useRef();\r\n    const PhoneRef = useRef();\r\n    const ContentRef = useRef();\r\n\r\n    const onAction = async () => {\r\n        if (Name === \"\") {\r\n            Alertwarning(\"Vui lòng nhập tên của bạn !\");\r\n            return;\r\n        } else if (Email === \"\") {\r\n            Alertwarning(\"Vui lòng nhập email !\");\r\n            return;\r\n        } else if (Phone === \"\") {\r\n            Alertwarning(\"Vui lòng nhập số điện thoại !\");\r\n            return;\r\n        } else if (Content === \"\") {\r\n            Alertwarning(\"Vui lòng nhập nội dung cần hỗ trợ !\");\r\n            return;\r\n        } else {\r\n            setDisabled(true);\r\n            const pr = {\r\n                ApiKey: APIKey,\r\n                Json: '{\"Name\":\"' + Name + '\",\"Email\":\"' + Email + '\",\"Phone\":\"' + Phone + '\",\"Content\":\"' + Content + '\"}',\r\n                func: \"WS_spContact_Save\",\r\n            };\r\n            debugger\r\n            try {\r\n                const list = await mainAction.API_spCallServer(pr, dispatch);\r\n                Alertsuccess(I18n.t(\"ContactForm.Success\"));\r\n                setDisabled(false);\r\n                onReset();\r\n            } catch (err) {\r\n                //Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n                console.log(\"Eror\", err);\r\n                setDisabled(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onReset = () => {\r\n        setName(\"\");\r\n        setPhone(\"\");\r\n        setEmail(\"\");\r\n        setContent(\"\");\r\n    }\r\n\r\n    const ContactsHtml = (\r\n        <section class=\"contacts\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-1\"></div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"box-text\">\r\n                            <div class=\"h1\"><ReactHtml html={I18n.t('HomePage.ContactSlogan')} componentMap={Home} /></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"box-contact\">\r\n                            <div class=\"h5\">Thông tin hỗ trợ khách hàng</div>\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" ref={NameRef} value={Name} {...bindName} maxLength=\"50\" placeholder=\"Nhập họ tên\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" ref={EmailRef} value={Email} {...bindEmail} maxLength=\"50\" placeholder=\"Nhập email\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" ref={PhoneRef} value={Phone} {...bindPhone} maxLength=\"15\" placeholder=\"Nhập số điện thoại\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <textarea class=\"form-control\" rows=\"7\" ref={ContentRef} value={Content} {...bindContent} placeholder=\"NETCO POST có thể giúp gì cho bạn ? Hãy cho chúng tôi biết ...\"></textarea>\r\n                            </div>\r\n                            <div class=\"form-group text-right\">\r\n                                <button type=\"text\" class=\"btn btn-success btn-action\" disabled={disabled} onClick={(e) => onAction()}>Gửi</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    //#region DownloadHtml\r\n\r\n    const DownloadHtml = (\r\n        <section class=\"downloads\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"box-img\">\r\n                            <img src=\"/assets/img/mobile-oval.png\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"box-qr\">\r\n                            <div class=\"h2\">\r\n                                <ReactHtml html={I18n.t('HomePage.DownloadAppTitle')} componentMap={Home} />\r\n                            </div>\r\n                            <div class=\"text-lg\">\r\n                                <ReactHtml html={I18n.t('HomePage.DownloadAppDesc')} componentMap={Home} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    //#endregion\r\n\r\n    return (\r\n        <>\r\n            {BannerHtml}\r\n            {AbsoluteHtml}\r\n            {ServicesHtml}\r\n            {BranchHtml}\r\n            {SloganHtml}\r\n            {ProfiveHtml}\r\n            {PartnersHtml}\r\n            {ContactsHtml}\r\n            {DownloadHtml}\r\n        </>\r\n    )\r\n}\r\n","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Template\\TopMenu.js",["1606"],"import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport I18n from '../../Language';\r\n\r\nexport const TopMenu = () => {\r\n  const location = useLocation();\r\n  return (\r\n    <nav class=\"hide-xs\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\">\r\n            <ul class=\"nav nav-left\">\r\n              <li class={\"nav-item\" + (location.pathname === \"/\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/\">{I18n.t('TopMenu.Home')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/dich-vu\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/da-dang-dich-vu\">{I18n.t('TopMenu.Service')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/gioi-thieu\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/gioi-thieu\">{I18n.t('TopMenu.AboutUs')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/tin-tuc\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/tin-tuc\">{I18n.t('TopMenu.News')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/doi-tac\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/doi-tac\">{I18n.t('TopMenu.Partner')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/lien-he\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/lien-he\">{I18n.t('TopMenu.ContactUs')}</Link>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/tuyen-dung\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/tuyen-dung\">{I18n.t('TopMenu.Carreers')}</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <ul class=\"nav nav-right\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-bell\"></i></a>\r\n              </li>\r\n              <li class={\"nav-item\" + (location.pathname === \"/tra-cuu-don-hang\" ? \" active\" : \"\")}>\r\n                <Link class=\"nav-link\" to=\"/tra-cuu-don-hang\"><i class=\"fa fa-search\"></i></Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  );\r\n};","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\AboutUs.js",["1607","1608","1609","1610","1611"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport ReactHtml from 'raw-html-react';\r\n\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror, ScrollTop } from \"../../Utils\";\r\nimport I18n from '../../Language';\r\n\r\nexport const AboutUs = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const [Info, setInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        let type = \"\";\r\n        if (location.pathname === \"/tro-giup\")\r\n            type = \"Helper\";\r\n        else if (location.pathname === \"/chinh-sach\")\r\n            type = \"Policy\";\r\n        else if (location.pathname === \"/quy-dinh-chung\")\r\n            type = \"Rules\";\r\n        else type=\"About\";\r\n\r\n        if (location.search !== \"\" && location.search.indexOf(\"title=\") !== -1) {\r\n            let _params = location.search.replace(\"?\", \"\").split(\"&\").find((p) => p.indexOf(\"title=\") !== -1);\r\n            onGetDetail(type, _params.split(\"title=\")[1]);\r\n        }\r\n        else\r\n            onGetDetail(type, \"\");\r\n    }, [location]);\r\n\r\n    const onGetDetail = async (type, title) => {\r\n        const params = {\r\n            ApiKey: APIKey,\r\n            Json: '{\"Type\":\"' + type + '\",\"Keys\":\"' + title + '\"}',\r\n            func: \"WS_spGetInformation_Detail\",\r\n        };\r\n\r\n        try {\r\n            const list = await mainAction.API_spCallServer(params, dispatch);\r\n            debugger\r\n            if (list.length > 0) {\r\n                setInfo(list[0]);\r\n                ScrollTop();\r\n            }\r\n            else\r\n                Alerterror(\"Lỗi rồi\");\r\n        } catch (err) {\r\n            Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n            console.log(\"Eror\", err);\r\n        }\r\n    };\r\n    return (\r\n        <section class=\"main\">\r\n            <div class=\"container\">\r\n                <h1>{Info.Title}</h1>\r\n                <ReactHtml html={Info?.LongDesc?.replaceAll(\"src=\\\"/image/\", \"src=\\\"https://netco.com.vn/image/\").replaceAll('<iframe src=\"/Image/','<iframe src=\\\"https://docs.google.com/gview?url=https://netco.com.vn/image/')} componentMap={{ AboutUs }} />\r\n            </div>\r\n        </section>\r\n    )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Partners.js",["1612","1613","1614","1615","1616"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport ReactHtml from 'raw-html-react';\r\n\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror, ScrollTop } from \"../../Utils\";\r\nimport I18n from '../../Language';\r\n\r\nexport const Partners = () => {\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [Info, setInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        onGetData();\r\n    }, []);\r\n\r\n    const onGetData = async () => {\r\n        const params = {\r\n            ApiKey: APIKey,\r\n            Json: '{\"Type\":\"RegisterPartner\",\"Keys\":\"\"}',\r\n            func: \"WS_spGetInformation_Detail\",\r\n        };\r\n\r\n        try {\r\n            const list = await mainAction.API_spCallServer(params, dispatch);\r\n            if (list.length > 0)\r\n                setInfo(list[0]);\r\n            ScrollTop();\r\n        } catch (err) {\r\n            Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n            console.log(\"Eror\", err);\r\n        }\r\n    };\r\n    return (\r\n        <section class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <h2><ReactHtml html={I18n.t(\"AgentPage.RegisterAgent\")} componentMap={{ Partners }} /></h2>\r\n                    </div>\r\n                    <div class=\"col-md-6\" style={{ textAlign: \"justify\" }}>\r\n                        <ReactHtml html={Info.LongDesc} componentMap={{ Partners }} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Services.js",["1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\News.js",["1631","1632","1633"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Contacts.js",["1634","1635","1636","1637"],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Login.js",["1638","1639","1640","1641","1642","1643","1644"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { APIKey, APIKeySystem } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror, Alertwarning, ScrollTop, EncodeString } from \"../../Utils\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport I18n from '../../Language';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const [ShowPass, setShowPass] = useState(false);\r\n    const [UserName, bindUserName, setUserName] = useInput(\"\");\r\n    const [Password, bindPassword, setPassword] = useInput(\"\");\r\n\r\n    const UsernameRef = useRef();\r\n    const PasswordRef = useRef();\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"login\", \"\");\r\n    }, []);\r\n\r\n    const HandleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onAction();\r\n        }\r\n    }\r\n\r\n    const onAction = async () => {\r\n        if (UserName === \"\") {\r\n            Alertwarning(\"Vui lòng nhập email hoặc số điện thoại !\");\r\n            return;\r\n        } else if (Password === \"\") {\r\n            Alertwarning(\"Vui lòng nhập mật khẩu !\");\r\n            return;\r\n        } else {\r\n            setDisabled(true);\r\n            const params = {\r\n                ApiKey: APIKeySystem,\r\n                Json: Password,\r\n                func: \"APIC_GetEncoding\",\r\n            };\r\n\r\n            try {\r\n                const pwd = await mainAction.API_spCallServerSystem(params, dispatch);\r\n                const pr = {\r\n                    ApiKey: APIKeySystem,\r\n                    Json: '{\"UserName\":\"' + UserName + '\",\"Password\":\"' + pwd.data + '\"}',\r\n                    func: \"APIC_spCustomerCheckLogin_Json\",\r\n                };\r\n\r\n                const list = await mainAction.API_spCallServerSystem(pr, dispatch);\r\n                if (list.length > 0) {\r\n                    let ensc = EncodeString(JSON.stringify(list[0]));\r\n                    localStorage.setItem(\"login\", ensc);\r\n                    window.location.href = \"/\";\r\n                }\r\n                else {\r\n                    Alerterror(I18n.t(\"Alert.UserNameOrPasswordFail\"));\r\n                    setDisabled(false);\r\n                }\r\n            } catch (err) {\r\n                //Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n                console.log(\"Eror\", err);\r\n                setDisabled(false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section class=\"login\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\" style={{ backgroundImage: \"url('/assets/img/bg-login.png')\", backgroundPosition: \"center\", backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\" }}>\r\n\r\n                </div>\r\n                <div class=\"col-md-1\"></div>\r\n                <div class=\"col-md-3 form-pd\">\r\n                    <h2>{I18n.t(\"User.Login\")}</h2>\r\n                    <div class=\"text mb20\">{I18n.t(\"User.YouStillDontHaveAnAccount\")} <Link class=\"bold\" to=\"/dang-ky\">{I18n.t(\"User.RegisterNow\")}</Link></div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"frm-label\">{I18n.t(\"User.EmailOrPhoneNumber\")}</label>\r\n                        <input type=\"text\" class=\"form-control\" ref={UsernameRef} value={UserName} {...bindUserName} placeholder={I18n.t(\"User.EnterYourEmailOrPhoneNumber\")} />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"frm-label\">{I18n.t(\"User.Password\")}</label>\r\n                        <div class=\"input-group\">\r\n                            <input type={ShowPass ? \"text\" : \"password\"} ref={PasswordRef} value={Password} {...bindPassword} class=\"form-control\" placeholder={I18n.t(\"User.EnterYourPassword\")} onKeyDown={(e) => HandleKeyDown(e)} />\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn btn-success\" type=\"button\" onClick={(e) => { setShowPass(!ShowPass) }}>\r\n                                    <i class={ShowPass ? \"fa fa-eye\" : \"fa fa-eye-slash\"}></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right mb20\"><a target=\"_blank\" class=\"forgot-pw\" href=\"https://customer.netco.com.vn/forgot\">{I18n.t(\"User.ForgotYourPassword\")}</a></div>\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" class=\"btn btn-success btn-action\" disabled={disabled} onClick={(e) => onAction()}>{I18n.t(\"User.Login\")}</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-2\"></div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Register.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Branch.js",["1645","1646","1647","1648","1649"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport GoogleMap from \"google-map-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport ReactHtml from 'raw-html-react';\r\n\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alerterror } from \"../../Utils\";\r\nimport { APIKeySystem, GOOGLE_MAP_API_KEY } from \"../../Services\";\r\nimport I18n from '../../Language';\r\n\r\nconst AnyReactComponent = ({ Name, Address, Phone }) => (\r\n    <div className=\"map-marker\">\r\n        <i className=\"fa fa-map-marker green\" style={{ fontSize: 30 }}></i>\r\n        <div className=\"map-tooltip\">\r\n            <span className=\"bold\" style={{ textTransform: \"uppercase\" }}>\r\n                {Name}\r\n            </span>{\" \"}\r\n            <br />\r\n            <span>\r\n                <i className=\"fa fa-map-marker green\"></i> {Address}\r\n            </span>\r\n            <br />\r\n            <span>\r\n                <i className=\"fa fa-phone green\"></i> {Phone}\r\n            </span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport const Branch = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [disable, setDisable] = useState(false); // disable button;\r\n\r\n    const [Data, setData] = useState([]);\r\n    const [DataFilter, setDataFilter] = useState([]);\r\n\r\n    const [TextFilter, bindTextFilter, settextFilter] = useInput();\r\n    const TextFilterRef = useRef();\r\n\r\n    useEffect(() => {\r\n        _Init();\r\n    }, []);\r\n\r\n    const _Init = async () => {\r\n        try {\r\n            let pr = {\r\n                Json: \"\",\r\n                func: \"CPN_spGetPostOffic\",\r\n                API_key: APIKeySystem,\r\n            };\r\n            const data = await mainAction.API_spCallServerSystem(pr, dispatch);\r\n            setData(\r\n                data.filter(\r\n                    (p) =>\r\n                        (p.Types === 1 || p.Types === 2) &&\r\n                        p.Lat !== null &&\r\n                        p.Lng !== null &&\r\n                        p.Lat !== 0 &&\r\n                        p.Lng !== 0\r\n                )\r\n            );\r\n            setDataFilter(data.filter((p) => p.Types === 1 || p.Types === 2));\r\n        } catch (err) {\r\n            Alerterror(\"Vui lòng liên hệ CSKH NETCO để biết thêm thông tin !\");\r\n            console.log(\"Eror\", err);\r\n        }\r\n        setDisable(false);\r\n        mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    };\r\n\r\n    const onFilter = (e) => {\r\n        let keySearch = TextFilter.toUpperCase();\r\n        setDataFilter(Data.filter((p) => TextFilter === \"\" || p.POName.toUpperCase().indexOf(keySearch) !== -1 || p.POAddress.toUpperCase().indexOf(keySearch) !== -1));\r\n    };\r\n\r\n    const HandleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            let keySearch = TextFilter.toUpperCase();\r\n            setDataFilter(Data.filter((p) => TextFilter === \"\" || p.POName.toUpperCase().indexOf(keySearch) !== -1 || p.POAddress.toUpperCase().indexOf(keySearch) !== -1));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section class=\"content\">\r\n            <div class=\"container\">\r\n                <h3>{I18n.t('PostOfficePage.Title')}</h3>\r\n                <div class=\"text-lg-bold mb10\"><ReactHtml html={I18n.t('PostOfficePage.ShortDesc')} componentMap={{ Branch }} /></div>\r\n                <div class=\"text mb10\"><ReactHtml html={I18n.t('PostOfficePage.LongDesc')} componentMap={{ Branch }} /></div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div className=\"row po\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\" class=\"form-control\" ref={TextFilterRef} value={TextFilter} {...bindTextFilter} placeholder=\"Tìm tên bưu cục, địa chỉ ...\" onKeyDown={(e) => HandleKeyDown(e)} />\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn btn-success\" type=\"button\" onClick={(e) => { onFilter() }}>\r\n                                                <i class=\"fa fa-search\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"scroller\">\r\n                                {DataFilter.map((item, index) => {\r\n                                    return (\r\n                                        <div class=\"col-md-12\" key={index}>\r\n                                            <div class=\" po-item\">\r\n                                                <div class=\"po-name\"><span>{index + 1}. {item.POName} </span>\r\n                                                    <div class=\"pull-right text\">Xem đường đi</div>\r\n                                                </div>\r\n                                                <div><img src=\"/assets/img/icon24/phone.png\" /> {item.POPhone}</div>\r\n                                                <div class=\"po-address\"><img src=\"/assets/img/icon24/location.png\" /> {item.POAddress}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"map-area\">\r\n                            <GoogleMap\r\n                                apiKey={GOOGLE_MAP_API_KEY}\r\n                                center={[10.775869, 106.688661]}\r\n                                zoom={6}\r\n                            >\r\n                                {DataFilter.filter(\r\n                                    (p) =>\r\n                                        p.Lat !== null &&\r\n                                        p.Lng !== null &&\r\n                                        p.Lat !== 0 &&\r\n                                        p.Lng !== 0\r\n                                ).map((item, index) => {\r\n                                    return (\r\n                                        <AnyReactComponent\r\n                                            key={index}\r\n                                            lat={item.Lat}\r\n                                            lng={item.Lng}\r\n                                            Name={item.POName}\r\n                                            Address={item.POAddress}\r\n                                            Phone={item.POPhone}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </GoogleMap>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Language\\index.js",["1650"],"import I18n from 'i18n-js';\r\nimport en from './en.json';\r\nimport vn from './vn.json';\r\nimport { currentLang } from \"../Constants\";\r\nI18n.defaultLocale = 'en';\r\nI18n.locale = 'vn';\r\nI18n.fallbacks = true;\r\nI18n.translations = { en, vn };\r\nexport default I18n;\r\n","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Constants\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Constants\\currentLang.js",["1651"],"import {getData} from '../Utils';\r\nimport { LANE,VN } from \"../Enum\";\r\nexport const currentLang =  () => {\r\n    const cur = getData(LANE);\r\n    console.log(cur);\r\n    return cur;\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Enum\\index.js",[],"D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\Carreers.js",["1652","1653"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const Carreers = () => {\r\n    return (\r\n        <section class=\"banner\">\r\n            <div class=\"banner-mask\"></div>\r\n        </section>\r\n    )\r\n}","D:\\REACTJS\\REACTJS\\NETCO_WEB_REACTJS\\src\\Component\\Main\\ServiceDetail.js",["1654","1655","1656"],{"ruleId":"1657","replacedBy":"1658"},{"ruleId":"1659","replacedBy":"1660"},{"ruleId":"1661","severity":1,"message":"1662","line":2,"column":8,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1665","line":12,"column":20,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":30},{"ruleId":"1666","severity":1,"message":"1667","line":97,"column":6,"nodeType":"1668","endLine":97,"endColumn":8,"suggestions":"1669"},{"ruleId":"1666","severity":1,"message":"1670","line":107,"column":6,"nodeType":"1668","endLine":107,"endColumn":16,"suggestions":"1671"},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":23,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1665","line":14,"column":20,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1673","line":30,"column":27,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1674","line":45,"column":6,"nodeType":"1668","endLine":45,"endColumn":25,"suggestions":"1675"},{"ruleId":"1661","severity":1,"message":"1676","line":1,"column":28,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1662","line":2,"column":8,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1677","line":3,"column":8,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":23,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1665","line":13,"column":20,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":30},{"ruleId":"1666","severity":1,"message":"1678","line":21,"column":6,"nodeType":"1668","endLine":21,"endColumn":8,"suggestions":"1679"},{"ruleId":"1666","severity":1,"message":"1680","line":30,"column":6,"nodeType":"1668","endLine":30,"endColumn":16,"suggestions":"1681"},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":23,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1665","line":14,"column":20,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1673","line":30,"column":27,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1674","line":45,"column":6,"nodeType":"1668","endLine":45,"endColumn":25,"suggestions":"1682"},{"ruleId":"1666","severity":1,"message":"1683","line":11,"column":5,"nodeType":"1668","endLine":11,"endColumn":7,"suggestions":"1684"},{"ruleId":"1666","severity":1,"message":"1685","line":22,"column":21,"nodeType":"1686","endLine":22,"endColumn":34},{"ruleId":"1666","severity":1,"message":"1685","line":26,"column":24,"nodeType":"1686","endLine":26,"endColumn":37},{"ruleId":"1661","severity":1,"message":"1687","line":1,"column":40,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":48},{"ruleId":"1661","severity":1,"message":"1688","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":20},{"ruleId":"1689","severity":1,"message":"1690","line":82,"column":17,"nodeType":"1691","messageId":"1692","endLine":84,"endColumn":11},{"ruleId":"1689","severity":1,"message":"1690","line":95,"column":84,"nodeType":"1691","messageId":"1692","endLine":98,"endColumn":11},{"ruleId":"1689","severity":1,"message":"1690","line":112,"column":88,"nodeType":"1691","messageId":"1692","endLine":116,"endColumn":11},{"ruleId":"1689","severity":1,"message":"1690","line":118,"column":93,"nodeType":"1691","messageId":"1692","endLine":122,"endColumn":11},{"ruleId":"1689","severity":1,"message":"1690","line":129,"column":88,"nodeType":"1691","messageId":"1692","endLine":133,"endColumn":11},{"ruleId":"1689","severity":1,"message":"1690","line":136,"column":62,"nodeType":"1691","messageId":"1692","endLine":139,"endColumn":9},{"ruleId":"1693","severity":1,"message":"1694","line":6,"column":1,"nodeType":"1695","endLine":17,"endColumn":2},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1698","line":3,"column":18,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":30},{"ruleId":"1699","severity":1,"message":"1700","line":54,"column":39,"nodeType":"1701","messageId":"1702","endLine":54,"endColumn":41},{"ruleId":"1693","severity":1,"message":"1694","line":13,"column":1,"nodeType":"1695","endLine":49,"endColumn":2},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1699","severity":1,"message":"1700","line":19,"column":39,"nodeType":"1701","messageId":"1702","endLine":19,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":60,"column":39,"nodeType":"1701","messageId":"1702","endLine":60,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1699","severity":1,"message":"1700","line":19,"column":39,"nodeType":"1701","messageId":"1702","endLine":19,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":50,"column":39,"nodeType":"1701","messageId":"1702","endLine":50,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1705","line":2,"column":34,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":47},{"ruleId":"1699","severity":1,"message":"1700","line":20,"column":39,"nodeType":"1701","messageId":"1702","endLine":20,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":27,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":33,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":39},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":48,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":52},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1699","severity":1,"message":"1700","line":19,"column":39,"nodeType":"1701","messageId":"1702","endLine":19,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":54,"column":39,"nodeType":"1701","messageId":"1702","endLine":54,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":83,"column":39,"nodeType":"1701","messageId":"1702","endLine":83,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1706","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":19},{"ruleId":"1699","severity":1,"message":"1700","line":18,"column":64,"nodeType":"1701","messageId":"1702","endLine":18,"endColumn":66},{"ruleId":"1699","severity":1,"message":"1700","line":91,"column":64,"nodeType":"1701","messageId":"1702","endLine":91,"endColumn":66},{"ruleId":"1699","severity":1,"message":"1700","line":127,"column":39,"nodeType":"1701","messageId":"1702","endLine":127,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1705","line":2,"column":23,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1706","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":19},{"ruleId":"1699","severity":1,"message":"1700","line":20,"column":39,"nodeType":"1701","messageId":"1702","endLine":20,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1705","line":2,"column":23,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1706","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":19},{"ruleId":"1699","severity":1,"message":"1700","line":20,"column":39,"nodeType":"1701","messageId":"1702","endLine":20,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":51,"column":39,"nodeType":"1701","messageId":"1702","endLine":51,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":80,"column":39,"nodeType":"1701","messageId":"1702","endLine":80,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":108,"column":39,"nodeType":"1701","messageId":"1702","endLine":108,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":137,"column":39,"nodeType":"1701","messageId":"1702","endLine":137,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":167,"column":39,"nodeType":"1701","messageId":"1702","endLine":167,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":196,"column":39,"nodeType":"1701","messageId":"1702","endLine":196,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":224,"column":39,"nodeType":"1701","messageId":"1702","endLine":224,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":252,"column":39,"nodeType":"1701","messageId":"1702","endLine":252,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":280,"column":39,"nodeType":"1701","messageId":"1702","endLine":280,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":309,"column":39,"nodeType":"1701","messageId":"1702","endLine":309,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":338,"column":39,"nodeType":"1701","messageId":"1702","endLine":338,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":366,"column":39,"nodeType":"1701","messageId":"1702","endLine":366,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1699","severity":1,"message":"1700","line":19,"column":39,"nodeType":"1701","messageId":"1702","endLine":19,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":61,"column":39,"nodeType":"1701","messageId":"1702","endLine":61,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1699","severity":1,"message":"1700","line":20,"column":39,"nodeType":"1701","messageId":"1702","endLine":20,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":62,"column":39,"nodeType":"1701","messageId":"1702","endLine":62,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1661","severity":1,"message":"1703","line":1,"column":47,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1704","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1705","line":2,"column":23,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1707","line":2,"column":56,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":75},{"ruleId":"1699","severity":1,"message":"1700","line":459,"column":39,"nodeType":"1701","messageId":"1702","endLine":459,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":489,"column":39,"nodeType":"1701","messageId":"1702","endLine":489,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":519,"column":39,"nodeType":"1701","messageId":"1702","endLine":519,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":549,"column":39,"nodeType":"1701","messageId":"1702","endLine":549,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":579,"column":39,"nodeType":"1701","messageId":"1702","endLine":579,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":609,"column":39,"nodeType":"1701","messageId":"1702","endLine":609,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":15,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":21,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1706","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":19},{"ruleId":"1699","severity":1,"message":"1700","line":545,"column":39,"nodeType":"1701","messageId":"1702","endLine":545,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":576,"column":39,"nodeType":"1701","messageId":"1702","endLine":576,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1708","line":1,"column":8,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":13},{"ruleId":"1709","severity":1,"message":"1710","line":2,"column":80,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":81,"suggestions":"1712"},{"ruleId":"1709","severity":1,"message":"1713","line":2,"column":83,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":84,"suggestions":"1714"},{"ruleId":"1709","severity":1,"message":"1715","line":2,"column":86,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":87,"suggestions":"1716"},{"ruleId":"1709","severity":1,"message":"1710","line":4,"column":71,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":72,"suggestions":"1717"},{"ruleId":"1709","severity":1,"message":"1713","line":4,"column":74,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":75,"suggestions":"1718"},{"ruleId":"1709","severity":1,"message":"1715","line":4,"column":77,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":78,"suggestions":"1719"},{"ruleId":"1661","severity":1,"message":"1720","line":10,"column":9,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1662","line":4,"column":8,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1721","line":16,"column":3,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1722","line":19,"column":10,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1723","line":22,"column":10,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1704","line":22,"column":15,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1705","line":22,"column":23,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":36},{"ruleId":"1666","severity":1,"message":"1724","line":41,"column":6,"nodeType":"1668","endLine":41,"endColumn":8,"suggestions":"1725"},{"ruleId":"1661","severity":1,"message":"1726","line":44,"column":10,"nodeType":"1663","messageId":"1664","endLine":44,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1727","line":44,"column":16,"nodeType":"1663","messageId":"1664","endLine":44,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1728","line":45,"column":10,"nodeType":"1663","messageId":"1664","endLine":45,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1729","line":45,"column":26,"nodeType":"1663","messageId":"1664","endLine":45,"endColumn":43},{"ruleId":"1661","severity":1,"message":"1730","line":76,"column":18,"nodeType":"1663","messageId":"1664","endLine":76,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1731","line":133,"column":23,"nodeType":"1663","messageId":"1664","endLine":133,"endColumn":37},{"ruleId":"1657","replacedBy":"1732"},{"ruleId":"1659","replacedBy":"1733"},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1722","line":7,"column":10,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1726","line":20,"column":10,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1727","line":20,"column":16,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1728","line":23,"column":10,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1734","line":24,"column":10,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1735","line":24,"column":22,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1736","line":25,"column":19,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1737","line":38,"column":9,"nodeType":"1663","messageId":"1664","endLine":38,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1738","line":39,"column":9,"nodeType":"1663","messageId":"1664","endLine":39,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1677","line":6,"column":8,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1742","line":12,"column":3,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1743","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1736","line":22,"column":19,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":20,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":24,"column":22,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1746","line":30,"column":10,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1747","line":32,"column":38,"nodeType":"1663","messageId":"1664","endLine":32,"endColumn":51},{"ruleId":"1666","severity":1,"message":"1748","line":40,"column":6,"nodeType":"1668","endLine":40,"endColumn":8,"suggestions":"1749"},{"ruleId":"1661","severity":1,"message":"1750","line":79,"column":19,"nodeType":"1663","messageId":"1664","endLine":79,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1751","line":81,"column":10,"nodeType":"1663","messageId":"1664","endLine":81,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1752","line":85,"column":9,"nodeType":"1663","messageId":"1664","endLine":85,"endColumn":19},{"ruleId":"1753","severity":1,"message":"1754","line":101,"column":34,"nodeType":"1755","messageId":"1756","endLine":101,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1662","line":3,"column":8,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":5,"column":2,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1758","line":6,"column":2,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":12},{"ruleId":"1661","severity":1,"message":"1741","line":7,"column":2,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1739","line":11,"column":10,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":12,"column":10,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1760","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1761","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1762","line":18,"column":10,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":19,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1736","line":28,"column":18,"nodeType":"1663","messageId":"1664","endLine":28,"endColumn":28},{"ruleId":"1661","severity":1,"message":"1763","line":29,"column":9,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1764","line":29,"column":20,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":32},{"ruleId":"1661","severity":1,"message":"1765","line":39,"column":9,"nodeType":"1663","messageId":"1664","endLine":39,"endColumn":16},{"ruleId":"1666","severity":1,"message":"1748","line":55,"column":5,"nodeType":"1668","endLine":55,"endColumn":7,"suggestions":"1766"},{"ruleId":"1661","severity":1,"message":"1767","line":56,"column":8,"nodeType":"1663","messageId":"1664","endLine":56,"endColumn":15},{"ruleId":"1753","severity":1,"message":"1754","line":96,"column":63,"nodeType":"1755","messageId":"1756","endLine":96,"endColumn":65},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1741","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1768","line":10,"column":10,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1739","line":11,"column":10,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":12,"column":10,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1744","line":19,"column":20,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":25,"column":22,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1769","line":33,"column":9,"nodeType":"1663","messageId":"1664","endLine":33,"endColumn":22},{"ruleId":"1666","severity":1,"message":"1770","line":54,"column":6,"nodeType":"1668","endLine":54,"endColumn":8,"suggestions":"1771"},{"ruleId":"1661","severity":1,"message":"1772","line":105,"column":13,"nodeType":"1663","messageId":"1664","endLine":105,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1773","line":126,"column":13,"nodeType":"1663","messageId":"1664","endLine":126,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1742","line":4,"column":3,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1741","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1739","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":14,"column":10,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1736","line":20,"column":19,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1744","line":21,"column":20,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1774","line":25,"column":21,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":33},{"ruleId":"1661","severity":1,"message":"1745","line":26,"column":22,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1748","line":47,"column":6,"nodeType":"1668","endLine":47,"endColumn":8,"suggestions":"1775"},{"ruleId":"1661","severity":1,"message":"1776","line":81,"column":9,"nodeType":"1663","messageId":"1664","endLine":81,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1777","line":126,"column":9,"nodeType":"1663","messageId":"1664","endLine":126,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1779","line":131,"column":17,"nodeType":"1780","messageId":"1781","endLine":131,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1782","line":147,"column":9,"nodeType":"1663","messageId":"1664","endLine":147,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1783","line":1,"column":46,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":59},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1662","line":4,"column":8,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1741","line":18,"column":3,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1784","line":22,"column":3,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1759","line":31,"column":10,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1785","line":44,"column":10,"nodeType":"1663","messageId":"1664","endLine":44,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1786","line":44,"column":22,"nodeType":"1663","messageId":"1664","endLine":44,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1744","line":45,"column":20,"nodeType":"1663","messageId":"1664","endLine":45,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1787","line":58,"column":24,"nodeType":"1663","messageId":"1664","endLine":58,"endColumn":39},{"ruleId":"1661","severity":1,"message":"1788","line":59,"column":10,"nodeType":"1663","messageId":"1664","endLine":59,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1745","line":59,"column":22,"nodeType":"1663","messageId":"1664","endLine":59,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1789","line":62,"column":10,"nodeType":"1663","messageId":"1664","endLine":62,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1790","line":62,"column":24,"nodeType":"1663","messageId":"1664","endLine":62,"endColumn":39},{"ruleId":"1661","severity":1,"message":"1791","line":65,"column":10,"nodeType":"1663","messageId":"1664","endLine":65,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1792","line":65,"column":25,"nodeType":"1663","messageId":"1664","endLine":65,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1793","line":68,"column":10,"nodeType":"1663","messageId":"1664","endLine":68,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1794","line":68,"column":27,"nodeType":"1663","messageId":"1664","endLine":68,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1795","line":71,"column":10,"nodeType":"1663","messageId":"1664","endLine":71,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1796","line":71,"column":27,"nodeType":"1663","messageId":"1664","endLine":71,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1797","line":133,"column":10,"nodeType":"1663","messageId":"1664","endLine":133,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1798","line":158,"column":22,"nodeType":"1663","messageId":"1664","endLine":158,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1799","line":167,"column":9,"nodeType":"1663","messageId":"1664","endLine":167,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1800","line":195,"column":10,"nodeType":"1663","messageId":"1664","endLine":195,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1801","line":195,"column":27,"nodeType":"1663","messageId":"1664","endLine":195,"endColumn":46},{"ruleId":"1661","severity":1,"message":"1802","line":198,"column":25,"nodeType":"1663","messageId":"1664","endLine":198,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1803","line":199,"column":22,"nodeType":"1663","messageId":"1664","endLine":199,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1804","line":199,"column":38,"nodeType":"1663","messageId":"1664","endLine":199,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1805","line":200,"column":10,"nodeType":"1663","messageId":"1664","endLine":200,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1806","line":200,"column":21,"nodeType":"1663","messageId":"1664","endLine":200,"endColumn":33},{"ruleId":"1661","severity":1,"message":"1807","line":201,"column":16,"nodeType":"1663","messageId":"1664","endLine":201,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1808","line":203,"column":22,"nodeType":"1663","messageId":"1664","endLine":203,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1809","line":203,"column":38,"nodeType":"1663","messageId":"1664","endLine":203,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1810","line":205,"column":27,"nodeType":"1663","messageId":"1664","endLine":205,"endColumn":46},{"ruleId":"1661","severity":1,"message":"1811","line":208,"column":10,"nodeType":"1663","messageId":"1664","endLine":208,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1812","line":208,"column":26,"nodeType":"1663","messageId":"1664","endLine":208,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1813","line":209,"column":24,"nodeType":"1663","messageId":"1664","endLine":209,"endColumn":40},{"ruleId":"1661","severity":1,"message":"1814","line":215,"column":10,"nodeType":"1663","messageId":"1664","endLine":215,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1815","line":215,"column":27,"nodeType":"1663","messageId":"1664","endLine":215,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1816","line":228,"column":15,"nodeType":"1663","messageId":"1664","endLine":228,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1817","line":230,"column":19,"nodeType":"1663","messageId":"1664","endLine":230,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1818","line":233,"column":9,"nodeType":"1663","messageId":"1664","endLine":233,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1819","line":235,"column":9,"nodeType":"1663","messageId":"1664","endLine":235,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1820","line":242,"column":10,"nodeType":"1663","messageId":"1664","endLine":242,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1821","line":242,"column":25,"nodeType":"1663","messageId":"1664","endLine":242,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1822","line":247,"column":10,"nodeType":"1663","messageId":"1664","endLine":247,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1823","line":247,"column":21,"nodeType":"1663","messageId":"1664","endLine":247,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1824","line":249,"column":10,"nodeType":"1663","messageId":"1664","endLine":249,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1825","line":249,"column":22,"nodeType":"1663","messageId":"1664","endLine":249,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1826","line":254,"column":9,"nodeType":"1663","messageId":"1664","endLine":254,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1827","line":259,"column":9,"nodeType":"1663","messageId":"1664","endLine":259,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1828","line":261,"column":9,"nodeType":"1663","messageId":"1664","endLine":261,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1829","line":279,"column":10,"nodeType":"1663","messageId":"1664","endLine":279,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1830","line":279,"column":36,"nodeType":"1663","messageId":"1664","endLine":279,"endColumn":60},{"ruleId":"1661","severity":1,"message":"1831","line":280,"column":10,"nodeType":"1663","messageId":"1664","endLine":280,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1832","line":280,"column":23,"nodeType":"1663","messageId":"1664","endLine":280,"endColumn":37},{"ruleId":"1661","severity":1,"message":"1833","line":283,"column":10,"nodeType":"1663","messageId":"1664","endLine":283,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1834","line":284,"column":18,"nodeType":"1663","messageId":"1664","endLine":284,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1835","line":292,"column":10,"nodeType":"1663","messageId":"1664","endLine":292,"endColumn":26},{"ruleId":"1661","severity":1,"message":"1836","line":293,"column":10,"nodeType":"1663","messageId":"1664","endLine":293,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1837","line":294,"column":10,"nodeType":"1663","messageId":"1664","endLine":294,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1751","line":300,"column":10,"nodeType":"1663","messageId":"1664","endLine":300,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1838","line":308,"column":10,"nodeType":"1663","messageId":"1664","endLine":308,"endColumn":18},{"ruleId":"1666","severity":1,"message":"1839","line":327,"column":6,"nodeType":"1668","endLine":327,"endColumn":8,"suggestions":"1840"},{"ruleId":"1666","severity":1,"message":"1678","line":332,"column":6,"nodeType":"1668","endLine":332,"endColumn":20,"suggestions":"1841"},{"ruleId":"1661","severity":1,"message":"1842","line":400,"column":9,"nodeType":"1663","messageId":"1664","endLine":400,"endColumn":21},{"ruleId":"1843","severity":1,"message":"1844","line":732,"column":27,"nodeType":"1845","endLine":735,"endColumn":29},{"ruleId":"1843","severity":1,"message":"1844","line":766,"column":27,"nodeType":"1845","endLine":769,"endColumn":29},{"ruleId":"1699","severity":1,"message":"1700","line":873,"column":48,"nodeType":"1701","messageId":"1702","endLine":873,"endColumn":50},{"ruleId":"1699","severity":1,"message":"1700","line":1151,"column":33,"nodeType":"1701","messageId":"1702","endLine":1151,"endColumn":35},{"ruleId":"1699","severity":1,"message":"1700","line":1152,"column":28,"nodeType":"1701","messageId":"1702","endLine":1152,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1752","line":1158,"column":9,"nodeType":"1663","messageId":"1664","endLine":1158,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1846","line":1174,"column":9,"nodeType":"1663","messageId":"1664","endLine":1174,"endColumn":17},{"ruleId":"1699","severity":1,"message":"1700","line":1177,"column":13,"nodeType":"1701","messageId":"1702","endLine":1177,"endColumn":15},{"ruleId":"1699","severity":1,"message":"1700","line":1183,"column":20,"nodeType":"1701","messageId":"1702","endLine":1183,"endColumn":22},{"ruleId":"1753","severity":1,"message":"1754","line":1292,"column":32,"nodeType":"1755","messageId":"1756","endLine":1292,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1847","line":1407,"column":10,"nodeType":"1663","messageId":"1664","endLine":1407,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1848","line":1523,"column":9,"nodeType":"1663","messageId":"1664","endLine":1523,"endColumn":18},{"ruleId":"1699","severity":1,"message":"1700","line":1557,"column":38,"nodeType":"1701","messageId":"1702","endLine":1557,"endColumn":40},{"ruleId":"1699","severity":1,"message":"1700","line":1571,"column":38,"nodeType":"1701","messageId":"1702","endLine":1571,"endColumn":40},{"ruleId":"1699","severity":1,"message":"1700","line":1625,"column":20,"nodeType":"1701","messageId":"1702","endLine":1625,"endColumn":22},{"ruleId":"1699","severity":1,"message":"1700","line":1646,"column":20,"nodeType":"1701","messageId":"1702","endLine":1646,"endColumn":22},{"ruleId":"1699","severity":1,"message":"1700","line":1651,"column":23,"nodeType":"1701","messageId":"1702","endLine":1651,"endColumn":25},{"ruleId":"1849","severity":1,"message":"1850","line":1815,"column":7,"nodeType":"1851","messageId":"1702","endLine":1815,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1773","line":1866,"column":15,"nodeType":"1663","messageId":"1664","endLine":1866,"endColumn":27},{"ruleId":"1666","severity":1,"message":"1852","line":2059,"column":6,"nodeType":"1668","endLine":2059,"endColumn":20,"suggestions":"1853"},{"ruleId":"1666","severity":1,"message":"1854","line":2094,"column":6,"nodeType":"1668","endLine":2094,"endColumn":25,"suggestions":"1855"},{"ruleId":"1666","severity":1,"message":"1856","line":2150,"column":6,"nodeType":"1668","endLine":2150,"endColumn":23,"suggestions":"1857"},{"ruleId":"1753","severity":1,"message":"1858","line":2945,"column":48,"nodeType":"1755","messageId":"1859","endLine":2945,"endColumn":50},{"ruleId":"1843","severity":1,"message":"1844","line":3609,"column":7,"nodeType":"1845","endLine":3612,"endColumn":9},{"ruleId":"1843","severity":1,"message":"1844","line":3613,"column":7,"nodeType":"1845","endLine":3616,"endColumn":9},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1861","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1862","line":14,"column":10,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1762","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":24,"column":20,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":28,"column":22,"nodeType":"1663","messageId":"1664","endLine":28,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1748","line":39,"column":6,"nodeType":"1668","endLine":39,"endColumn":8,"suggestions":"1863"},{"ruleId":"1661","severity":1,"message":"1864","line":41,"column":10,"nodeType":"1663","messageId":"1664","endLine":41,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1779","line":133,"column":17,"nodeType":"1780","messageId":"1781","endLine":133,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":7,"column":3,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1861","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1742","line":11,"column":3,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":22,"column":20,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1865","line":27,"column":16,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":23},{"ruleId":"1666","severity":1,"message":"1748","line":36,"column":6,"nodeType":"1668","endLine":36,"endColumn":8,"suggestions":"1866"},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1744","line":24,"column":20,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1867","line":27,"column":20,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1786","line":28,"column":22,"nodeType":"1663","messageId":"1664","endLine":28,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1745","line":31,"column":22,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":48,"column":6,"nodeType":"1668","endLine":48,"endColumn":8,"suggestions":"1869"},{"ruleId":"1661","severity":1,"message":"1870","line":61,"column":9,"nodeType":"1663","messageId":"1664","endLine":61,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1871","line":139,"column":9,"nodeType":"1663","messageId":"1664","endLine":139,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1871","line":160,"column":9,"nodeType":"1663","messageId":"1664","endLine":160,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":20,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1867","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1786","line":27,"column":22,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1745","line":30,"column":22,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":59,"column":6,"nodeType":"1668","endLine":59,"endColumn":8,"suggestions":"1872"},{"ruleId":"1661","severity":1,"message":"1870","line":90,"column":9,"nodeType":"1663","messageId":"1664","endLine":90,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1871","line":193,"column":9,"nodeType":"1663","messageId":"1664","endLine":193,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1871","line":214,"column":9,"nodeType":"1663","messageId":"1664","endLine":214,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":20,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1867","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1786","line":27,"column":22,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1745","line":30,"column":22,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":47,"column":6,"nodeType":"1668","endLine":47,"endColumn":8,"suggestions":"1873"},{"ruleId":"1661","severity":1,"message":"1870","line":60,"column":9,"nodeType":"1663","messageId":"1664","endLine":60,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1871","line":139,"column":9,"nodeType":"1663","messageId":"1664","endLine":139,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1871","line":160,"column":9,"nodeType":"1663","messageId":"1664","endLine":160,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1861","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1742","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1762","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1874","line":22,"column":10,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1875","line":22,"column":19,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":28},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":20,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":27,"column":22,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1748","line":40,"column":6,"nodeType":"1668","endLine":40,"endColumn":8,"suggestions":"1876"},{"ruleId":"1661","severity":1,"message":"1877","line":87,"column":9,"nodeType":"1663","messageId":"1664","endLine":87,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":112,"column":15,"nodeType":"1780","messageId":"1781","endLine":112,"endColumn":27},{"ruleId":"1753","severity":1,"message":"1754","line":117,"column":49,"nodeType":"1755","messageId":"1756","endLine":117,"endColumn":51},{"ruleId":"1699","severity":1,"message":"1700","line":207,"column":45,"nodeType":"1701","messageId":"1702","endLine":207,"endColumn":47},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1744","line":23,"column":20,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1867","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1786","line":27,"column":22,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1745","line":30,"column":22,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":47,"column":6,"nodeType":"1668","endLine":47,"endColumn":8,"suggestions":"1878"},{"ruleId":"1661","severity":1,"message":"1870","line":63,"column":11,"nodeType":"1663","messageId":"1664","endLine":63,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1871","line":143,"column":9,"nodeType":"1663","messageId":"1664","endLine":143,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1871","line":164,"column":9,"nodeType":"1663","messageId":"1664","endLine":164,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1742","line":12,"column":3,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":25,"column":20,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":29,"column":22,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1879","line":35,"column":10,"nodeType":"1663","messageId":"1664","endLine":35,"endColumn":26},{"ruleId":"1666","severity":1,"message":"1748","line":46,"column":6,"nodeType":"1668","endLine":46,"endColumn":8,"suggestions":"1880"},{"ruleId":"1661","severity":1,"message":"1871","line":60,"column":11,"nodeType":"1663","messageId":"1664","endLine":60,"endColumn":12},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1740","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":10,"column":3,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1742","line":12,"column":3,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":29,"column":20,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":33,"column":22,"nodeType":"1663","messageId":"1664","endLine":33,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1881","line":35,"column":20,"nodeType":"1663","messageId":"1664","endLine":35,"endColumn":32},{"ruleId":"1661","severity":1,"message":"1882","line":36,"column":18,"nodeType":"1663","messageId":"1664","endLine":36,"endColumn":28},{"ruleId":"1661","severity":1,"message":"1883","line":37,"column":9,"nodeType":"1663","messageId":"1664","endLine":37,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1884","line":38,"column":9,"nodeType":"1663","messageId":"1664","endLine":38,"endColumn":18},{"ruleId":"1666","severity":1,"message":"1748","line":52,"column":6,"nodeType":"1668","endLine":52,"endColumn":8,"suggestions":"1885"},{"ruleId":"1661","severity":1,"message":"1871","line":66,"column":11,"nodeType":"1663","messageId":"1664","endLine":66,"endColumn":12},{"ruleId":"1778","severity":1,"message":"1779","line":148,"column":17,"nodeType":"1780","messageId":"1781","endLine":148,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1886","line":2,"column":23,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":34},{"ruleId":"1887","severity":1,"message":"1888","line":12,"column":7,"nodeType":"1845","messageId":"1889","endLine":12,"endColumn":54,"fix":"1890"},{"ruleId":"1891","severity":1,"message":"1892","line":17,"column":3,"nodeType":"1893","messageId":"1894","endLine":55,"endColumn":4},{"ruleId":"1895","severity":1,"message":"1896","line":17,"column":3,"nodeType":"1893","messageId":"1897","endLine":55,"endColumn":4},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1898","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":22,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":26},{"ruleId":"1661","severity":1,"message":"1899","line":4,"column":28,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":33},{"ruleId":"1661","severity":1,"message":"1740","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1758","line":7,"column":3,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1741","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1900","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1901","line":18,"column":38,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1902","line":23,"column":9,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":17},{"ruleId":"1666","severity":1,"message":"1903","line":42,"column":6,"nodeType":"1668","endLine":42,"endColumn":8,"suggestions":"1904"},{"ruleId":"1699","severity":1,"message":"1700","line":101,"column":20,"nodeType":"1701","messageId":"1702","endLine":101,"endColumn":22},{"ruleId":"1905","severity":1,"message":"1906","line":109,"column":9,"nodeType":"1845","endLine":116,"endColumn":10},{"ruleId":"1907","severity":1,"message":"1908","line":109,"column":9,"nodeType":"1845","endLine":116,"endColumn":10},{"ruleId":"1905","severity":1,"message":"1906","line":124,"column":11,"nodeType":"1845","endLine":124,"endColumn":73},{"ruleId":"1905","severity":1,"message":"1906","line":135,"column":9,"nodeType":"1845","endLine":142,"endColumn":10},{"ruleId":"1907","severity":1,"message":"1908","line":135,"column":9,"nodeType":"1845","endLine":142,"endColumn":10},{"ruleId":"1909","severity":1,"message":"1910","line":137,"column":16,"nodeType":"1691","messageId":"1911","endLine":137,"endColumn":30},{"ruleId":"1905","severity":1,"message":"1906","line":152,"column":15,"nodeType":"1845","endLine":161,"endColumn":16},{"ruleId":"1905","severity":1,"message":"1906","line":169,"column":9,"nodeType":"1845","endLine":176,"endColumn":10},{"ruleId":"1907","severity":1,"message":"1908","line":169,"column":9,"nodeType":"1845","endLine":176,"endColumn":10},{"ruleId":"1905","severity":1,"message":"1906","line":185,"column":11,"nodeType":"1845","endLine":185,"endColumn":73},{"ruleId":"1912","severity":1,"message":"1913","line":197,"column":52,"nodeType":"1914","messageId":"1915","endLine":197,"endColumn":87},{"ruleId":"1843","severity":1,"message":"1844","line":198,"column":13,"nodeType":"1845","endLine":198,"endColumn":69},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1722","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1916","line":8,"column":9,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1874","line":9,"column":10,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1917","line":11,"column":9,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1918","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":20},{"ruleId":"1666","severity":1,"message":"1919","line":29,"column":6,"nodeType":"1668","endLine":29,"endColumn":8,"suggestions":"1920"},{"ruleId":"1905","severity":1,"message":"1906","line":458,"column":19,"nodeType":"1845","endLine":458,"endColumn":76},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1742","line":5,"column":3,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1741","line":8,"column":3,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1861","line":11,"column":3,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1921","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1739","line":15,"column":10,"nodeType":"1663","messageId":"1664","endLine":15,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":16,"column":10,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1744","line":22,"column":20,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":24,"column":22,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":31,"column":6,"nodeType":"1668","endLine":31,"endColumn":8,"suggestions":"1922"},{"ruleId":"1778","severity":1,"message":"1779","line":174,"column":19,"nodeType":"1780","messageId":"1781","endLine":174,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1741","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1739","line":5,"column":10,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1923","line":30,"column":10,"nodeType":"1663","messageId":"1664","endLine":30,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1744","line":31,"column":20,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1788","line":33,"column":10,"nodeType":"1663","messageId":"1664","endLine":33,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1745","line":33,"column":22,"nodeType":"1663","messageId":"1664","endLine":33,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1924","line":34,"column":10,"nodeType":"1663","messageId":"1664","endLine":34,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1925","line":34,"column":23,"nodeType":"1663","messageId":"1664","endLine":34,"endColumn":37},{"ruleId":"1666","severity":1,"message":"1868","line":50,"column":6,"nodeType":"1668","endLine":50,"endColumn":8,"suggestions":"1926"},{"ruleId":"1661","severity":1,"message":"1927","line":54,"column":11,"nodeType":"1663","messageId":"1664","endLine":54,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1757","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1742","line":5,"column":3,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1741","line":6,"column":3,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1928","line":10,"column":10,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":33},{"ruleId":"1661","severity":1,"message":"1739","line":11,"column":10,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1929","line":15,"column":10,"nodeType":"1663","messageId":"1664","endLine":15,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1698","line":16,"column":18,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1744","line":21,"column":20,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":23,"column":22,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1868","line":36,"column":6,"nodeType":"1668","endLine":36,"endColumn":8,"suggestions":"1930"},{"ruleId":"1753","severity":1,"message":"1754","line":114,"column":28,"nodeType":"1755","messageId":"1756","endLine":114,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1741","line":7,"column":3,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1739","line":12,"column":10,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1698","line":14,"column":18,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1744","line":20,"column":20,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":22,"column":22,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1748","line":48,"column":6,"nodeType":"1668","endLine":48,"endColumn":8,"suggestions":"1931"},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1741","line":11,"column":3,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1929","line":16,"column":10,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1768","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1744","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":31,"column":22,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1932","line":50,"column":10,"nodeType":"1663","messageId":"1664","endLine":50,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1933","line":50,"column":19,"nodeType":"1663","messageId":"1664","endLine":50,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1934","line":51,"column":9,"nodeType":"1663","messageId":"1664","endLine":51,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1935","line":53,"column":10,"nodeType":"1663","messageId":"1664","endLine":53,"endColumn":25},{"ruleId":"1666","severity":1,"message":"1936","line":63,"column":6,"nodeType":"1668","endLine":63,"endColumn":8,"suggestions":"1937"},{"ruleId":"1699","severity":1,"message":"1700","line":138,"column":25,"nodeType":"1701","messageId":"1702","endLine":138,"endColumn":27},{"ruleId":"1699","severity":1,"message":"1700","line":152,"column":41,"nodeType":"1701","messageId":"1702","endLine":152,"endColumn":43},{"ruleId":"1699","severity":1,"message":"1700","line":154,"column":49,"nodeType":"1701","messageId":"1702","endLine":154,"endColumn":51},{"ruleId":"1699","severity":1,"message":"1700","line":156,"column":41,"nodeType":"1701","messageId":"1702","endLine":156,"endColumn":43},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1929","line":16,"column":10,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1744","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":31,"column":22,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1938","line":49,"column":10,"nodeType":"1663","messageId":"1664","endLine":49,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1939","line":49,"column":16,"nodeType":"1663","messageId":"1664","endLine":49,"endColumn":24},{"ruleId":"1661","severity":1,"message":"1940","line":50,"column":9,"nodeType":"1663","messageId":"1664","endLine":50,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1941","line":55,"column":10,"nodeType":"1663","messageId":"1664","endLine":55,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1935","line":59,"column":10,"nodeType":"1663","messageId":"1664","endLine":59,"endColumn":25},{"ruleId":"1666","severity":1,"message":"1942","line":71,"column":6,"nodeType":"1668","endLine":71,"endColumn":8,"suggestions":"1943"},{"ruleId":"1699","severity":1,"message":"1700","line":172,"column":25,"nodeType":"1701","messageId":"1702","endLine":172,"endColumn":27},{"ruleId":"1699","severity":1,"message":"1700","line":188,"column":41,"nodeType":"1701","messageId":"1702","endLine":188,"endColumn":43},{"ruleId":"1699","severity":1,"message":"1700","line":190,"column":49,"nodeType":"1701","messageId":"1702","endLine":190,"endColumn":51},{"ruleId":"1699","severity":1,"message":"1700","line":192,"column":41,"nodeType":"1701","messageId":"1702","endLine":192,"endColumn":43},{"ruleId":"1661","severity":1,"message":"1944","line":2,"column":8,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1740","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1900","line":6,"column":36,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":48},{"ruleId":"1661","severity":1,"message":"1739","line":10,"column":10,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1698","line":12,"column":18,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1945","line":12,"column":55,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":75},{"ruleId":"1661","severity":1,"message":"1946","line":17,"column":34,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1947","line":20,"column":34,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1923","line":24,"column":10,"nodeType":"1663","messageId":"1664","endLine":24,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1917","line":25,"column":9,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1948","line":107,"column":9,"nodeType":"1663","messageId":"1664","endLine":107,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1779","line":153,"column":21,"nodeType":"1780","messageId":"1781","endLine":153,"endColumn":33},{"ruleId":"1778","severity":1,"message":"1779","line":210,"column":19,"nodeType":"1780","messageId":"1781","endLine":210,"endColumn":31},{"ruleId":"1912","severity":1,"message":"1913","line":227,"column":90,"nodeType":"1914","messageId":"1915","endLine":227,"endColumn":115},{"ruleId":"1661","severity":1,"message":"1949","line":14,"column":28,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":36},{"ruleId":"1912","severity":1,"message":"1913","line":61,"column":15,"nodeType":"1914","messageId":"1915","endLine":61,"endColumn":40},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1722","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1950","line":13,"column":3,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":9},{"ruleId":"1661","severity":1,"message":"1741","line":15,"column":36,"nodeType":"1663","messageId":"1664","endLine":15,"endColumn":48},{"ruleId":"1661","severity":1,"message":"1677","line":20,"column":8,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1745","line":31,"column":22,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1790","line":33,"column":42,"nodeType":"1663","messageId":"1664","endLine":33,"endColumn":57},{"ruleId":"1661","severity":1,"message":"1951","line":36,"column":28,"nodeType":"1663","messageId":"1664","endLine":36,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1949","line":39,"column":28,"nodeType":"1663","messageId":"1664","endLine":39,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1952","line":42,"column":32,"nodeType":"1663","messageId":"1664","endLine":42,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1953","line":45,"column":32,"nodeType":"1663","messageId":"1664","endLine":45,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1954","line":48,"column":38,"nodeType":"1663","messageId":"1664","endLine":48,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1955","line":51,"column":46,"nodeType":"1663","messageId":"1664","endLine":51,"endColumn":63},{"ruleId":"1661","severity":1,"message":"1956","line":54,"column":34,"nodeType":"1663","messageId":"1664","endLine":54,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1957","line":57,"column":38,"nodeType":"1663","messageId":"1664","endLine":57,"endColumn":51},{"ruleId":"1666","severity":1,"message":"1748","line":73,"column":6,"nodeType":"1668","endLine":73,"endColumn":8,"suggestions":"1958"},{"ruleId":"1843","severity":1,"message":"1844","line":264,"column":17,"nodeType":"1845","endLine":264,"endColumn":64},{"ruleId":"1912","severity":1,"message":"1913","line":365,"column":21,"nodeType":"1914","messageId":"1915","endLine":365,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1742","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1929","line":17,"column":10,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1923","line":25,"column":10,"nodeType":"1663","messageId":"1664","endLine":25,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1953","line":38,"column":32,"nodeType":"1663","messageId":"1664","endLine":38,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1959","line":54,"column":9,"nodeType":"1663","messageId":"1664","endLine":54,"endColumn":20},{"ruleId":"1666","severity":1,"message":"1960","line":67,"column":6,"nodeType":"1668","endLine":67,"endColumn":8,"suggestions":"1961"},{"ruleId":"1661","severity":1,"message":"1962","line":91,"column":10,"nodeType":"1663","messageId":"1664","endLine":91,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1779","line":286,"column":15,"nodeType":"1780","messageId":"1781","endLine":286,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1963","line":297,"column":11,"nodeType":"1663","messageId":"1664","endLine":297,"endColumn":15},{"ruleId":"1912","severity":1,"message":"1913","line":309,"column":15,"nodeType":"1914","messageId":"1915","endLine":309,"endColumn":40},{"ruleId":"1912","severity":1,"message":"1913","line":491,"column":15,"nodeType":"1914","messageId":"1915","endLine":491,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1677","line":4,"column":8,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1964","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1965","line":6,"column":22,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":32},{"ruleId":"1661","severity":1,"message":"1742","line":7,"column":36,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1966","line":8,"column":8,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1739","line":12,"column":10,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1900","line":14,"column":10,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1741","line":14,"column":24,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1698","line":15,"column":18,"nodeType":"1663","messageId":"1664","endLine":15,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1967","line":20,"column":10,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1968","line":20,"column":17,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":26},{"ruleId":"1661","severity":1,"message":"1949","line":20,"column":28,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1969","line":21,"column":9,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1947","line":23,"column":34,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1970","line":26,"column":48,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":66},{"ruleId":"1666","severity":1,"message":"1971","line":42,"column":6,"nodeType":"1668","endLine":42,"endColumn":8,"suggestions":"1972"},{"ruleId":"1912","severity":1,"message":"1913","line":102,"column":15,"nodeType":"1914","messageId":"1915","endLine":102,"endColumn":40},{"ruleId":"1661","severity":1,"message":"1759","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1677","line":4,"column":8,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1964","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1965","line":6,"column":22,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":32},{"ruleId":"1661","severity":1,"message":"1742","line":7,"column":36,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":51},{"ruleId":"1661","severity":1,"message":"1966","line":8,"column":8,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1739","line":11,"column":10,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1900","line":13,"column":10,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1741","line":13,"column":24,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1744","line":18,"column":20,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":19,"column":22,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1951","line":21,"column":17,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1973","line":22,"column":30,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":39},{"ruleId":"1666","severity":1,"message":"1748","line":32,"column":6,"nodeType":"1668","endLine":32,"endColumn":8,"suggestions":"1974"},{"ruleId":"1661","severity":1,"message":"1860","line":1,"column":38,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":44},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1662","line":5,"column":8,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1677","line":6,"column":8,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1741","line":11,"column":3,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1861","line":12,"column":3,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1742","line":13,"column":3,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1975","line":18,"column":10,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1698","line":19,"column":18,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1744","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1745","line":27,"column":22,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1976","line":31,"column":10,"nodeType":"1663","messageId":"1664","endLine":31,"endColumn":18},{"ruleId":"1666","severity":1,"message":"1748","line":42,"column":6,"nodeType":"1668","endLine":42,"endColumn":8,"suggestions":"1977"},{"ruleId":"1778","severity":1,"message":"1779","line":79,"column":19,"nodeType":"1780","messageId":"1781","endLine":79,"endColumn":31},{"ruleId":"1699","severity":1,"message":"1978","line":169,"column":34,"nodeType":"1701","messageId":"1702","endLine":169,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1979","line":174,"column":10,"nodeType":"1663","messageId":"1664","endLine":174,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1773","line":236,"column":13,"nodeType":"1663","messageId":"1664","endLine":236,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1950","line":7,"column":50,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":56},{"ruleId":"1661","severity":1,"message":"1740","line":9,"column":3,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1741","line":11,"column":3,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1980","line":14,"column":3,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1929","line":18,"column":10,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":18},{"ruleId":"1661","severity":1,"message":"1975","line":18,"column":20,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":26},{"ruleId":"1661","severity":1,"message":"1744","line":26,"column":20,"nodeType":"1663","messageId":"1664","endLine":26,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1788","line":32,"column":10,"nodeType":"1663","messageId":"1664","endLine":32,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1745","line":32,"column":22,"nodeType":"1663","messageId":"1664","endLine":32,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1981","line":49,"column":10,"nodeType":"1663","messageId":"1664","endLine":49,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1982","line":49,"column":15,"nodeType":"1663","messageId":"1664","endLine":49,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1983","line":49,"column":24,"nodeType":"1663","messageId":"1664","endLine":49,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1984","line":50,"column":9,"nodeType":"1663","messageId":"1664","endLine":50,"endColumn":15},{"ruleId":"1666","severity":1,"message":"1748","line":56,"column":6,"nodeType":"1668","endLine":56,"endColumn":8,"suggestions":"1985"},{"ruleId":"1661","severity":1,"message":"1758","line":2,"column":3,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1861","line":3,"column":3,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1986","line":4,"column":3,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1739","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":11,"column":10,"nodeType":"1663","messageId":"1664","endLine":11,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1975","line":12,"column":10,"nodeType":"1663","messageId":"1664","endLine":12,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1672","line":13,"column":23,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1704","line":14,"column":10,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1698","line":14,"column":18,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1916","line":19,"column":9,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1744","line":20,"column":20,"nodeType":"1663","messageId":"1664","endLine":20,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1987","line":22,"column":10,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":23},{"ruleId":"1661","severity":1,"message":"1988","line":22,"column":25,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1989","line":23,"column":10,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1990","line":23,"column":18,"nodeType":"1663","messageId":"1664","endLine":23,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1991","line":28,"column":10,"nodeType":"1663","messageId":"1664","endLine":28,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1992","line":28,"column":21,"nodeType":"1663","messageId":"1664","endLine":28,"endColumn":33},{"ruleId":"1661","severity":1,"message":"1993","line":29,"column":10,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1994","line":29,"column":22,"nodeType":"1663","messageId":"1664","endLine":29,"endColumn":35},{"ruleId":"1666","severity":1,"message":"1995","line":47,"column":6,"nodeType":"1668","endLine":47,"endColumn":8,"suggestions":"1996"},{"ruleId":"1661","severity":1,"message":"1997","line":48,"column":9,"nodeType":"1663","messageId":"1664","endLine":48,"endColumn":25},{"ruleId":"1661","severity":1,"message":"1739","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1672","line":7,"column":23,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1759","line":8,"column":10,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1861","line":18,"column":3,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1741","line":19,"column":3,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1998","line":27,"column":9,"nodeType":"1663","messageId":"1664","endLine":27,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1744","line":36,"column":20,"nodeType":"1663","messageId":"1664","endLine":36,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1999","line":45,"column":10,"nodeType":"1663","messageId":"1664","endLine":45,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1751","line":50,"column":10,"nodeType":"1663","messageId":"1664","endLine":50,"endColumn":15},{"ruleId":"1661","severity":1,"message":"2000","line":51,"column":38,"nodeType":"1663","messageId":"1664","endLine":51,"endColumn":51},{"ruleId":"1666","severity":1,"message":"2001","line":60,"column":6,"nodeType":"1668","endLine":60,"endColumn":8,"suggestions":"2002"},{"ruleId":"1778","severity":1,"message":"1779","line":88,"column":19,"nodeType":"1780","messageId":"1781","endLine":88,"endColumn":31},{"ruleId":"1778","severity":1,"message":"1779","line":144,"column":19,"nodeType":"1780","messageId":"1781","endLine":144,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1785","line":204,"column":10,"nodeType":"1663","messageId":"1664","endLine":204,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1842","line":208,"column":9,"nodeType":"1663","messageId":"1664","endLine":208,"endColumn":21},{"ruleId":"1753","severity":1,"message":"1754","line":255,"column":32,"nodeType":"1755","messageId":"1756","endLine":255,"endColumn":34},{"ruleId":"1843","severity":1,"message":"1844","line":381,"column":25,"nodeType":"1845","endLine":384,"endColumn":27},{"ruleId":"1843","severity":1,"message":"1844","line":415,"column":25,"nodeType":"1845","endLine":418,"endColumn":27},{"ruleId":"1699","severity":1,"message":"1700","line":530,"column":46,"nodeType":"1701","messageId":"1702","endLine":530,"endColumn":48},{"ruleId":"1699","severity":1,"message":"1700","line":831,"column":33,"nodeType":"1701","messageId":"1702","endLine":831,"endColumn":35},{"ruleId":"1699","severity":1,"message":"1700","line":832,"column":28,"nodeType":"1701","messageId":"1702","endLine":832,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1752","line":838,"column":9,"nodeType":"1663","messageId":"1664","endLine":838,"endColumn":19},{"ruleId":"1905","severity":1,"message":"2003","line":928,"column":17,"nodeType":"1845","endLine":934,"endColumn":18},{"ruleId":"1843","severity":1,"message":"1844","line":935,"column":19,"nodeType":"1845","endLine":935,"endColumn":51},{"ruleId":"1843","severity":1,"message":"1844","line":1148,"column":13,"nodeType":"1845","endLine":1148,"endColumn":48},{"ruleId":"1843","severity":1,"message":"1844","line":1446,"column":7,"nodeType":"1845","endLine":1449,"endColumn":9},{"ruleId":"1843","severity":1,"message":"1844","line":1450,"column":7,"nodeType":"1845","endLine":1453,"endColumn":9},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":23,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1741","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1739","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":7,"column":10,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1698","line":8,"column":18,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1744","line":21,"column":20,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":31},{"ruleId":"1666","severity":1,"message":"2004","line":51,"column":6,"nodeType":"1668","endLine":51,"endColumn":8,"suggestions":"2005"},{"ruleId":"1666","severity":1,"message":"1670","line":61,"column":6,"nodeType":"1668","endLine":61,"endColumn":16,"suggestions":"2006"},{"ruleId":"1666","severity":1,"message":"2007","line":67,"column":14,"nodeType":"1691","endLine":67,"endColumn":15},{"ruleId":"1666","severity":1,"message":"2008","line":77,"column":6,"nodeType":"1668","endLine":77,"endColumn":20,"suggestions":"2009"},{"ruleId":"1661","severity":1,"message":"1673","line":88,"column":27,"nodeType":"1663","messageId":"1664","endLine":88,"endColumn":35},{"ruleId":"1661","severity":1,"message":"1672","line":3,"column":23,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":34},{"ruleId":"1661","severity":1,"message":"1741","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":22},{"ruleId":"1661","severity":1,"message":"1739","line":6,"column":10,"nodeType":"1663","messageId":"1664","endLine":6,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1759","line":7,"column":10,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1698","line":8,"column":18,"nodeType":"1663","messageId":"1664","endLine":8,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1917","line":17,"column":9,"nodeType":"1663","messageId":"1664","endLine":17,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1744","line":21,"column":20,"nodeType":"1663","messageId":"1664","endLine":21,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1665","line":22,"column":20,"nodeType":"1663","messageId":"1664","endLine":22,"endColumn":30},{"ruleId":"1666","severity":1,"message":"2010","line":49,"column":6,"nodeType":"1668","endLine":49,"endColumn":8,"suggestions":"2011"},{"ruleId":"1666","severity":1,"message":"2012","line":61,"column":6,"nodeType":"1668","endLine":61,"endColumn":16,"suggestions":"2013"},{"ruleId":"1666","severity":1,"message":"2007","line":66,"column":16,"nodeType":"1691","endLine":66,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1975","line":5,"column":10,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":16},{"ruleId":"1661","severity":1,"message":"1861","line":7,"column":3,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":13},{"ruleId":"1661","severity":1,"message":"1744","line":16,"column":20,"nodeType":"1663","messageId":"1664","endLine":16,"endColumn":31},{"ruleId":"1661","severity":1,"message":"1989","line":19,"column":10,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":16},{"ruleId":"1699","severity":1,"message":"1978","line":21,"column":39,"nodeType":"1701","messageId":"1702","endLine":21,"endColumn":41},{"ruleId":"1666","severity":1,"message":"2014","line":23,"column":6,"nodeType":"1668","endLine":23,"endColumn":28,"suggestions":"2015"},{"ruleId":"1843","severity":1,"message":"1844","line":561,"column":19,"nodeType":"1845","endLine":564,"endColumn":21},{"ruleId":"1891","severity":1,"message":"1892","line":33,"column":3,"nodeType":"1893","messageId":"1894","endLine":47,"endColumn":13},{"ruleId":"1657","replacedBy":"2016"},{"ruleId":"1659","replacedBy":"2017"},{"ruleId":"1661","severity":1,"message":"2018","line":3,"column":34,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":42},{"ruleId":"1661","severity":1,"message":"1676","line":1,"column":28,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1662","line":2,"column":8,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1677","line":3,"column":8,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":22},{"ruleId":"1693","severity":1,"message":"1694","line":6,"column":1,"nodeType":"1695","endLine":17,"endColumn":2},{"ruleId":"1661","severity":1,"message":"1696","line":1,"column":26,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":30},{"ruleId":"1661","severity":1,"message":"1697","line":1,"column":32,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":38},{"ruleId":"1699","severity":1,"message":"1700","line":43,"column":39,"nodeType":"1701","messageId":"1702","endLine":43,"endColumn":41},{"ruleId":"1699","severity":1,"message":"1700","line":88,"column":39,"nodeType":"1701","messageId":"1702","endLine":88,"endColumn":41},{"ruleId":"1661","severity":1,"message":"1708","line":1,"column":8,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":13},{"ruleId":"1709","severity":1,"message":"1710","line":2,"column":80,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":81,"suggestions":"2019"},{"ruleId":"1709","severity":1,"message":"1713","line":2,"column":83,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":84,"suggestions":"2020"},{"ruleId":"1709","severity":1,"message":"1715","line":2,"column":86,"nodeType":"1691","messageId":"1711","endLine":2,"endColumn":87,"suggestions":"2021"},{"ruleId":"1661","severity":1,"message":"1739","line":1,"column":10,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":20},{"ruleId":"1661","severity":1,"message":"2022","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":16},{"ruleId":"1709","severity":1,"message":"1710","line":4,"column":71,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":72,"suggestions":"2023"},{"ruleId":"1709","severity":1,"message":"1713","line":4,"column":74,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":75,"suggestions":"2024"},{"ruleId":"1709","severity":1,"message":"1715","line":4,"column":77,"nodeType":"1691","messageId":"1711","endLine":4,"endColumn":78,"suggestions":"2025"},{"ruleId":"1661","severity":1,"message":"1720","line":10,"column":9,"nodeType":"1663","messageId":"1664","endLine":10,"endColumn":10},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1666","severity":1,"message":"2010","line":19,"column":6,"nodeType":"1668","endLine":19,"endColumn":8,"suggestions":"2026"},{"ruleId":"1843","severity":1,"message":"1844","line":42,"column":26,"nodeType":"1845","endLine":42,"endColumn":53},{"ruleId":"1905","severity":1,"message":"2003","line":59,"column":34,"nodeType":"1845","endLine":59,"endColumn":141},{"ruleId":"1843","severity":1,"message":"1844","line":63,"column":34,"nodeType":"1845","endLine":63,"endColumn":89},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1666","severity":1,"message":"2010","line":24,"column":6,"nodeType":"1668","endLine":24,"endColumn":8,"suggestions":"2027"},{"ruleId":"1843","severity":1,"message":"1844","line":92,"column":84,"nodeType":"1845","endLine":92,"endColumn":111},{"ruleId":"1843","severity":1,"message":"1844","line":100,"column":79,"nodeType":"1845","endLine":100,"endColumn":106},{"ruleId":"1699","severity":1,"message":"1700","line":108,"column":37,"nodeType":"1701","messageId":"1702","endLine":108,"endColumn":39},{"ruleId":"1887","severity":1,"message":"1888","line":108,"column":45,"nodeType":"1845","messageId":"1889","endLine":108,"endColumn":108,"fix":"2028"},{"ruleId":"1843","severity":1,"message":"1844","line":108,"column":108,"nodeType":"1845","endLine":108,"endColumn":147},{"ruleId":"1887","severity":1,"message":"1888","line":108,"column":191,"nodeType":"1845","messageId":"1889","endLine":108,"endColumn":226,"fix":"2029"},{"ruleId":"1843","severity":1,"message":"1844","line":108,"column":226,"nodeType":"1845","endLine":108,"endColumn":265},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"2030","line":19,"column":12,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":16},{"ruleId":"1666","severity":1,"message":"2010","line":24,"column":8,"nodeType":"1668","endLine":24,"endColumn":10,"suggestions":"2031"},{"ruleId":"1661","severity":1,"message":"2032","line":91,"column":23,"nodeType":"1663","messageId":"1664","endLine":91,"endColumn":35},{"ruleId":"1661","severity":1,"message":"2033","line":92,"column":12,"nodeType":"1663","messageId":"1664","endLine":92,"endColumn":21},{"ruleId":"1661","severity":1,"message":"2034","line":92,"column":23,"nodeType":"1663","messageId":"1664","endLine":92,"endColumn":35},{"ruleId":"1661","severity":1,"message":"2035","line":93,"column":12,"nodeType":"1663","messageId":"1664","endLine":93,"endColumn":18},{"ruleId":"1661","severity":1,"message":"2036","line":93,"column":20,"nodeType":"1663","messageId":"1664","endLine":93,"endColumn":29},{"ruleId":"1661","severity":1,"message":"1981","line":94,"column":12,"nodeType":"1663","messageId":"1664","endLine":94,"endColumn":15},{"ruleId":"1661","severity":1,"message":"1983","line":94,"column":17,"nodeType":"1663","messageId":"1664","endLine":94,"endColumn":23},{"ruleId":"1661","severity":1,"message":"2037","line":95,"column":12,"nodeType":"1663","messageId":"1664","endLine":95,"endColumn":19},{"ruleId":"1661","severity":1,"message":"2038","line":95,"column":21,"nodeType":"1663","messageId":"1664","endLine":95,"endColumn":31},{"ruleId":"1843","severity":1,"message":"1844","line":103,"column":110,"nodeType":"1845","endLine":103,"endColumn":228},{"ruleId":"1843","severity":1,"message":"1844","line":104,"column":110,"nodeType":"1845","endLine":104,"endColumn":234},{"ruleId":"1843","severity":1,"message":"1844","line":105,"column":100,"nodeType":"1845","endLine":105,"endColumn":157},{"ruleId":"1843","severity":1,"message":"1844","line":245,"column":25,"nodeType":"1845","endLine":245,"endColumn":79},{"ruleId":"1843","severity":1,"message":"1844","line":259,"column":61,"nodeType":"1845","endLine":259,"endColumn":107},{"ruleId":"1843","severity":1,"message":"1844","line":260,"column":61,"nodeType":"1845","endLine":260,"endColumn":105},{"ruleId":"1843","severity":1,"message":"1844","line":277,"column":61,"nodeType":"1845","endLine":277,"endColumn":107},{"ruleId":"1843","severity":1,"message":"1844","line":278,"column":61,"nodeType":"1845","endLine":278,"endColumn":105},{"ruleId":"1843","severity":1,"message":"1844","line":346,"column":25,"nodeType":"1845","endLine":346,"endColumn":62},{"ruleId":"1887","severity":1,"message":"1888","line":382,"column":42,"nodeType":"1845","messageId":"1889","endLine":382,"endColumn":89,"fix":"2039"},{"ruleId":"1843","severity":1,"message":"1844","line":382,"column":89,"nodeType":"1845","endLine":382,"endColumn":141},{"ruleId":"1661","severity":1,"message":"1963","line":427,"column":23,"nodeType":"1663","messageId":"1664","endLine":427,"endColumn":27},{"ruleId":"1843","severity":1,"message":"1844","line":491,"column":29,"nodeType":"1845","endLine":491,"endColumn":70},{"ruleId":"1905","severity":1,"message":"1906","line":40,"column":17,"nodeType":"1845","endLine":40,"endColumn":46},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1759","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":14},{"ruleId":"1661","severity":1,"message":"2040","line":9,"column":8,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":12},{"ruleId":"1666","severity":1,"message":"2041","line":33,"column":8,"nodeType":"1668","endLine":33,"endColumn":18,"suggestions":"2042"},{"ruleId":"1709","severity":1,"message":"2043","line":60,"column":162,"nodeType":"1691","messageId":"1711","endLine":60,"endColumn":163,"suggestions":"2044"},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1759","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":14},{"ruleId":"1661","severity":1,"message":"1902","line":13,"column":11,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":19},{"ruleId":"1661","severity":1,"message":"1917","line":14,"column":11,"nodeType":"1663","messageId":"1664","endLine":14,"endColumn":18},{"ruleId":"1666","severity":1,"message":"2010","line":20,"column":8,"nodeType":"1668","endLine":20,"endColumn":10,"suggestions":"2045"},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"2046","line":4,"column":8,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":17},{"ruleId":"1661","severity":1,"message":"2047","line":9,"column":10,"nodeType":"1663","messageId":"1664","endLine":9,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1902","line":13,"column":11,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":19},{"ruleId":"1661","severity":1,"message":"2048","line":18,"column":12,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":16},{"ruleId":"1661","severity":1,"message":"2049","line":18,"column":18,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":25},{"ruleId":"1661","severity":1,"message":"2050","line":19,"column":12,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":16},{"ruleId":"1661","severity":1,"message":"2051","line":19,"column":18,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":25},{"ruleId":"1666","severity":1,"message":"2010","line":23,"column":8,"nodeType":"1668","endLine":23,"endColumn":10,"suggestions":"2052"},{"ruleId":"1843","severity":1,"message":"1844","line":61,"column":61,"nodeType":"1845","endLine":61,"endColumn":107},{"ruleId":"1843","severity":1,"message":"1844","line":62,"column":61,"nodeType":"1845","endLine":62,"endColumn":105},{"ruleId":"1843","severity":1,"message":"1844","line":79,"column":61,"nodeType":"1845","endLine":79,"endColumn":107},{"ruleId":"1843","severity":1,"message":"1844","line":80,"column":61,"nodeType":"1845","endLine":80,"endColumn":105},{"ruleId":"1843","severity":1,"message":"1844","line":92,"column":25,"nodeType":"1845","endLine":92,"endColumn":79},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1759","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":14},{"ruleId":"1666","severity":1,"message":"2053","line":22,"column":8,"nodeType":"1668","endLine":22,"endColumn":10,"suggestions":"2054"},{"ruleId":"1661","severity":1,"message":"2055","line":1,"column":27,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1758","line":7,"column":10,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":20},{"ruleId":"1661","severity":1,"message":"1963","line":46,"column":23,"nodeType":"1663","messageId":"1664","endLine":46,"endColumn":27},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1704","line":5,"column":10,"nodeType":"1663","messageId":"1664","endLine":5,"endColumn":16},{"ruleId":"1661","severity":1,"message":"2056","line":7,"column":36,"nodeType":"1663","messageId":"1664","endLine":7,"endColumn":45},{"ruleId":"1661","severity":1,"message":"1917","line":13,"column":11,"nodeType":"1663","messageId":"1664","endLine":13,"endColumn":18},{"ruleId":"1661","severity":1,"message":"2057","line":18,"column":36,"nodeType":"1663","messageId":"1664","endLine":18,"endColumn":47},{"ruleId":"1661","severity":1,"message":"1947","line":19,"column":36,"nodeType":"1663","messageId":"1664","endLine":19,"endColumn":47},{"ruleId":"1887","severity":1,"message":"1888","line":101,"column":50,"nodeType":"1845","messageId":"1889","endLine":101,"endColumn":131,"fix":"2058"},{"ruleId":"1661","severity":1,"message":"1923","line":34,"column":12,"nodeType":"1663","messageId":"1664","endLine":34,"endColumn":19},{"ruleId":"1661","severity":1,"message":"2059","line":39,"column":40,"nodeType":"1663","messageId":"1664","endLine":39,"endColumn":53},{"ruleId":"1666","severity":1,"message":"2060","line":44,"column":8,"nodeType":"1668","endLine":44,"endColumn":10,"suggestions":"2061"},{"ruleId":"1843","severity":1,"message":"1844","line":114,"column":54,"nodeType":"1845","endLine":114,"endColumn":96},{"ruleId":"1843","severity":1,"message":"1844","line":115,"column":73,"nodeType":"1845","endLine":115,"endColumn":118},{"ruleId":"1661","severity":1,"message":"2062","line":4,"column":10,"nodeType":"1663","messageId":"1664","endLine":4,"endColumn":21},{"ruleId":"1661","severity":1,"message":"2063","line":2,"column":15,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":17},{"ruleId":"1661","severity":1,"message":"1676","line":1,"column":17,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":25},{"ruleId":"1661","severity":1,"message":"2055","line":1,"column":27,"nodeType":"1663","messageId":"1664","endLine":1,"endColumn":36},{"ruleId":"1661","severity":1,"message":"1672","line":2,"column":10,"nodeType":"1663","messageId":"1664","endLine":2,"endColumn":21},{"ruleId":"1661","severity":1,"message":"1759","line":3,"column":10,"nodeType":"1663","messageId":"1664","endLine":3,"endColumn":14},{"ruleId":"1666","severity":1,"message":"2064","line":24,"column":8,"nodeType":"1668","endLine":24,"endColumn":10,"suggestions":"2065"},"no-native-reassign",["2066"],"no-negated-in-lhs",["2067"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'setDefault' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListCityFromLocal'. Either include it or remove the dependency array.","ArrayExpression",["2068"],"React Hook useEffect has missing dependencies: '_default' and 'data'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["2069"],"'useSelector' is defined but never used.","'IsActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetLocation'. Either include it or remove the dependency array.",["2070"],"'useState' is defined but never used.","'DateTimePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'APIC_spServiceGetMany'. Either include it or remove the dependency array.",["2071"],"React Hook useEffect has missing dependencies: 'APIC_spServiceGetMany' and '_default'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["2072"],["2073"],"React Hook React.useMemo has a missing dependency: 'type'. Either include it or remove the dependency array.",["2074"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'Redirect' is defined but never used.","'FooterMenu' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'take' is defined but never used.","'cancel' is defined but never used.","'TOKEN_DEVICE' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'call' is defined but never used.","'APIKey' is defined but never used.","'API_END_POINT' is defined but never used.","'authTypes' is defined but never used.","'API_END_POINT_APP_1' is defined but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","unnecessaryEscape",["2075","2076"],"Unnecessary escape character: \\^.",["2077","2078"],"Unnecessary escape character: \\*.",["2079","2080"],["2081","2082"],["2083","2084"],["2085","2086"],"'s' is assigned a value but never used.","'setData' is defined but never used.","'Img' is defined but never used.","'api' is defined but never used.","React Hook useEffect has a missing dependency: 'MB_spOfficer_Get'. Either include it or remove the dependency array.",["2087"],"'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'chooseProvince' is assigned a value but never used.","'setChooseProvince' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'setListOfficer' is assigned a value but never used.",["2066"],["2067"],"'chooseWard' is assigned a value but never used.","'setChooseWard' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'columns' is assigned a value but never used.","'data' is assigned a value but never used.","'useCookies' is defined but never used.","'Alertsuccess' is defined but never used.","'DecodeString' is defined but never used.","'PaginationTable' is defined but never used.","'mainAction' is defined but never used.","'setCustomer' is assigned a value but never used.","'setCustomerID' is assigned a value but never used.","'UploadError' is assigned a value but never used.","'setTotalSheet' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Customer' and 'history'. Either include them or remove the dependency array.",["2088"],"'setChecked' is assigned a value but never used.","'State' is assigned a value but never used.","'allChecked' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'connect' is defined but never used.","'Alerterror' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'ChartTemp' is defined but never used.","'useInput' is defined but never used.","'DataChart' is assigned a value but never used.","'setDataChart' is assigned a value but never used.","'Status7' is assigned a value but never used.",["2089"],"'convert' is assigned a value but never used.","'CustomerAction' is defined but never used.","'LadingCodeRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Customer', 'history', and 'location.Code'. Either include them or remove the dependency array.",["2090"],"'result' is assigned a value but never used.","'resultNotify' is assigned a value but never used.","'setAppAPIKey' is assigned a value but never used.",["2091"],"'firtdatasearch' is assigned a value but never used.","'clickRow' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'APIC_spCustomerComplainList_clear' is assigned a value but never used.","'useDebugValue' is defined but never used.","'Alertwarning' is defined but never used.","'ViewDetail' is assigned a value but never used.","'setViewDetail' is assigned a value but never used.","'setPostOfficeId' is assigned a value but never used.","'CustomerID' is assigned a value but never used.","'CustomerName' is assigned a value but never used.","'setCustomerName' is assigned a value but never used.","'CustomerPhone' is assigned a value but never used.","'setCustomerPhone' is assigned a value but never used.","'CustomerAddress' is assigned a value but never used.","'setCustomerAddress' is assigned a value but never used.","'CustomerCompany' is assigned a value but never used.","'setCustomerCompany' is assigned a value but never used.","'RecipientMeno' is assigned a value but never used.","'bindParnerCode' is assigned a value but never used.","'ParnerCodeRef' is assigned a value but never used.","'IsPhuQuocIsLand' is assigned a value but never used.","'bindIsPhuQuocIsLand' is assigned a value but never used.","'bindPhuQuocIsLand' is assigned a value but never used.","'bindIsProtocol' is assigned a value but never used.","'setIsProtocol' is assigned a value but never used.","'IsParking' is assigned a value but never used.","'setIsParking' is assigned a value but never used.","'bindIsHD' is assigned a value but never used.","'bindIsDelivery' is assigned a value but never used.","'setIsDelivery' is assigned a value but never used.","'bindIsNumberCoCheck' is assigned a value but never used.","'IsSupperMarket' is assigned a value but never used.","'bindIsSupperMarket' is assigned a value but never used.","'bindSupperMarket' is assigned a value but never used.","'IsSelectService' is assigned a value but never used.","'setIsSelectService' is assigned a value but never used.","'bindCod' is assigned a value but never used.","'bindInsured' is assigned a value but never used.","'CodRef' is assigned a value but never used.","'InsuredRef' is assigned a value but never used.","'InsuredPrices' is assigned a value but never used.","'bindInsuredPrices' is assigned a value but never used.","'CODPrices' is assigned a value but never used.","'bindCODPrices' is assigned a value but never used.","'Searchcode' is assigned a value but never used.","'bindSearchcode' is assigned a value but never used.","'InsuredPricesRef' is assigned a value but never used.","'CODPricesRef' is assigned a value but never used.","'SearchcodeRef' is assigned a value but never used.","'getCustomerRecipientLoad' is assigned a value but never used.","'setCustomerRecipientLoad' is assigned a value but never used.","'dataAddress' is assigned a value but never used.","'setdataAddress' is assigned a value but never used.","'IsAcctive' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.","'disablerecipient' is assigned a value but never used.","'showinggtgt' is assigned a value but never used.","'showingdetail' is assigned a value but never used.","'phoneReg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spLadingGetMany', 'APIC_spServiceGetMany', 'Customer', 'ReadLadingDraft', and 'history'. Either include them or remove the dependency array.",["2092"],["2093"],"'LadingDetail' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RegPhone' is assigned a value but never used.","'StreetSlect' is assigned a value but never used.","'GetLatLng' is assigned a value but never used.","no-dupe-keys","Duplicate key 'PPXDPercent'.","ObjectExpression","React Hook useEffect has a missing dependency: 'CPN_spLocationCheckCustomer'. Either include it or remove the dependency array.",["2094"],"React Hook useEffect has a missing dependency: 'CPN_spLading_PriceMain'. Either include it or remove the dependency array.",["2095"],"React Hook useEffect has a missing dependency: 'CPN_spLadingGetAnotherServiceMoney'. Either include it or remove the dependency array.",["2096"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useRef' is defined but never used.","'FormatDate' is defined but never used.","'ReportAction' is defined but never used.",["2097"],"'NoData' is assigned a value but never used.","'setCode' is assigned a value but never used.",["2098"],"'setViewList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Customer', '_Init', and 'history'. Either include them or remove the dependency array.",["2099"],"'_date' is assigned a value but never used.","'a' is assigned a value but never used.",["2100"],["2101"],"'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.",["2102"],"'changeSelectMonth' is assigned a value but never used.",["2103"],"'ReportDataDetail' is assigned a value but never used.",["2104"],"'bindFromDate' is assigned a value but never used.","'bindToDate' is assigned a value but never used.","'FromDateRef' is assigned a value but never used.","'ToDateRef' is assigned a value but never used.",["2105"],"'useDispatch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"2106","text":"2107"},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'useHistory' is defined but never used.","'Route' is defined but never used.","'EncodeString' is defined but never used.","'setCodesearch' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'APIC_spCustomerGetByGroup'. Either include it or remove the dependency array.",["2108"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'CurrentUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["2109"],"'LadingTemporaryAction' is defined but never used.",["2110"],"'disable' is assigned a value but never used.","'ServiceMeno' is assigned a value but never used.","'setServiceMeno' is assigned a value but never used.",["2111"],"'params' is assigned a value but never used.","'TimelineTransportAction' is defined but never used.","'Location' is defined but never used.",["2112"],["2113"],"'Company' is assigned a value but never used.","'bindCompany' is assigned a value but never used.","'CompanyRef' is assigned a value but never used.","'NoResultMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spCustomerSenderAddressList', 'Customer', and 'history'. Either include them or remove the dependency array.",["2114"],"'Code' is assigned a value but never used.","'bindCode' is assigned a value but never used.","'CodeRef' is assigned a value but never used.","'AddressOld' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spCustomerRecipientLoad', 'Customer', and 'history'. Either include them or remove the dependency array.",["2115"],"'FacebookLogin' is defined but never used.","'FACEBOOK_LOGIN_APPID' is defined but never used.","'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'responseFacebook' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'Avarta' is defined but never used.","'setPhone' is assigned a value but never used.","'setCompany' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","'setBankNumberName' is assigned a value but never used.","'setBankName' is assigned a value but never used.","'setBankBranch' is assigned a value but never used.",["2116"],"'SocialIdRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCustomerName' and 'setEmail'. Either include them or remove the dependency array.",["2117"],"'ErrWard' is assigned a value but never used.","'list' is assigned a value but never used.","'SelectCity' is defined but never used.","'FormSearch' is defined but never used.","'Script' is defined but never used.","'Email' is assigned a value but never used.","'bindEmail' is assigned a value but never used.","'EmailRef' is assigned a value but never used.","'setPasswordConfirm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'APIC_CustomerCheckResetPass'. Either include it or remove the dependency array.",["2118"],"'setSMSOTP' is assigned a value but never used.",["2119"],"'Lading' is defined but never used.","'ShowForm' is assigned a value but never used.",["2120"],"Expected '!==' and instead saw '!='.","'TotalBill' is assigned a value but never used.","'GetCookieValue' is defined but never used.","'COD' is assigned a value but never used.","'bindCOD' is assigned a value but never used.","'setCOD' is assigned a value but never used.","'CODRef' is assigned a value but never used.",["2121"],"'FormatMoney' is defined but never used.","'HistoryLading' is assigned a value but never used.","'setHistoryLading' is assigned a value but never used.","'Images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'reasonStr' is assigned a value but never used.","'setreasonStr' is assigned a value but never used.","'ShowDetail' is assigned a value but never used.","'setShowDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Customer', 'history', and 'location.search'. Either include them or remove the dependency array.",["2122"],"'APIC_spLadingGet' is assigned a value but never used.","'config' is assigned a value but never used.","'Checked' is assigned a value but never used.","'setLadingcode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spLadingGetMany', 'Customer', 'Status', and 'history'. Either include them or remove the dependency array.",["2123"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'Customer', 'history', and 'onGetCustomerSenderAddress'. Either include them or remove the dependency array.",["2124"],["2125"],"Assignments to the 'onLoad' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: '_default' and 'onGetCustomerSenderAddress'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["2126"],"React Hook useEffect has a missing dependency: 'onGetData'. Either include it or remove the dependency array.",["2127"],"React Hook useEffect has missing dependencies: '_default', 'data', and 'onGetData'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["2128"],"React Hook useEffect has a missing dependency: 'GetLadingDetail'. Either include it or remove the dependency array.",["2129"],["2066"],["2067"],"'LeftMenu' is defined but never used.",["2130","2131"],["2132","2133"],["2134","2135"],"'object' is defined but never used.",["2136","2137"],["2138","2139"],["2140","2141"],["2142"],["2143"],{"range":"2144","text":"2107"},{"range":"2145","text":"2107"},"'Apps' is assigned a value but never used.",["2146"],"'setShowPrice' is assigned a value but never used.","'ServiceId' is assigned a value but never used.","'setServiceId' is assigned a value but never used.","'Weight' is assigned a value but never used.","'setWeight' is assigned a value but never used.","'Insured' is assigned a value but never used.","'setInsured' is assigned a value but never used.",{"range":"2147","text":"2107"},"'I18n' is defined but never used.","React Hook useEffect has a missing dependency: 'onGetDetail'. Either include it or remove the dependency array.",["2148"],"Unnecessary escape character: \\\".",["2149","2150"],["2151"],"'ReactHtml' is defined but never used.","'getTilesIds' is defined but never used.","'Info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'Keys' is assigned a value but never used.","'setKeys' is assigned a value but never used.",["2152"],"React Hook useEffect has missing dependencies: 'location.search' and 'onGetData'. Either include them or remove the dependency array.",["2153"],"'useEffect' is defined but never used.","'ScrollTop' is defined but never used.","'setUserName' is assigned a value but never used.",{"range":"2154","text":"2107"},"'settextFilter' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_Init'. Either include it or remove the dependency array.",["2155"],"'currentLang' is defined but never used.","'VN' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'location.search', and 'onGetData'. Either include them or remove the dependency array.",["2156"],"no-global-assign","no-unsafe-negation",{"desc":"2157","fix":"2158"},{"desc":"2159","fix":"2160"},{"desc":"2161","fix":"2162"},{"desc":"2163","fix":"2164"},{"desc":"2165","fix":"2166"},{"desc":"2161","fix":"2167"},{"desc":"2168","fix":"2169"},{"messageId":"2170","fix":"2171","desc":"2172"},{"messageId":"2173","fix":"2174","desc":"2175"},{"messageId":"2170","fix":"2176","desc":"2172"},{"messageId":"2173","fix":"2177","desc":"2175"},{"messageId":"2170","fix":"2178","desc":"2172"},{"messageId":"2173","fix":"2179","desc":"2175"},{"messageId":"2170","fix":"2180","desc":"2172"},{"messageId":"2173","fix":"2181","desc":"2175"},{"messageId":"2170","fix":"2182","desc":"2172"},{"messageId":"2173","fix":"2183","desc":"2175"},{"messageId":"2170","fix":"2184","desc":"2172"},{"messageId":"2173","fix":"2185","desc":"2175"},{"desc":"2186","fix":"2187"},{"desc":"2188","fix":"2189"},{"desc":"2188","fix":"2190"},{"desc":"2191","fix":"2192"},{"desc":"2188","fix":"2193"},{"desc":"2194","fix":"2195"},{"desc":"2196","fix":"2197"},{"desc":"2198","fix":"2199"},{"desc":"2200","fix":"2201"},{"desc":"2202","fix":"2203"},{"desc":"2188","fix":"2204"},{"desc":"2188","fix":"2205"},{"desc":"2206","fix":"2207"},{"desc":"2206","fix":"2208"},{"desc":"2206","fix":"2209"},{"desc":"2188","fix":"2210"},{"desc":"2206","fix":"2211"},{"desc":"2188","fix":"2212"},{"desc":"2188","fix":"2213"},[391,391]," rel=\"noreferrer\"",{"desc":"2214","fix":"2215"},{"desc":"2216","fix":"2217"},{"desc":"2206","fix":"2218"},{"desc":"2206","fix":"2219"},{"desc":"2206","fix":"2220"},{"desc":"2188","fix":"2221"},{"desc":"2222","fix":"2223"},{"desc":"2224","fix":"2225"},{"desc":"2188","fix":"2226"},{"desc":"2227","fix":"2228"},{"desc":"2229","fix":"2230"},{"desc":"2188","fix":"2231"},{"desc":"2188","fix":"2232"},{"desc":"2188","fix":"2233"},{"desc":"2234","fix":"2235"},{"desc":"2236","fix":"2237"},{"desc":"2238","fix":"2239"},{"desc":"2159","fix":"2240"},{"desc":"2241","fix":"2242"},{"desc":"2243","fix":"2244"},{"desc":"2245","fix":"2246"},{"desc":"2247","fix":"2248"},{"messageId":"2170","fix":"2249","desc":"2172"},{"messageId":"2173","fix":"2250","desc":"2175"},{"messageId":"2170","fix":"2251","desc":"2172"},{"messageId":"2173","fix":"2252","desc":"2175"},{"messageId":"2170","fix":"2253","desc":"2172"},{"messageId":"2173","fix":"2254","desc":"2175"},{"messageId":"2170","fix":"2255","desc":"2172"},{"messageId":"2173","fix":"2256","desc":"2175"},{"messageId":"2170","fix":"2257","desc":"2172"},{"messageId":"2173","fix":"2258","desc":"2175"},{"messageId":"2170","fix":"2259","desc":"2172"},{"messageId":"2173","fix":"2260","desc":"2175"},{"desc":"2243","fix":"2261"},{"desc":"2243","fix":"2262"},[4705,4705],[4823,4823],{"desc":"2243","fix":"2263"},[21261,21261],{"desc":"2264","fix":"2265"},{"messageId":"2170","fix":"2266","desc":"2172"},{"messageId":"2173","fix":"2267","desc":"2175"},{"desc":"2243","fix":"2268"},{"desc":"2243","fix":"2269"},{"desc":"2270","fix":"2271"},[4527,4527],{"desc":"2272","fix":"2273"},{"desc":"2274","fix":"2275"},"Update the dependencies array to be: [getListCityFromLocal]",{"range":"2276","text":"2277"},"Update the dependencies array to be: [_default, data, onActive]",{"range":"2278","text":"2279"},"Update the dependencies array to be: [onActive, ParentID, onGetLocation]",{"range":"2280","text":"2281"},"Update the dependencies array to be: [APIC_spServiceGetMany]",{"range":"2282","text":"2283"},"Update the dependencies array to be: [APIC_spServiceGetMany, _default, onActive]",{"range":"2284","text":"2285"},{"range":"2286","text":"2281"},"Update the dependencies array to be: [type]",{"range":"2287","text":"2288"},"removeEscape",{"range":"2289","text":"2290"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2291","text":"2292"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2293","text":"2290"},{"range":"2294","text":"2292"},{"range":"2295","text":"2290"},{"range":"2296","text":"2292"},{"range":"2297","text":"2290"},{"range":"2298","text":"2292"},{"range":"2299","text":"2290"},{"range":"2300","text":"2292"},{"range":"2301","text":"2290"},{"range":"2302","text":"2292"},"Update the dependencies array to be: [MB_spOfficer_Get]",{"range":"2303","text":"2304"},"Update the dependencies array to be: [Customer, history]",{"range":"2305","text":"2306"},{"range":"2307","text":"2306"},"Update the dependencies array to be: [Customer, history, location.Code]",{"range":"2308","text":"2309"},{"range":"2310","text":"2306"},"Update the dependencies array to be: [APIC_spLadingGetMany, APIC_spServiceGetMany, Customer, ReadLadingDraft, history]",{"range":"2311","text":"2312"},"Update the dependencies array to be: [APIC_spServiceGetMany, IsRunservice]",{"range":"2313","text":"2314"},"Update the dependencies array to be: [CPN_spLocationCheckCustomer, IsChangeWard]",{"range":"2315","text":"2316"},"Update the dependencies array to be: [CPN_spLading_PriceMain, IsChangePriceMain]",{"range":"2317","text":"2318"},"Update the dependencies array to be: [CPN_spLadingGetAnotherServiceMoney, IsChangeVatPpxd]",{"range":"2319","text":"2320"},{"range":"2321","text":"2306"},{"range":"2322","text":"2306"},"Update the dependencies array to be: [Customer, _Init, history]",{"range":"2323","text":"2324"},{"range":"2325","text":"2324"},{"range":"2326","text":"2324"},{"range":"2327","text":"2306"},{"range":"2328","text":"2324"},{"range":"2329","text":"2306"},{"range":"2330","text":"2306"},"Update the dependencies array to be: [APIC_spCustomerGetByGroup]",{"range":"2331","text":"2332"},"Update the dependencies array to be: [location.pathname]",{"range":"2333","text":"2334"},{"range":"2335","text":"2324"},{"range":"2336","text":"2324"},{"range":"2337","text":"2324"},{"range":"2338","text":"2306"},"Update the dependencies array to be: [APIC_spCustomerSenderAddressList, Customer, history]",{"range":"2339","text":"2340"},"Update the dependencies array to be: [APIC_spCustomerRecipientLoad, Customer, history]",{"range":"2341","text":"2342"},{"range":"2343","text":"2306"},"Update the dependencies array to be: [setCustomerName, setEmail]",{"range":"2344","text":"2345"},"Update the dependencies array to be: [APIC_CustomerCheckResetPass]",{"range":"2346","text":"2347"},{"range":"2348","text":"2306"},{"range":"2349","text":"2306"},{"range":"2350","text":"2306"},"Update the dependencies array to be: [Customer, history, location.search]",{"range":"2351","text":"2352"},"Update the dependencies array to be: [APIC_spLadingGetMany, Customer, Status, history]",{"range":"2353","text":"2354"},"Update the dependencies array to be: [Customer, history, onGetCustomerSenderAddress]",{"range":"2355","text":"2356"},{"range":"2357","text":"2279"},"Update the dependencies array to be: [_default, defaultLabel, onGetCustomerSenderAddress]",{"range":"2358","text":"2359"},"Update the dependencies array to be: [onGetData]",{"range":"2360","text":"2361"},"Update the dependencies array to be: [_default, data, onActive, onGetData]",{"range":"2362","text":"2363"},"Update the dependencies array to be: [GetLadingDetail, LadingCode, LadingId]",{"range":"2364","text":"2365"},{"range":"2366","text":"2290"},{"range":"2367","text":"2292"},{"range":"2368","text":"2290"},{"range":"2369","text":"2292"},{"range":"2370","text":"2290"},{"range":"2371","text":"2292"},{"range":"2372","text":"2290"},{"range":"2373","text":"2292"},{"range":"2374","text":"2290"},{"range":"2375","text":"2292"},{"range":"2376","text":"2290"},{"range":"2377","text":"2292"},{"range":"2378","text":"2361"},{"range":"2379","text":"2361"},{"range":"2380","text":"2361"},"Update the dependencies array to be: [location, onGetDetail]",{"range":"2381","text":"2382"},{"range":"2383","text":"2290"},{"range":"2384","text":"2292"},{"range":"2385","text":"2361"},{"range":"2386","text":"2361"},"Update the dependencies array to be: [location.search, onGetData]",{"range":"2387","text":"2388"},"Update the dependencies array to be: [_Init]",{"range":"2389","text":"2390"},"Update the dependencies array to be: [history, location.search, onGetData]",{"range":"2391","text":"2392"},[3457,3459],"[getListCityFromLocal]",[3668,3678],"[_default, data, onActive]",[1391,1410],"[onActive, ParentID, onGetLocation]",[708,710],"[APIC_spServiceGetMany]",[855,865],"[APIC_spServiceGetMany, _default, onActive]",[1410,1429],[397,399],"[type]",[126,127],"",[126,126],"\\",[129,130],[129,129],[132,133],[132,132],[149,150],[149,149],[152,153],[152,152],[155,156],[155,155],[1210,1212],"[MB_spOfficer_Get]",[1605,1607],"[Customer, history]",[2096,2098],[1831,1833],"[Customer, history, location.Code]",[1645,1647],[12566,12568],"[APIC_spLadingGetMany, APIC_spServiceGetMany, Customer, ReadLadingDraft, history]",[12742,12756],"[APIC_spServiceGetMany, IsRunservice]",[72067,72081],"[CPN_spLocationCheckCustomer, IsChangeWard]",[73123,73142],"[CPN_spLading_PriceMain, IsChangePriceMain]",[74869,74886],"[CPN_spLadingGetAnotherServiceMoney, IsChangeVatPpxd]",[1482,1484],[1388,1390],[1830,1832],"[Customer, _Init, history]",[2072,2074],[1806,1808],[1579,1581],[1806,1808],[1782,1784],[2032,2034],[1506,1508],"[APIC_spCustomerGetByGroup]",[1069,1071],"[location.pathname]",[1123,1125],[1781,1783],[1402,1404],[1764,1766],[2201,2203],"[APIC_spCustomerSenderAddressList, Customer, history]",[2463,2465],"[APIC_spCustomerRecipientLoad, Customer, history]",[2811,2813],[2602,2604],"[setCustomerName, setEmail]",[1728,1730],"[APIC_CustomerCheckResetPass]",[1357,1359],[1610,1612],[2163,2165],[1579,1581],"[Customer, history, location.search]",[2196,2198],"[APIC_spLadingGetMany, Customer, Status, history]",[1908,1910],"[Customer, history, onGetCustomerSenderAddress]",[2119,2129],[2422,2436],"[_default, defaultLabel, onGetCustomerSenderAddress]",[1410,1412],"[onGetData]",[1669,1679],"[_default, data, onActive, onGetData]",[791,813],"[GetLadingDetail, LadingCode, LadingId]",[126,127],[126,126],[129,130],[129,129],[132,133],[132,132],[149,150],[149,149],[152,153],[152,152],[155,156],[155,155],[592,594],[775,777],[838,840],[1201,1211],"[location, onGetDetail]",[2189,2190],[2189,2189],[650,652],[854,856],[801,803],"[location.search, onGetData]",[1455,1457],"[_Init]",[916,918],"[history, location.search, onGetData]"]